{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/donnees/club-list/club-list.component.css","webpack:///./src/app/donnees/club-list/club-list.component.html","webpack:///./src/app/donnees/club-list/club-list.component.ts","webpack:///./src/app/donnees/club/club.component.css","webpack:///./src/app/donnees/club/club.component.html","webpack:///./src/app/donnees/club/club.component.ts","webpack:///./src/app/donnees/competition-list/competition-list.component.css","webpack:///./src/app/donnees/competition-list/competition-list.component.html","webpack:///./src/app/donnees/competition-list/competition-list.component.ts","webpack:///./src/app/donnees/competition/competition.component.css","webpack:///./src/app/donnees/competition/competition.component.html","webpack:///./src/app/donnees/competition/competition.component.ts","webpack:///./src/app/donnees/donnees.component.css","webpack:///./src/app/donnees/donnees.component.html","webpack:///./src/app/donnees/donnees.component.ts","webpack:///./src/app/donnees/joueur-list/joueur-list.component.css","webpack:///./src/app/donnees/joueur-list/joueur-list.component.html","webpack:///./src/app/donnees/joueur-list/joueur-list.component.ts","webpack:///./src/app/donnees/joueur/joueur.component.css","webpack:///./src/app/donnees/joueur/joueur.component.html","webpack:///./src/app/donnees/joueur/joueur.component.ts","webpack:///./src/app/donnees/saison-list/Saison-list.component.css","webpack:///./src/app/donnees/saison-list/Saison-list.component.html","webpack:///./src/app/donnees/saison-list/saison-list.component.ts","webpack:///./src/app/donnees/saison/saison.component.css","webpack:///./src/app/donnees/saison/saison.component.html","webpack:///./src/app/donnees/saison/saison.component.ts","webpack:///./src/app/dossiers/confirmation/Confirmation.component.css","webpack:///./src/app/dossiers/confirmation/Confirmation.component.html","webpack:///./src/app/dossiers/confirmation/confirmation.component.ts","webpack:///./src/app/dossiers/dossier-list/dossier-list.component.css","webpack:///./src/app/dossiers/dossier-list/dossier-list.component.html","webpack:///./src/app/dossiers/dossier-list/dossier-list.component.ts","webpack:///./src/app/dossiers/dossier/dossier.component.css","webpack:///./src/app/dossiers/dossier/dossier.component.html","webpack:///./src/app/dossiers/dossier/dossier.component.ts","webpack:///./src/app/dossiers/dossiers.component.css","webpack:///./src/app/dossiers/dossiers.component.html","webpack:///./src/app/dossiers/dossiers.component.ts","webpack:///./src/app/home/dashboard/dashboard.component.css","webpack:///./src/app/home/dashboard/dashboard.component.html","webpack:///./src/app/home/dashboard/dashboard.component.ts","webpack:///./src/app/home/homelayout/homelayout.component.css","webpack:///./src/app/home/homelayout/homelayout.component.html","webpack:///./src/app/home/homelayout/homelayout.component.ts","webpack:///./src/app/home/login/login.component.css","webpack:///./src/app/home/login/login.component.html","webpack:///./src/app/home/login/login.component.ts","webpack:///./src/app/parametre/parametre.component.css","webpack:///./src/app/parametre/parametre.component.html","webpack:///./src/app/parametre/parametre.component.ts","webpack:///./src/app/shared/Confirmation.service.ts","webpack:///./src/app/shared/club.service.ts","webpack:///./src/app/shared/competition.service.ts","webpack:///./src/app/shared/dossier.service.ts","webpack:///./src/app/shared/joueur.service.ts","webpack:///./src/app/shared/profil.service.ts","webpack:///./src/app/shared/saison.service.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/shared/utilisateur.service.ts","webpack:///./src/app/user/sign-in/sign-in.component.css","webpack:///./src/app/user/sign-in/sign-in.component.html","webpack:///./src/app/user/sign-in/sign-in.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/utilisateurs/profil-list/profil-list.component.css","webpack:///./src/app/utilisateurs/profil-list/profil-list.component.html","webpack:///./src/app/utilisateurs/profil-list/profil-list.component.ts","webpack:///./src/app/utilisateurs/profil/profil.component.css","webpack:///./src/app/utilisateurs/profil/profil.component.html","webpack:///./src/app/utilisateurs/profil/profil.component.ts","webpack:///./src/app/utilisateurs/utilisateur-list/utilisateur-list.component.css","webpack:///./src/app/utilisateurs/utilisateur-list/utilisateur-list.component.html","webpack:///./src/app/utilisateurs/utilisateur-list/utilisateur-list.component.ts","webpack:///./src/app/utilisateurs/utilisateur/utilisateur.component.css","webpack:///./src/app/utilisateurs/utilisateur/utilisateur.component.html","webpack:///./src/app/utilisateurs/utilisateur/utilisateur.component.ts","webpack:///./src/app/utilisateurs/utilisateurs.component.css","webpack:///./src/app/utilisateurs/utilisateurs.component.html","webpack:///./src/app/utilisateurs/utilisateurs.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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AAE,EAAC,CAAC,EAAC;IACjC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC;IACjC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC;IACjC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC;IACjC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC;IACjC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC;IACjC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC;IACjC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC;IACjC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC;IACjC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IAClC,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IACnC,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IACnC,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IACnC,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IACnC,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IACnC,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IACnC,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IACnC,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IACnC,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IACnC,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IACnC,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IACnC,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IACnC,EAAC,KAAK,EAAC,EAAE,EAAC,OAAO,EAAC,EAAE,EAAC,KAAK,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,EAAC;IACnC,EAAC,KAAK,EAAC,EAAE,EAAC,O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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule,NavigationEnd } from '@angular/router';\nimport { DossiersComponent } from './dossiers/dossiers.component';\nimport { DossierComponent } from './dossiers/dossier/dossier.component';\nimport { UtilisateurListComponent } from './utilisateurs/utilisateur-list/utilisateur-list.component';\nimport { ProfilListComponent } from './utilisateurs/profil-list/profil-list.component';\nimport { SaisonListComponent } from './donnees/saison-list/saison-list.component';\nimport { CompetitionListComponent } from './donnees/competition-list/competition-list.component';\nimport { ClubListComponent } from './donnees/club-list/club-list.component';\nimport {JoueurListComponent} from './donnees/joueur-list/joueur-list.component';\nimport {DossierListComponent} from './dossiers/dossier-list/dossier-list.component';\nimport {HomelayoutComponent} from './home/homelayout/homelayout.component';\nimport {LoginComponent} from './home/login/login.component';\nimport { SignInComponent } from './user/sign-in/sign-in.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { DashboardComponent } from './home/dashboard/dashboard.component';\nconst routes: Routes = [\n  {\n    path: 'home',                       // {1}\n    component: HomelayoutComponent,canActivate:[AuthGuard],\n      // {2}\n    children: [\n      {path:'utilisateurs',component:DossiersComponent},\n{path:'utilisateur-list',component:UtilisateurListComponent},\n{path:'dossier-list',component:DossierListComponent},\n{path:'profil',component:ProfilListComponent,canActivate:[AuthGuard]},\n{path:'saison',component:SaisonListComponent},\n{path:'competition',component:CompetitionListComponent},\n{path:'joueur',component:JoueurListComponent},\n{path:'club',component:ClubListComponent},\n{path:'dossier',component:DossierComponent},\n{path:'dashboard',component:DashboardComponent},\n{path:'dossier/:id',component:DossierComponent},\n    ]\n  },\n  {\n    path: 'login',\n    component: SignInComponent, // {4}\n    children: [\n      {\n        path: 'login',\n        component: SignInComponent   // {5}\n      }\n    ]\n  }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport { Router, NavigationEnd} from '@angular/router'; \nimport { Location } from \"@angular/common\";\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular7';\n  constructor(private router: Router,private location: Location){\n    //subscribes every changes of your route\n    this.router.events.subscribe((event) => {\n        if (event instanceof NavigationEnd){\n           //scroll to top\n           console.log(location.path());\n\n         \n           \n          \n        }\n     })\n }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport {DataTableModule} from \"angular-6-datatable\";\nimport { UtilisateursComponent } from './utilisateurs/utilisateurs.component';\nimport { UtilisateurComponent } from './utilisateurs/utilisateur/utilisateur.component';\nimport { UtilisateurListComponent } from './utilisateurs/utilisateur-list/utilisateur-list.component';\nimport { UtilisateurService } from './shared/utilisateur.service';\nimport {HttpClientModule} from \"@angular/common/http\";\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatPaginatorModule, MatCommonModule, MatStepperModule} from '@angular/material';\nimport { ToastrModule } from 'ngx-toastr';\nimport { ParametreComponent } from './parametre/parametre.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule,MatCardModule,MatMenuModule,MatProgressSpinnerModule,MatFormFieldModule,MatSelectModule,MatCheckboxModule,MatNativeDateModule,MatRadioModule,MatDatepickerModule,MatInputModule,MatRippleModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule,MatTableModule,MatSortModule,MatGridListModule } from '@angular/material';\nimport { DossiersComponent } from './dossiers/dossiers.component';\n\nimport { DossierComponent } from './dossiers/dossier/dossier.component';\nimport { DossierListComponent } from './dossiers/dossier-list/dossier-list.component';\nimport { ProfilComponent } from './utilisateurs/profil/profil.component';\nimport { ProfilListComponent } from './utilisateurs/profil-list/profil-list.component';\nimport { ProfilService } from './shared/profil.service';\nimport { DonneesComponent } from './donnees/donnees.component';\nimport { SaisonComponent } from './donnees/saison/saison.component';\nimport { SaisonListComponent } from './donnees/saison-list/saison-list.component';\nimport { SaisonService } from './shared/saison.service';\nimport { CompetitionComponent } from './donnees/competition/competition.component';\nimport { CompetitionListComponent } from './donnees/competition-list/competition-list.component';\n\nimport { DatePipe } from '@angular/common';\nimport { JoueurComponent } from './donnees/joueur/joueur.component';\nimport { JoueurService } from './shared/joueur.service';\nimport { clubComponent } from './donnees/club/club.component';\nimport { ClubListComponent } from './donnees/club-list/club-list.component';\nimport { JoueurListComponent } from './donnees/joueur-list/joueur-list.component';\nimport { CompetitionService } from './shared/competition.service';\nimport { ClubService } from './shared/club.service';\nimport { UserComponent } from './user/user.component';\nimport { SignInComponent } from './user/sign-in/sign-in.component';\nimport { HomelayoutComponent } from './home/homelayout/homelayout.component';\nimport { LoginComponent } from './home/login/login.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { DashboardComponent } from './home/dashboard/dashboard.component';\nimport { ConfirmationComponent } from './dossiers/confirmation/confirmation.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    UtilisateursComponent,\n    UtilisateurComponent,\n    UtilisateurListComponent,\n    ParametreComponent,\n    DossiersComponent,\n    DossierComponent,\n   \n    DossierListComponent,\n    ProfilComponent,\n    ProfilListComponent,\n    DonneesComponent,\n    SaisonComponent,\n    SaisonListComponent,\n    CompetitionComponent,\n    CompetitionListComponent,\n    JoueurComponent,\n    clubComponent,\n    ClubListComponent,\n    JoueurListComponent,\n    UserComponent,\n    SignInComponent,\n    HomelayoutComponent,\n    LoginComponent,\n    DashboardComponent,\n    ConfirmationComponent,  \n  ],\n  imports: [\n    BrowserModule,\n    MatCardModule,\n    MatStepperModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    DataTableModule,\n    MatDialogModule,\n    CdkTableModule,\n    MatProgressSpinnerModule,\n    CdkTreeModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatInputModule,\n    MatRippleModule,\n    MatNativeDateModule,\n    MatSortModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatGridListModule,\n    MatCheckboxModule,\n    MatCommonModule,\n    MatMenuModule\n        \n   \n\n  ],\n  entryComponents:[UtilisateurComponent,ProfilComponent,SaisonComponent,CompetitionComponent,clubComponent,JoueurComponent,ConfirmationComponent],\n  providers: [UtilisateurService,ProfilService,SaisonService,CompetitionService,ClubService,JoueurService,AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { UserService } from '../shared/user.service'\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private router : Router,public service :UserService){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot):  boolean {\n      \n      if (localStorage.getItem('userToken') != null){\n        console.log(\"--------____________-----------\");\n        console.log(localStorage.getItem('id'));\n        console.log(\"--------____________-----------\");\n        console.log(localStorage.getItem('profil'));\n        console.log(\"--------____________-----------\");\n        console.log(localStorage.getItem('IdInt'));\n       return true; \n      }else{\n        this.router.navigate(['/login']); return false;\n      }\n       \n      \n      \n     \n  }\n}","module.exports = \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZG9ubmVlcy9jbHViLWxpc3QvY2x1Yi1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0NBQ2YiLCJmaWxlIjoic3JjL2FwcC9kb25uZWVzL2NsdWItbGlzdC9jbHViLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il19 */\"","module.exports = \"<mat-card><h6 style=\\\"color: #8d8a8a;float: left\\\">Données</h6> / Clubs</mat-card>\\n<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"AddOrEditOrderItem()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput [(ngModel)]=\\\"searchKey\\\" placeholder=\\\"Chercher\\\" autocomplete=\\\"off\\\" (keyup)=\\\"applyFilter()\\\">\\n    <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\"*ngIf=\\\"searchKey\\\"  (click)=\\\"onSearchClear()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"service.dataSource\\\" matSort>\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"ClubID\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.ClubID}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"NomClub\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Club </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.NomClub}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"NomCompetition\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Competition </th>\\n      <td mat-cell *matCellDef=\\\"let element ; let index = index\\\"> {{element.NomCompetition}} </td>\\n    </ng-container>\\n \\n  <ng-container matColumnDef=\\\"action\\\" >\\n          <th mat-header-cell *matHeaderCellDef> Action </th>\\n    <td mat-cell *matCellDef=\\\"let element ; let i=index;\\\">\\n        <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"onEdit(element)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n      <a class=\\\"btn btn-sm btn-danger text-white\\\" style=\\\"margin-left:5px;\\\" (click)=\\\"onDelete(element)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n   </td> \\n      </ng-container>\\n  <ng-container matColumnDef=\\\"loading\\\">\\n              <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n                      Chargement des données...\\n                </mat-footer-cell>\\n  </ng-container>\\n            <ng-container matColumnDef=\\\"noData\\\">\\n              <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n                      Pas de données.\\n              </mat-footer-cell>\\n            </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"service.displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: service.displayedColumns;\\\"></tr>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':service.dataSource!=null}\\\"></mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\" [ngClass]=\\\"{'hide':!(service.dataSource!=null && service.dataSource.data.length==0)}\\\"></mat-footer-row>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild,Injectable  } from '@angular/core';\nimport { ClubService } from '../../shared/club.service';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Club } from 'src/app/shared/club.model';\nimport { MatDialog, MatDialogConfig,MatPaginator,MatTableDataSource, MatSort } from '@angular/material';\n\nimport { clubComponent } from '../club/club.component';\nimport { CompetitionService } from 'src/app/shared/competition.service';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-club-list',\n  templateUrl: './club-list.component.html',\n  styleUrls: ['./club-list.component.css']\n})\nexport class ClubListComponent implements OnInit {\n\n  constructor(public service : ClubService,public servicecomp : CompetitionService,public dialog:MatDialog,public toastr : ToastrService) { }\n  displayedColumns:string[] = ['ClubID','NomClub','NomCompetition','action'];\n  dataSource= new MatTableDataSource<Club>();\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  @ViewChild(MatSort) sort:MatSort;\n  searchKey:string;\n  myData: Array < any > ;\n  public var:string;\n \n  ngOnInit() {\n    this.servicecomp.refreshList();\n    this.service.getClub().subscribe(\n      \n      list => {\n       \n        let array = list.map(item => {\n          \n       let NomCompetition=this.servicecomp.getByID(item[\"CompetitionID\"]);\n      \n          return {\n            NomCompetition,\n            ...item\n           \n           \n          };\n        });\n      \n        this.service.dataSource = new MatTableDataSource(array);\n        this.dataSource=this.service.dataSource;\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.filterPredicate = (data, filter) => {\n          return this.displayedColumns.some(ele => {\n            return ele != 'actions' && data[ele].toLowerCase().indexOf(filter) != -1;\n          });\n        };\n      });\n  }\n  populateForm(atr : Club){ \n    this.service.formData=Object.assign({},atr);\n  }\n \n  AddOrEditOrderItem(){\n \n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus=true;\n    dialogConfig.disableClose=true;\n    dialogConfig.width=\"50%\";\n  \nthis.dialog.open(clubComponent,dialogConfig);\n\n  }\n  onEdit(row){\n    console.log(row);\n    this.service.pform(row);\n    console.log(\"test\");\n   const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"60%\";\n   /* dialogConfig.data=row;\n    this.service.getutl(row); */\n    this.dialog.open(clubComponent,dialogConfig);  \n    \n  }\n  onDelete(row){\n    if(confirm('Are you sure to delete this record ?')){\n      \n    this.service.deleteClub(row).then((data: any) => {\n   this.ngOnInit();\n          });\n    this.toastr.warning('! Deleted successfully');\n    }}\n \n  onSearchClear(){\n    this.searchKey=\"\";\n    this.applyFilter();\n  }\n  applyFilter(){\n    this.service.dataSource.filter=this.searchKey.trim().toLowerCase();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rvbm5lZXMvY2x1Yi9jbHViLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\n  <span>Club</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\"><mat-icon>clear</mat-icon></button>\\n</mat-toolbar>\\n<form [formGroup]=\\\"service.form\\\" class=\\\"normal-form\\\" (submit)=\\\"onSubmit()\\\">\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"300px\\\">\\n    <mat-grid-tile>\\n      <div class=\\\"controles-container\\\">\\n        \\n        <input type=\\\"hidden\\\" formControlName=\\\"ClubID\\\">\\n        <mat-form-field>\\n          <input formControlName=\\\"NomClub\\\" matInput placeholder=\\\"Club *\\\">\\n          <mat-error>This field is mandatory.</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input formControlName=\\\"EmailClub\\\" matInput placeholder=\\\"Email *\\\">\\n          <mat-error>This field is mandatory.</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input formControlName=\\\"TelClub\\\" matInput placeholder=\\\"Tel *\\\">\\n          <mat-error>This field is mandatory.</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-select formControlName=\\\"CompetitionID\\\"  placeholder=\\\"Competition\\\">\\n            <mat-option>None</mat-option>\\n        <ng-container *ngFor=\\\"let lst of dataSourceCompetition.data\\\" >\\n              <mat-option [value]=\\\"lst.CompetitionID\\\">{{lst.NomCompetition}}</mat-option>\\n           \\n            </ng-container>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-select formControlName=\\\"MedecinID\\\"  placeholder=\\\"Medecin\\\">\\n            <mat-option>None</mat-option>\\n        <ng-container *ngFor=\\\"let lst of dataSourceUtilisateur.data\\\" >\\n              <mat-option [value]=\\\"lst.UtilisateurID\\\">{{lst.NomUtilisateur}}</mat-option>\\n           \\n            </ng-container>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n      <div class=\\\"controles-container\\\">\\n        <div class=\\\"button-row\\\">\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"service.form.invalid\\\">Submit</button>\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClose()\\\">Clear</button>\\n        </div>\\n      </div>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</form>\"","\nimport { Component, OnInit, Inject,ChangeDetectorRef } from '@angular/core';\nimport { ClubService } from '../../shared/club.service';\nimport { CompetitionService } from '../../shared/competition.service';\nimport { UtilisateurService } from '../../shared/utilisateur.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog, MAT_DIALOG_DATA, MatTableDataSource } from '@angular/material';\n\nimport { Club } from 'src/app/shared/club.model';\n\nimport { Competition } from 'src/app/shared/Competition.model';\nimport { Utilisateur } from 'src/app/shared/utilisateur.model';\n@Component({\n  selector: 'app-club',\n  templateUrl: './club.component.html',\n  styleUrls: ['./club.component.css']\n})\nexport class clubComponent implements OnInit {\n  dataSource= new MatTableDataSource<Club>();\n  dataSourceCompetition= new MatTableDataSource<Competition>();\n  dataSourceUtilisateur= new MatTableDataSource<Utilisateur>();\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef:MatDialog,\n    public service : ClubService,\n    public servCompetition : CompetitionService,\n    public toastr : ToastrService,\n    public servUtilisateur: UtilisateurService,\n\n   ) {\n      \n     }\n   \n  \n  ngOnInit() {\n    this.service.refreshList();\n    this.servCompetition.refreshList().then((data: any) => {\n      this.dataSourceCompetition.data=data;\n    \n          });\n          this.servUtilisateur.refreshList().then((data: any) => {\n            this.dataSourceUtilisateur.data=data;\n          \n                });\n\n  }\n  resetForm(){\n    \n    \n    this.service.formData = {\n     ClubID:null,\n      NomClub:\"\",\n      EmailClub:\"\",\n      TelClub:\"\",\n      CompetitionID:null,\n      MedecinID:null\n    }\n  }\n  onSubmit() {\n    if (this.service.form.valid) {\n      if (!this.service.form.get('ClubID').value)\n        this.service.postClub(this.service.form.value).then((data: any) =>{ \n          this.dataSource.data=data;\n        });\n      else\n      this.service.putClub(this.service.form.value).subscribe(res =>{ \n        this.service.getClub();\n      });\n      this.service.form.reset();\n      this.service.initializeFormGroup();     \n      this.toastr.success(':: Submitted successfully');\n      this.onClose();\n      \n    }\n  }\n  \n \n    onClose() {\n      this.service.form.reset();\n      this.service.initializeFormGroup();\n      this.dialogRef.closeAll();\n    }\n\n   \n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZG9ubmVlcy9jb21wZXRpdGlvbi1saXN0L2NvbXBldGl0aW9uLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7Q0FDZiIsImZpbGUiOiJzcmMvYXBwL2Rvbm5lZXMvY29tcGV0aXRpb24tbGlzdC9jb21wZXRpdGlvbi1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufSJdfQ== */\"","module.exports = \"<mat-card><h6 style=\\\"color: #8d8a8a;float: left\\\">Données</h6> / Competition</mat-card>\\n<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"AddOrEditOrderItem()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput [(ngModel)]=\\\"searchKey\\\" placeholder=\\\"Chercher\\\" autocomplete=\\\"off\\\" (keyup)=\\\"applyFilter()\\\">\\n    <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\"*ngIf=\\\"searchKey\\\"  (click)=\\\"onSearchClear()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"service.dataSource\\\" matSort>\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"CompetitionID\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.CompetitionID}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"NomCompetition\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Competition </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.NomCompetition}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"NomSaison\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Saison </th>\\n      <td mat-cell *matCellDef=\\\"let element ; let index = index\\\"> {{element.NomSaison}} </td>\\n    </ng-container>\\n \\n  <ng-container matColumnDef=\\\"action\\\" >\\n          <th mat-header-cell *matHeaderCellDef> Action </th>\\n    <td mat-cell *matCellDef=\\\"let element ; let i=index;\\\">\\n        <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"onEdit(element)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n      <a class=\\\"btn btn-sm btn-danger text-white\\\" style=\\\"margin-left:5px;\\\" (click)=\\\"onDelete(element)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n   </td> \\n      </ng-container>\\n  <ng-container matColumnDef=\\\"loading\\\">\\n              <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n                      Chargement des données...\\n              </mat-footer-cell>\\n  </ng-container>\\n            <ng-container matColumnDef=\\\"noData\\\">\\n              <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n                      Pas de données.\\n              </mat-footer-cell>\\n            </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"service.displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: service.displayedColumns;\\\"></tr>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':service.dataSource!=null}\\\"></mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\" [ngClass]=\\\"{'hide':!(service.dataSource!=null && service.dataSource.data.length==0)}\\\"></mat-footer-row>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild,Injectable  } from '@angular/core';\nimport { CompetitionService } from '../../shared/competition.service';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Competition } from 'src/app/shared/competition.model';\nimport { MatDialog, MatDialogConfig,MatPaginator,MatTableDataSource, MatSort } from '@angular/material';\n\nimport { CompetitionComponent } from '../competition/competition.component';\nimport { SaisonService } from 'src/app/shared/saison.service';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-competition-list',\n  templateUrl: './competition-list.component.html',\n  styleUrls: ['./competition-list.component.css']\n})\nexport class CompetitionListComponent implements OnInit {\n\n  constructor(public service : CompetitionService,public servicesaison : SaisonService,public dialog:MatDialog,public toastr : ToastrService) { }\n  displayedColumns:string[] = ['CompetitionID','NomCompetition','NomSaison','action'];\n  dataSource= new MatTableDataSource<Competition>();\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  @ViewChild(MatSort) sort:MatSort;\n  searchKey:string;\n  myData: Array < any > ;\n  public var:string;\n \n  ngOnInit() {\n    this.servicesaison.refreshList();\n    this.service.getCompetition().subscribe(\n      \n      list => {\n       \n        let array = list.map(item => {\n        let NomSaison=this.servicesaison.getByID(item[\"SaisonID\"]);\n          return {\n            NomSaison,\n            ...item\n           \n           \n          };\n        });\n      \n        this.service.dataSource = new MatTableDataSource(array);\n        this.dataSource=this.service.dataSource;\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.filterPredicate = (data, filter) => {\n          return this.displayedColumns.some(ele => {\n            return ele != 'actions' && data[ele].toLowerCase().indexOf(filter) != -1;\n          });\n        };\n      });\n  }\n  populateForm(atr : Competition){ \n    this.service.formData=Object.assign({},atr);\n  }\n \n  AddOrEditOrderItem(){\n \n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus=true;\n    dialogConfig.disableClose=true;\n    dialogConfig.width=\"50%\";\n  \nthis.dialog.open(CompetitionComponent,dialogConfig);\n\n  }\n  onEdit(row){\n    \n    this.service.pform(row);\n   const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"60%\";\n   /* dialogConfig.data=row;\n    this.service.getutl(row); */\n    this.dialog.open(CompetitionComponent,dialogConfig);  \n    \n  }\n  onDelete(row){\n    if(confirm('Are you sure to delete this record ?')){\n      \n    this.service.deleteCompetition(row).then((data: any) => {\n   this.ngOnInit();\n          });\n    this.toastr.warning('! Deleted successfully');\n    }}\n \n  onSearchClear(){\n    this.searchKey=\"\";\n    this.applyFilter();\n  }\n  applyFilter(){\n    this.service.dataSource.filter=this.searchKey.trim().toLowerCase();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rvbm5lZXMvY29tcGV0aXRpb24vY29tcGV0aXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n  <span>Competition</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\"><mat-icon>clear</mat-icon></button>\\n</mat-toolbar>\\n<form [formGroup]=\\\"service.form\\\" class=\\\"normal-form\\\" (submit)=\\\"onSubmit()\\\">\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"300px\\\">\\n    <mat-grid-tile>\\n      <div class=\\\"controles-container\\\">\\n        \\n        <input type=\\\"hidden\\\" formControlName=\\\"CompetitionID\\\">\\n        <mat-form-field>\\n          <input formControlName=\\\"NomCompetition\\\" matInput placeholder=\\\"Competition *\\\">\\n          <mat-error>This field is mandatory.</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input formControlName=\\\"RegimeCompetition\\\" matInput placeholder=\\\"Regime *\\\">\\n          <mat-error>This field is mandatory.</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input formControlName=\\\"CategorieCompetition\\\" matInput placeholder=\\\"Categorie *\\\">\\n          <mat-error>This field is mandatory.</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-select formControlName=\\\"SaisonID\\\"  placeholder=\\\"Saison\\\">\\n            <mat-option>None</mat-option>\\n            <ng-container *ngFor=\\\"let lst of dataSourceSaison.data\\\" >\\n              <mat-option [value]=\\\"lst.SaisonID\\\">{{lst.NomSaison}}</mat-option>\\n           \\n            </ng-container>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n      <div class=\\\"controles-container\\\">\\n        <div class=\\\"button-row\\\">\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"service.form.invalid\\\">Submit</button>\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClose()\\\">Clear</button>\\n        </div>\\n      </div>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</form>\"","\nimport { Component, OnInit, Inject,ChangeDetectorRef } from '@angular/core';\nimport { CompetitionService } from '../../shared/competition.service';\nimport { SaisonService } from '../../shared/saison.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog, MAT_DIALOG_DATA, MatTableDataSource } from '@angular/material';\n\nimport { Competition } from 'src/app/shared/competition.model';\nimport { Saison } from 'src/app/shared/saison.model';\n\n@Component({\n  selector: 'app-competition',\n  templateUrl: './competition.component.html',\n  styleUrls: ['./competition.component.css']\n})\nexport class CompetitionComponent implements OnInit {\n  dataSource= new MatTableDataSource<Competition>();\n  dataSourceSaison= new MatTableDataSource<Saison>();\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef:MatDialog,\n    public service : CompetitionService,\n    public servSaison : SaisonService,\n    public toastr : ToastrService,\n\n\n   ) {\n      \n     }\n   \n  \n  ngOnInit() {\n    this.service.refreshList();\n    this.servSaison.refreshList().then((data: any) => {\n      this.dataSourceSaison.data=data;\n    \n          });\n\n  }\n  resetForm(){\n    \n    \n    this.service.formData = {\n      CompetitionID:null,\n      NomCompetition:\"\",\n      RegimeCompetition:\"\",\n      CategorieCompetition:\"\",\n      SaisonID:null,\n    }\n  }\n  onSubmit() {\n    if (this.service.form.valid) {\n      if (!this.service.form.get('CompetitionID').value)\n        this.service.postCompetition(this.service.form.value).then((data: any) =>{ \n          this.dataSource.data=data;\n        });\n      else\n      this.service.putCompetition(this.service.form.value).subscribe(res =>{ \n        this.service.getCompetition();\n      });\n      this.service.form.reset();\n      this.service.initializeFormGroup();     \n      this.toastr.success(':: Submitted successfully');\n      this.onClose();\n      \n    }\n  }\n  \n \n    onClose() {\n      this.service.form.reset();\n      this.service.initializeFormGroup();\n      this.dialogRef.closeAll();\n    }\n\n   \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rvbm5lZXMvZG9ubmVlcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-donnees',\n  templateUrl: './donnees.component.html',\n  styleUrls: ['./donnees.component.css']\n})\nexport class DonneesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZG9ubmVlcy9qb3VldXItbGlzdC9qb3VldXItbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtDQUNmIiwiZmlsZSI6InNyYy9hcHAvZG9ubmVlcy9qb3VldXItbGlzdC9qb3VldXItbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn0iXX0= */\"","module.exports = \"<!--<a class=\\\"btn btn-sm btn-success text-white\\\" style=\\\"margin-bottom: 5px;\\\" (click)=\\\"AddOrEditOrderItem(null,null)\\\"><i class=\\\"fa fa-plus\\\"> Ajouter</i></a>\\n    <div class=\\\"mat-elevation-z8\\\">\\n<table class=\\\"table table-striped table-hover\\\" [mfData]=\\\"data\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"5\\\">\\n    <thead>\\n        <tr mat-header-row >\\n          <th ><mfDefaultSorter by=\\\"NomJoueur\\\">Nom Prenom</mfDefaultSorter></th>\\n          <th ><mfDefaultSorter by=\\\"GsmJoueur\\\">Gsm</mfDefaultSorter></th>\\n          <th ><mfDefaultSorter by=\\\"EmailJoueur\\\">Email</mfDefaultSorter></th>\\n          <th><mfDefaultSorter >Action</mfDefaultSorter></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n     \\n  <tr mat-row *ngFor=\\\"let utl of service.list; let i=index;\\\">\\n        <ng-container matColumnDef=\\\"position\\\">\\n            <td (click)=\\\"populateForm(utl)\\\"><b>{{utl.NomJoueur}}</b>  {{utl.PrenomJoueur}}</td>\\n   \\n    <td (click)=\\\"populateForm(utl)\\\">{{utl.GsmJoueur}}</td>\\n    <td (click)=\\\"populateForm(utl)\\\">{{utl.EmailJoueur}}</td>\\n    <td><a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"AddOrEditOrderItem(i,utl.JoueurID)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n        <a class=\\\"btn btn-sm btn-danger text-white\\\" style=\\\"margin-left:5px;\\\" (click)=\\\"onDelete(utl.JoueurID)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n\\n    </td></ng-container> \\n  </tr>\\n</tbody>\\n<tfoot>\\n    <tr>\\n        <td colspan=\\\"4\\\">\\n            <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\n        </td>\\n    </tr>\\n    </tfoot>\\n</table>\\n\\n</div>-->\\n<mat-card><h6 style=\\\"color: #8d8a8a;float: left\\\">Données</h6> / Joueurs</mat-card>\\n<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"AddOrEditOrderItem()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput [(ngModel)]=\\\"searchKey\\\" placeholder=\\\"Chercher\\\" autocomplete=\\\"off\\\" (keyup)=\\\"applyFilter()\\\">\\n    <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\"*ngIf=\\\"searchKey\\\"  (click)=\\\"onSearchClear()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"JoueurID\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.JoueurID}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"NomJoueur\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Nom Prenom </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.NomJoueur}} </td>\\n    </ng-container>\\n\\n    <!-- Weight Column -->\\n    \\n\\n    <!-- Symbol Column -->\\n    <ng-container matColumnDef=\\\"NomClub\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Club </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.NomClub}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"action\\\" >\\n          <th mat-header-cell *matHeaderCellDef> Action </th>\\n    <td mat-cell *matCellDef=\\\"let element ; let i=index;\\\">\\n        <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"onEdit(element)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n      <a class=\\\"btn btn-sm btn-danger text-white\\\" style=\\\"margin-left:5px;\\\" (click)=\\\"onDelete(element.JoueurID)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n  </td> \\n      </ng-container>\\n      <ng-container matColumnDef=\\\"loading\\\">\\n              <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n                      Chargement des données...\\n              </mat-footer-cell>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"noData\\\">\\n              <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n                      Pas de données.\\n              </mat-footer-cell>\\n            </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':dataSource!=null}\\\"></mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\" [ngClass]=\\\"{'hide':!(dataSource!=null && dataSource.data.length==0)}\\\"></mat-footer-row>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n</div>\\n\\n\\n \"","import { Component, OnInit, ViewChild} from '@angular/core';\nimport { JoueurService } from 'src/app/shared/joueur.service';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Joueur } from 'src/app/shared/joueur.model';\nimport { MatDialog, MatDialogConfig,MatPaginator,MatTableDataSource, MatSort } from '@angular/material';\n\nimport { JoueurComponent } from '../joueur/joueur.component';\nimport { ClubService } from 'src/app/shared/club.service';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-joueur-list',\n  templateUrl: './joueur-list.component.html',\n  styleUrls: ['./joueur-list.component.css']\n})\nexport class JoueurListComponent implements OnInit {\n\n  constructor(public service : JoueurService,public serviceclub : ClubService,public dialog:MatDialog,public toastr : ToastrService) { }\n  displayedColumns:string[] = ['JoueurID','NomJoueur','NomClub','action'];\n  dataSource= new MatTableDataSource<Joueur>();\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  @ViewChild(MatSort) sort:MatSort;\n  searchKey:string;\n  myData: Array < any > ;\n  public var:string;\n \n  ngOnInit() {\n    this.serviceclub.refreshList();\n\n    this.service.getJoueur().subscribe(\n      \n      list => {\n       \n        let array = list.map(item => {\n        let NomClub=this.serviceclub.getByID(item[\"ClubID\"]);\n          return {\n            NomClub,\n            ...item\n           \n           \n          };\n        });\n      \n        this.service.dataSource = new MatTableDataSource(array);\n        this.dataSource=this.service.dataSource;\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.filterPredicate = (data, filter) => {\n          return this.displayedColumns.some(ele => {\n            return ele != 'actions' && data[ele].toLowerCase().indexOf(filter) != -1;\n          });\n        };\n      });\n  }\n  populateForm(atr : Joueur){ \n    this.service.formData=Object.assign({},atr);\n  }\n \n  AddOrEditOrderItem(){\n \n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus=true;\n    dialogConfig.disableClose=true;\n    dialogConfig.width=\"50%\";\n  \nthis.dialog.open(JoueurComponent,dialogConfig);\n\n  }\n  onEdit(row){\n    console.log(row);\n    this.service.pform(row);\n   const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"60%\";\n   /* dialogConfig.data=row;\n    this.service.getutl(row); */\n    this.dialog.open(JoueurComponent,dialogConfig);  \n    \n  }\n  onDelete(row){\n    if(confirm('Are you sure to delete this record ?')){\n      \n    this.service.deleteJoueur(row).then((data: any) => {\n   this.ngOnInit();\n          });\n    this.toastr.warning('! Deleted successfully');\n    }}\n \n  onSearchClear(){\n    this.searchKey=\"\";\n    this.applyFilter();\n  }\n  applyFilter(){\n    this.service.dataSource.filter=this.searchKey.trim().toLowerCase();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rvbm5lZXMvam91ZXVyL2pvdWV1ci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<mat-toolbar>\\n  <span>Joueur</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\"><mat-icon>clear</mat-icon></button>\\n</mat-toolbar>\\n<form [formGroup]=\\\"service.form\\\" class=\\\"normal-form\\\" (submit)=\\\"onSubmit()\\\">\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"400px\\\">\\n    <mat-grid-tile>\\n      <div class=\\\"controles-container\\\">\\n        \\n        <input type=\\\"hidden\\\" formControlName=\\\"JoueurID\\\">\\n        <mat-form-field>\\n          <input formControlName=\\\"NomJoueur\\\" matInput placeholder=\\\"Nom *\\\">\\n          <mat-error>This field is mandatory.</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n            <input formControlName=\\\"PrenomJoueur\\\" matInput placeholder=\\\"Prenom *\\\">\\n            <mat-error>This field is mandatory.</mat-error>\\n          </mat-form-field>\\n       \\n        <mat-form-field>\\n          <input formControlName=\\\"GsmJoueur\\\" matInput placeholder=\\\"Gsm *\\\">\\n          <mat-error *ngIf=\\\"service.form.controls['GsmJoueur'].errors?.required\\\">This field is mandatory.</mat-error>\\n          <mat-error *ngIf=\\\"service.form.controls['GsmJoueur'].errors?.minlength\\\">Minimum 8 charactors needed.</mat-error>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-select formControlName=\\\"ClubID\\\"  placeholder=\\\"Club\\\">\\n            <mat-option>None</mat-option>\\n            <ng-container *ngFor=\\\"let lst of dataSourceClub.data\\\" >\\n              <mat-option [value]=\\\"lst.ClubID\\\">{{lst.NomClub}}</mat-option>\\n           \\n            </ng-container>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n      <div class=\\\"controles-container\\\">\\n          <mat-form-field>\\n              <input formControlName=\\\"EmailJoueur\\\" matInput placeholder=\\\"Email\\\">\\n              <mat-error>Invalid email address.</mat-error>\\n            </mat-form-field>\\n            \\n            <mat-form-field>\\n              <mat-select formControlName=\\\"PosteJoueur\\\" placeholder=\\\"Poste \\\">\\n                <mat-option>None</mat-option>\\n                <ng-container >\\n                    <mat-option value=\\\"Gardien de but\\\">Gardien de but</mat-option>\\n                    <mat-option value=\\\"Défenseur\\\">Défenseur</mat-option>\\n                    <mat-option value=\\\"Milieu\\\">Milieu  </mat-option>\\n                    <mat-option value=\\\"Attaquant\\\">Attaquant </mat-option>\\n                </ng-container>\\n              </mat-select>\\n            </mat-form-field>\\n           \\n        <mat-form-field>\\n          <mat-select formControlName=\\\"LateralisationJoueur\\\" placeholder=\\\"Lateralisation \\\">\\n            <mat-option>None</mat-option>\\n            <ng-container >\\n              <mat-option value=\\\"Les 2 pieds\\\">Les 2 pieds</mat-option>\\n              <mat-option value=\\\"Droitier\\\">Droitier</mat-option>\\n              <mat-option value=\\\"Gaucher\\\">Gaucher </mat-option>\\n            \\n            </ng-container>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"DatenJoueur\\\" placeholder=\\\"Date de N.\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #picker></mat-datepicker>\\n        </mat-form-field>\\n        <mat-form-field>\\n            <input formControlName=\\\"PhotoJoueur\\\" matInput placeholder=\\\"Photo *\\\">\\n            <mat-error>This field is mandatory.</mat-error>\\n          </mat-form-field>\\n        <div class=\\\"button-row\\\">\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"service.form.invalid\\\">Submit</button>\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClose()\\\">Clear</button>\\n        </div>\\n      </div>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</form>\"","\nimport { Component, OnInit, Inject,ChangeDetectorRef } from '@angular/core';\nimport { JoueurService } from '../../shared/joueur.service';\nimport { ClubService } from '../../shared/club.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog, MAT_DIALOG_DATA, MatTableDataSource } from '@angular/material';\n\nimport { Joueur } from 'src/app/shared/joueur.model';\nimport { Club } from 'src/app/shared/club.model';\n\n@Component({\n  selector: 'app-joueur',\n  templateUrl: './joueur.component.html',\n  styleUrls: ['./joueur.component.css']\n})\nexport class JoueurComponent implements OnInit {\n  dataSource= new MatTableDataSource<Joueur>();\n  dataSourceClub= new MatTableDataSource<Club>();\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef:MatDialog,\n    public service : JoueurService,\n    public servClub : ClubService,\n    public toastr : ToastrService,\n\n\n   ) {\n      \n     }\n   \n  \n  ngOnInit() {\n    this.service.refreshList();\n    this.servClub.refreshList().then((data: any) => {\n      this.dataSourceClub.data=data;\n    \n          });\n\n  }\n  resetForm(){\n    \n    \n    this.service.formData = {\n      JoueurID :null,\n      NomJoueur :\"\",\n     PrenomJoueur :\"\",\n      DatenJoueur :\"01/01/2000\",\n     EmailJoueur :\"\",\n     GsmJoueur :\"\",\n     PosteJoueur:\"\",\n     LateralisationJoueur:\"\",\n     PhotoJoueur:\"\",\n     ClubID :null,\n    }\n  }\n  onSubmit() {\n    if (this.service.form.valid) {\n      if (!this.service.form.get('JoueurID').value)\n        this.service.postJoueur(this.service.form.value).then((data: any) =>{ \n          this.dataSource.data=data;\n        });\n      else\n      this.service.putJoueur(this.service.form.value).subscribe(res =>{ \n        this.service.getJoueur();\n      });\n      this.service.form.reset();\n      this.service.initializeFormGroup();     \n      this.toastr.success(':: Submitted successfully');\n      this.onClose();\n      \n    }\n  }\n  \n \n    onClose() {\n      this.service.form.reset();\n      this.service.initializeFormGroup();\n      this.dialogRef.closeAll();\n    }\n\n   \n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZG9ubmVlcy9zYWlzb24tbGlzdC9TYWlzb24tbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtDQUNmIiwiZmlsZSI6InNyYy9hcHAvZG9ubmVlcy9zYWlzb24tbGlzdC9TYWlzb24tbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn0iXX0= */\"","module.exports = \"<mat-card><h6 style=\\\"color: #8d8a8a;float: left\\\">Données</h6> / Saison</mat-card>\\n<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"AddOrEditOrderItem()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput [(ngModel)]=\\\"searchKey\\\" placeholder=\\\"Chercher\\\" autocomplete=\\\"off\\\" (keyup)=\\\"applyFilter()\\\">\\n    <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\"*ngIf=\\\"searchKey\\\"  (click)=\\\"onSearchClear()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"SaisonID\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.SaisonID}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"NomSaison\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Saison </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.NomSaison}} </td>\\n    </ng-container>\\n\\n \\n  <ng-container matColumnDef=\\\"action\\\" >\\n          <th mat-header-cell *matHeaderCellDef> Action </th>\\n    <td mat-cell *matCellDef=\\\"let element ; let i=index;\\\">\\n        <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"onEdit(element)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n      <a class=\\\"btn btn-sm btn-danger text-white\\\" style=\\\"margin-left:5px;\\\" (click)=\\\"onDelete(element)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n   </td> \\n      </ng-container>\\n  <ng-container matColumnDef=\\\"loading\\\">\\n              <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n                      Chargement des données...\\n              </mat-footer-cell>\\n  </ng-container>\\n            <ng-container matColumnDef=\\\"noData\\\">\\n              <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n                      Pas de données.\\n              </mat-footer-cell>\\n            </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':dataSource!=null}\\\"></mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\" [ngClass]=\\\"{'hide':!(dataSource!=null && dataSource.data.length==0)}\\\"></mat-footer-row>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SaisonService } from '../../shared/saison.service';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Saison } from 'src/app/shared/saison.model';\nimport { MatDialog, MatDialogConfig,MatPaginator,MatTableDataSource, MatSort } from '@angular/material';\n\nimport { SaisonComponent } from '../saison/saison.component';\n\n\n@Component({\n  selector: 'app-Saison-list',\n  templateUrl: './Saison-list.component.html',\n  styleUrls: ['./Saison-list.component.css']\n})\nexport class SaisonListComponent implements OnInit {\n\n  constructor(public service : SaisonService,public dialog:MatDialog,public toastr : ToastrService) { }\n  displayedColumns:string[] = ['SaisonID','NomSaison','action'];\n  dataSource= new MatTableDataSource<Saison>();\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  @ViewChild(MatSort) sort:MatSort;\n  searchKey:string;\n\n\n  ngOnInit() {\n    this.service.refreshList().then((data: any) => {\n      this.dataSource.data=data;\n          });\n          this.dataSource.sort=this.sort;\n          this.dataSource.paginator=this.paginator;\n  }\n  populateForm(atr : Saison){ \n    this.service.formData=Object.assign({},atr);\n  }\n  /*onDelete(id : number){\n    if(confirm(\"are you sur ?\")){\n  this.service.deleteSaison(id).subscribe(res =>{\n    this.service.refreshList();\n    this.toastr.warning('Delete Successfully','EMP.Register');\n  })\n    }\n  }*/\n  AddOrEditOrderItem(itemIndex=null,Id=null){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus=true;\n    dialogConfig.disableClose=true;\n    dialogConfig.width=\"50%\";\n    dialogConfig.data={itemIndex,Id};\n    this.service.formData = Object.assign({},  this.service.list[itemIndex]);\nthis.dialog.open(SaisonComponent,dialogConfig);\n\n  }\n  onEdit(row){\n   const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"60%\";\n    dialogConfig.data=row;\n    this.service.getutl(row);\n    this.dialog.open(SaisonComponent,dialogConfig);   \n    \n  }\n  onDelete(row){\n    if(confirm('Are you sure to delete this record ?')){\n      \n    this.service.deleteSaison(row).then((data: any) => {\n      console.log(data);\n      this.dataSource.data=data;\n          });\n    this.toastr.warning('! Deleted successfully');\n    }}\n \n  onSearchClear(){\n    this.searchKey=\"\";\n    this.applyFilter();\n  }\n  applyFilter(){\n    this.dataSource.filter=this.searchKey.trim().toLowerCase();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rvbm5lZXMvc2Fpc29uL3NhaXNvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\n  <span>Saison</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\"><mat-icon>clear</mat-icon></button>\\n</mat-toolbar>\\n<form [formGroup]=\\\"service.form\\\" class=\\\"normal-form\\\" (submit)=\\\"onSubmit()\\\">\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"300px\\\">\\n    <mat-grid-tile>\\n      <div class=\\\"controles-container\\\">\\n        \\n        <input type=\\\"hidden\\\" formControlName=\\\"SaisonID\\\">\\n        <mat-form-field>\\n          <input formControlName=\\\"NomSaison\\\" matInput placeholder=\\\"Saison *\\\">\\n          <mat-error>This field is mandatory.</mat-error>\\n        </mat-form-field>\\n       \\n       \\n      </div>\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n      <div class=\\\"controles-container\\\">\\n        <div class=\\\"button-row\\\">\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"service.form.invalid\\\">Submit</button>\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear()\\\">Clear</button>\\n        </div>\\n      </div>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</form>\"","\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { SaisonService } from '../../shared/saison.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog, MatDialogConfig, MAT_DIALOG_DATA, MatTableDataSource } from '@angular/material';\n\nimport { Router } from '@angular/router';\nimport { Saison } from 'src/app/shared/saison.model';\n\nimport { Location } from '@angular/common';\n@Component({\n  selector: 'app-saison',\n  templateUrl: './saison.component.html',\n  styleUrls: ['./saison.component.css']\n})\nexport class SaisonComponent implements OnInit {\n  dataSource= new MatTableDataSource<Saison>();\n \n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef:MatDialog,\n    public service : SaisonService, \n    public toastr : ToastrService,\n    private dialog:MatDialog,\n    private router:Router,\n    private location: Location\n   ) {\n      \n     }\n   \n      onClear() {\n       \n        this.service.form.reset();\n        this.service.initializeFormGroup();\n      }\n  ngOnInit() {\n/*this.service.getList().then(res => this.service.list=res as Saison[]);\nif(this.service.formData.SaisonID==null)\n    this.resetForm();*/\n   \n  }\n  resetForm(form? : NgForm){\n    if(form != null)\n    form.resetForm();\n    \n    this.service.formData = {\n    SaisonID:null,\n    NomSaison :'',\n    \n    }\n  }\n  \n  onSubmit(){\n    console.log(this.service.form.get('SaisonID').value);\n    if (this.service.form.valid)\n    if (!this.service.form.get('SaisonID').value)\n    this.insertRecord(this.service.form.value)\n    else\n    this.updateRecord(this.service.form.value);\n    this.service.form.reset();\n      this.service.initializeFormGroup();\n    this.dialogRef.closeAll()\n    location.reload();\n    \n  }\n\n  insertRecord(form : NgForm){\n  \n    \nthis.service.postSaison(this.service.form.value).then((data: any) =>{ \n  this.dataSource.data=data;\n  \n  this.toastr.success('Inserted Successfully','EMP.Register');\n  this.service.refreshList();\n  \n  this.resetForm(form)});\n\n  }\n  updateRecord(form : NgForm){\n    \n    this.service.putSaison(this.service.form.value).subscribe(res =>{ \n      this.service.refreshList().then((data: any) => {\n        this.dataSource.data=data;\n            });\n      this.resetForm(form)});\n     \n      this.toastr.info('Update Successfully','EMP.Register');\n     \n    }\n    onClose() {\n      this.service.form.reset();\n      this.service.initializeFormGroup();\n      this.dialogRef.closeAll();\n    }\n\n   \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rvc3NpZXJzL2NvbmZpcm1hdGlvbi9Db25maXJtYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar>\\n  <span>Dossier</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\"><mat-icon>clear</mat-icon></button>\\n</mat-toolbar>\\n<form [formGroup]=\\\"service.form\\\" class=\\\"normal-form\\\" (submit)=\\\"onSubmit()\\\">\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"300px\\\">\\n    <mat-grid-tile>\\n      <div class=\\\"controles-container\\\">\\n        \\n        <input type=\\\"hidden\\\" formControlName=\\\"DossierID\\\">\\n        <mat-form-field>\\n          <mat-label>Confirmation</mat-label>\\n          <mat-select  formControlName=\\\"Confirmation1\\\">\\n            \\n            <mat-option value=\\\"Valider\\\">Valider</mat-option>\\n            <mat-option value=\\\"Refuser\\\">Refuser</mat-option>\\n       \\n          </mat-select>\\n        </mat-form-field>\\n       \\n       \\n      </div>\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n      <div class=\\\"controles-container\\\">\\n        <div class=\\\"button-row\\\">\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"service.form.invalid\\\">Submit</button>\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear()\\\">Clear</button>\\n        </div>\\n      </div>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</form>\"","\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { ConfirmationService } from '../../shared/Confirmation.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog, MatDialogConfig, MAT_DIALOG_DATA, MatTableDataSource } from '@angular/material';\n\nimport { Router } from '@angular/router';\nimport { Confirmation1 } from 'src/app/shared/Confirmation1.model';\n\nimport { Location } from '@angular/common';\n@Component({\n  selector: 'app-Confirmation',\n  templateUrl: './Confirmation.component.html',\n  styleUrls: ['./Confirmation.component.css']\n})\nexport class ConfirmationComponent implements OnInit {\n  dataSource= new MatTableDataSource<Confirmation1>();\n \n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef:MatDialog,\n    public service : ConfirmationService, \n    public toastr : ToastrService,\n    private dialog:MatDialog,\n    private router:Router,\n    private location: Location\n   ) {\n      \n     }\n   \n      onClear() {\n       \n        this.service.form.reset();\n        this.service.initializeFormGroup();\n      }\n  ngOnInit() {\n/*this.service.getList().then(res => this.service.list=res as Confirmation[]);\nif(this.service.formData.ConfirmationID==null)\n    this.resetForm();*/\n   \n  }\n  resetForm(form? : NgForm){\n    if(form != null)\n    form.resetForm();\n    \n    this.service.formData = {\n      ConfirmationID :null,\n      DossierID:null,\n      UtilisateurID:null,\n      Confirmation1:\"\",\n      DateConfirmation:null\n    \n    }\n  }\n  \n  onSubmit(){\n\n    //console.log(this.service.form.get('DossierID').value);\n    //console.log(this.service.form.get('Confirmation1').value);\n    this.service.form.patchValue({\n      DossierID:this.service.form.get('DossierID').value,\n      UtilisateurID:localStorage.getItem('IdInt'),\n      DateConfirmation:Date.now(),\n      Confirmation1:this.service.form.get('Confirmation1').value\n    })\n    //console.log(this.service.form.get('DateConfirmation').value); \n    //console.log(this.service.form.get('DossierID').value);\n    console.log(this.service.form.value);\nif (this.service.form.valid)\n       this.insertRecord(this.service.form.value)\n \n\n      this.service.initializeFormGroup();\n    this.dialogRef.closeAll()\n    location.reload();\n    \n  }\n\n  insertRecord(form : NgForm){\n  \n    \nthis.service.postConfirmation(this.service.form.value).then((data: any) =>{ \n  this.dataSource.data=data;\n  \n  this.toastr.success('Inserted Successfully','EMP.Register');\n  this.service.refreshList();\n  \n  this.resetForm(form)});\n\n  }\n  updateRecord(form : NgForm){\n    \n    this.service.putConfirmation(this.service.form.value).subscribe(res =>{ \n      this.service.refreshList().then((data: any) => {\n        this.dataSource.data=data;\n            });\n      this.resetForm(form)});\n     \n      this.toastr.info('Update Successfully','EMP.Register');\n     \n    }\n    onClose() {\n      this.service.form.reset();\n      this.service.initializeFormGroup();\n      this.dialogRef.closeAll();\n    }\n\n   \n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZG9zc2llcnMvZG9zc2llci1saXN0L2Rvc3NpZXItbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtDQUNmIiwiZmlsZSI6InNyYy9hcHAvZG9zc2llcnMvZG9zc2llci1saXN0L2Rvc3NpZXItbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn0iXX0= */\"","module.exports = \"<mat-card><h6 style=\\\"color: #8d8a8a;float: left\\\">Données</h6> / Dossier</mat-card>\\n<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"AddOrEditOrderItem()\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput [(ngModel)]=\\\"searchKey\\\" placeholder=\\\"Chercher\\\" autocomplete=\\\"off\\\" (keyup)=\\\"applyFilter()\\\">\\n    <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\"*ngIf=\\\"searchKey\\\"  (click)=\\\"onSearchClear()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"service.dataSource\\\" matSort>\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"DossierID\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.DossierID}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    \\n    <ng-container matColumnDef=\\\"NomJoueur\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Joueur </th>\\n      <td mat-cell *matCellDef=\\\"let element ; let index = index\\\"> {{element.NomJoueur}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"NomClub\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Club </th>\\n        <td mat-cell *matCellDef=\\\"let element ; let index = index\\\"> {{element.NomClub}} </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"NomUtilisateur\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Medecin </th>\\n          <td mat-cell *matCellDef=\\\"let element ; let index = index\\\"> {{element.NomUtilisateur}} </td>\\n        </ng-container>\\n        <ng-container matColumnDef=\\\"Etat\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Etat </th>\\n            <td mat-cell *matCellDef=\\\"let element ; let index = index\\\" > <i class=\\\"fa fa-refresh\\\"></i> {{element.Confirmation}} </td>\\n          </ng-container>\\n  <ng-container matColumnDef=\\\"action\\\" >\\n          <th mat-header-cell *matHeaderCellDef> Action </th>\\n    <td mat-cell *matCellDef=\\\"let element ; let i=index;\\\">\\n        <a class=\\\"btn btn-sm btn-primary text-white\\\" (click)=\\\"onEdit(element)\\\"><i class=\\\"fa fa-search\\\"></i></a>\\n        <a  *ngIf=\\\"Role()\\\" style=\\\"margin-left:10px\\\" class=\\\"btn btn-sm btn-success text-white\\\" (click)=\\\"onView(element)\\\"><i class=\\\"fa fa-check-circle-o\\\"></i></a>\\n   </td> \\n      </ng-container>\\n  <ng-container matColumnDef=\\\"loading\\\">\\n              <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n                      Chargement des données...\\n              </mat-footer-cell>\\n  </ng-container>\\n            <ng-container matColumnDef=\\\"noData\\\">\\n              <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n                      Pas de données.\\n              </mat-footer-cell>\\n            </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"service.displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: service.displayedColumns;\\\"></tr>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':service.dataSource!=null}\\\"></mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\" [ngClass]=\\\"{'hide':!(service.dataSource!=null && service.dataSource.data.length==0)}\\\"></mat-footer-row>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild,Injectable  } from '@angular/core';\nimport { DossierService } from '../../shared/dossier.service';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Dossier } from 'src/app/shared/dossier.model';\nimport { MatDialog, MatDialogConfig,MatPaginator,MatTableDataSource, MatSort } from '@angular/material';\n\nimport { ConfirmationComponent } from '../confirmation/confirmation.component';\nimport { JoueurService } from 'src/app/shared/joueur.service';\nimport { ClubService } from 'src/app/shared/club.service';\nimport { UtilisateurService } from 'src/app/shared/utilisateur.service';\n\nimport * as _ from 'lodash';\nimport { Router } from '@angular/router';\nimport { retryWhen } from 'rxjs/operators';\nimport { ConfirmationService } from 'src/app/shared/Confirmation.service';\n@Component({\n  selector: 'app-dossier-list',\n  templateUrl: './dossier-list.component.html',\n  styleUrls: ['./dossier-list.component.css']\n})\nexport class DossierListComponent implements OnInit {\n\n  constructor(private router : Router,public service : DossierService,public serviceJoueur : JoueurService,public serviceUtilisateur : UtilisateurService,public serviceClub : ClubService,public dialog:MatDialog,public toastr : ToastrService,public serviceconf : ConfirmationService) { }\n  displayedColumns:string[] = ['DossierID','NomJoueur','NomClub','NomUtilisateur','Etat','action'];\n  dataSource= new MatTableDataSource<Dossier>();\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  @ViewChild(MatSort) sort:MatSort;\n  searchKey:string;\n\n  myData: Array < any > ;\n  public var:string;\n profil:any;\n  ngOnInit() {\n    this.profil=localStorage.getItem('profil');\n    this.serviceJoueur.refreshList();\n    this.serviceClub.refreshList();\n    this.serviceUtilisateur.refreshList();\n    this.serviceconf.refreshList();\n    this.service.getDossier().subscribe(\n      \n      list => {\n       \n        let array = list.map(item => {\n        let NomJoueur=this.serviceJoueur.getByID(item[\"JoueurID\"]);\n        let NomClub=this.serviceClub.getByID(item[\"ClubID\"]);\n       // let NomUtilisateur=this.serviceUtilisateur.getByID(item[\"MedecinID\"]);\n        let NomUtilisateur=this.serviceUtilisateur.getByID(item[\"MedecinID\"]);\n       \n        let Confirmation=this.serviceconf.getByID(item[\"DossierID\"]);\n          return {\n            NomJoueur,\n            NomClub,\n            NomUtilisateur,\n            Confirmation,\n            ...item\n           \n           \n          };\n        });\n      \n        this.service.dataSource = new MatTableDataSource(array);\n        this.dataSource=this.service.dataSource;\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.filterPredicate = (data, filter) => {\n          return this.displayedColumns.some(ele => {\n            return ele != 'actions' && data[ele].toLowerCase().indexOf(filter) != -1;\n          });\n        };\n      });\n  }\n  Role(){\n    var res=true;\n\n    if(this.profil==6){\nres=false;\n    }\n    return res;\n  }\n  populateForm(atr : Dossier){ \n    this.service.formData=Object.assign({},atr);\n  }\n \n  AddOrEditOrderItem(){\n    window.location.href = 'home/dossier/';\n  }\n  onEdit(row){\n   window.location.href = 'home/dossier/'+row.DossierID;\n\n    \n  }\n  onView(row){\n    \n    const dialogConfig = new MatDialogConfig();\n     dialogConfig.disableClose = true;\n     dialogConfig.autoFocus = true;\n     dialogConfig.width = \"60%\";\n     dialogConfig.data=row;\n     console.log(dialogConfig.data.DossierID);\n     this.serviceconf.getutl(row);\n     this.dialog.open(ConfirmationComponent,dialogConfig);   \n     \n   }\n\n  onDelete(row){\n    if(confirm('Are you sure to delete this record ?')){\n      \n    this.service.deleteDossier(row).then((data: any) => {\n   this.ngOnInit();\n          });\n    this.toastr.warning('! Deleted successfully');\n    }}\n \n  onSearchClear(){\n    this.searchKey=\"\";\n    this.applyFilter();\n  }\n  applyFilter(){\n    this.service.dataSource.filter=this.searchKey.trim().toLowerCase();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rvc3NpZXJzL2Rvc3NpZXIvZG9zc2llci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<button mat-raised-button (click)=\\\"isOptional = !isOptional\\\">\\n    {{!isOptional ? 'Enable optional steps' : 'Disable optional steps'}}\\n  </button>\\n  \\n  <mat-horizontal-stepper linear #stepper>\\n    <mat-step [stepControl]=\\\"firstFormGroup\\\" >\\n      <form [formGroup]=\\\"firstFormGroup\\\"  >\\n          <mat-grid-list cols=\\\"1\\\" >\\n                \\n        <ng-template matStepLabel>JOUEUR</ng-template>\\n        <mat-form-field>\\n            <mat-select  formControlName=\\\"JoueurID\\\"  placeholder=\\\"Joueur\\\" style=\\\"float:left;\\\">\\n              <mat-option>None</mat-option>\\n          \\n                <mat-option (click)=\\\"changejoueur(lst)\\\"   *ngFor=\\\"let lst of dataSourceJoueur.data\\\" [value]=\\\"lst.JoueurID\\\">{{lst.PrenomJoueur}} {{lst.NomJoueur}}</mat-option>\\n             \\n             \\n            </mat-select>\\n           \\n          </mat-form-field>\\n         <mat-list  *ngFor=\\\"let item of formdatajoueur\\\" style=\\\"width:100%; \\\">\\n          <img  style=\\\"float:right;margin-right:100px; border: 1px solid #ccc;width: 147px;margin-top: 45px;\\\" src=\\\"{{item.PhotoJoueur}}\\\"  />\\n            <mat-list-item>Nom Prenom : <b style=\\\"padding:10px;\\\">{{item.PrenomJoueur}} {{item.NomJoueur}}</b> </mat-list-item>\\n            <mat-divider></mat-divider>\\n            <mat-list-item>Date de naissance: <b style=\\\"padding:10px;\\\">{{item.DatenJoueur}}</b> </mat-list-item>\\n            <mat-divider></mat-divider>\\n            <mat-list-item>Club : <b style=\\\"padding:10px;\\\"> {{item.NomClub}}</b></mat-list-item>\\n            <mat-divider></mat-divider>\\n            <mat-list-item>Poste : <b style=\\\"padding:10px;\\\">{{item.PosteJoueur}}</b> </mat-list-item>\\n            \\n            <mat-divider></mat-divider>\\n            <mat-list-item>Latéralisation :<b style=\\\"padding:10px;\\\">{{item.LateralisationJoueur}}</b> </mat-list-item>\\n            <mat-divider></mat-divider>\\n            <mat-list-item>Nombre de matches disputés ces 12 derniers mois :  \\n              <ng-container   >\\n                <mat-form-field>\\n                    <input type=\\\"number\\\" formControlName=\\\"AutreCtrl_12\\\"   name=\\\"atrctrl\\\"  matInput placeholder=\\\"\\\"  (change)=\\\"updateChkbxArray(12,'12 derniers mois','text',$event.target.value)\\\" >\\n                    <mat-error>This field is mandatory.</mat-error>\\n               </mat-form-field>\\n            \\n\\n             </ng-container></mat-list-item>\\n             \\n          </mat-list>\\n        \\n      </mat-grid-list>\\n    \\n     \\n        <div>\\n          <button mat-button matStepperNext>Suivant</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <mat-step [stepControl]=\\\"secondFormGroup\\\" >\\n        \\n      <form [formGroup]=\\\"secondFormGroup\\\" (submit)=\\\"onSubmit()\\\">\\n        <mat-grid-list cols=\\\"1\\\" >\\n        <ng-template matStepLabel>ANTECEDENTS MEDICAUX</ng-template>         \\n         <u>2.\\tANTECEDENTS MEDICAUX :</u> <br/>\\n<i>2.1  PATHOLOGIES ACTUELLES ET PASSEES</i><br/>\\n        <mat-form-field style=\\\"display:block\\\" >\\n           \\n            <input matInput disabled >\\n            <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n                <!-- Position Column -->\\n                <ng-container matColumnDef=\\\"categorie\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Général</th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TextCategorie}} </td>\\n                </ng-container>\\n              \\n                <ng-container matColumnDef=\\\"champs\\\">\\n                    <th mat-header-cell *matHeaderCellDef> \\n                      \\n                          </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" > \\n                        <ng-container *ngFor=\\\"let lst of dataSource13; let i = index\\\"  >\\n                            <ng-container  >\\n                            <mat-checkbox formControlName=\\\"secondCtrl\\\"  [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\"  style=\\\"width: 33%;float: left;\\\"      >{{lst.categorie}}</mat-checkbox>\\n                         </ng-container>\\n                       \\n                        </ng-container> \\n                          </td>\\n                  </ng-container>\\n              \\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n              </table>\\n              <hr/>\\n              <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource1\\\" class=\\\"mat-elevation-z8\\\">\\n            \\n                  <!-- Position Column -->\\n                  <ng-container matColumnDef=\\\"categorie\\\">\\n                    <th mat-header-cell *matHeaderCellDef> Cœur et poumon</th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TextCategorie}} </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"champs\\\">\\n                      <th mat-header-cell *matHeaderCellDef> \\n                        \\n                            </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> \\n                          <ng-container *ngFor=\\\"let lst of dataSource14\\\" >\\n                              <mat-checkbox   [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"width:auto;float: left;margin-left:10px\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\"   >{{lst.categorie}}</mat-checkbox>\\n                  \\n                          </ng-container> \\n                            </td>\\n                    </ng-container>\\n                \\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                </table>\\n                <hr/>\\n                <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource2\\\" class=\\\"mat-elevation-z8\\\">\\n            \\n                  <!-- Position Column -->\\n                  <ng-container matColumnDef=\\\"categorie\\\">\\n                    <th mat-header-cell *matHeaderCellDef> </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TextCategorie}} </td>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"champs\\\">\\n                      <th mat-header-cell *matHeaderCellDef> \\n               \\n                            </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> \\n                          <ng-container *ngFor=\\\"let lst of dataSource13\\\"  >\\n                              <mat-checkbox [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"width: 33%;float: left;\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\"   >{{lst.categorie}}</mat-checkbox>\\n                  \\n                          </ng-container> \\n                            </td>\\n                    </ng-container>\\n                \\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                </table>\\n              <hr/>\\n              <br/><u>Appareil locomoteur</u><br/><br/>\\n              <b>Blessures graves </b>conduisant à plus de quatre semaines de ralentissement ou d’arrêt :\\n                      \\n               <mat-radio-group>\\n                            <mat-radio-button value=\\\"{{lst.categorie}}\\\" [checked]=\\\"checkedradio(1119,lst.categorie)\\\"  *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(1119,1119,$event.value,'ts')\\\"  >{{lst.categorie}}</mat-radio-button>\\n                                                   \\n                            \\n                          </mat-radio-group>\\n              <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource15\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"Masquer(1119)\\\">\\n            \\n                  <!-- Position Column -->\\n                  <ng-container matColumnDef=\\\"categorie\\\">\\n                    <th mat-header-cell *matHeaderCellDef> \\n                   \\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                  </ng-container>\\n                \\n                  <!-- Name Column -->\\n                 \\n                \\n                 \\n                \\n                  <!-- Symbol Column -->\\n                  <ng-container matColumnDef=\\\"champs\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                       \\n                         </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                        <ng-container *ngFor=\\\"let lst of dataSource3\\\"  >\\n                            <ng-container  *ngIf=\\\"lst.categorie!='autre'\\\" >\\n                            <mat-checkbox [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"float: left;width: 100%;height:55px;margin-top:5px\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\"   >{{lst.categorie}}</mat-checkbox>\\n                          </ng-container>\\n                            <ng-container  *ngIf=\\\"lst.categorie=='autre'\\\" >\\n                                <mat-form-field>\\n                                    <input formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"   matInput placeholder=\\\"Autre  *\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,'text',$event.target.value)\\\" >\\n                                    <mat-error>This field is mandatory.</mat-error>\\n                               </mat-form-field>\\n                             </ng-container> \\n                        </ng-container> \\n                        </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"champs2\\\">\\n                            <th mat-header-cell *matHeaderCellDef>\\n                               \\n                                 </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\">\\n                                <ng-container *ngFor=\\\"let lst of dataSource3\\\" >\\n                                    <mat-form-field style=\\\"float: left;width: 100%\\\" >\\n                                        <input type=\\\"number\\\" formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"Quand ?\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,'text',$event.target.value)\\\" >\\n                                        <mat-error>This field is mandatory.</mat-error>\\n                                   </mat-form-field>\\n                                 </ng-container>\\n                              </td>\\n                               <label style=\\\"margin-top:10px\\\">Pour « autre », merci de fournir le diagnostic </label> \\n                                </ng-container>\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns3\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns3;\\\"></tr>\\n                </table>\\n                <hr/>\\n             \\n              <b>Opérations sur l’appareil locomoteur :</b>\\n              <mat-radio-group>\\n                  <mat-radio-button value=\\\"{{lst.categorie}}\\\" [checked]=\\\"checkedradio(2119,lst.categorie)\\\"  *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(2119,2119,$event.value,'ts')\\\"  >{{lst.categorie}}</mat-radio-button>\\n                                         \\n                  \\n                </mat-radio-group>\\n              <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource16\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"Masquer(2119)\\\">\\n            \\n                  <!-- Position Column -->\\n                  <ng-container matColumnDef=\\\"categorie\\\">\\n                    <th mat-header-cell *matHeaderCellDef> \\n                        \\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                  </ng-container>\\n                \\n                  <!-- Name Column -->\\n                 \\n                \\n  \\n                  <!-- Symbol Column -->\\n                  <ng-container matColumnDef=\\\"champs\\\">\\n                    <th mat-header-cell *matHeaderCellDef>\\n                     \\n                         </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                        <ng-container *ngFor=\\\"let lst of dataSource4\\\"  >\\n                            <ng-container  *ngIf=\\\"lst.categorie!='autre'\\\" >\\n                            <mat-checkbox [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"float: left;width: 100%;height:55px;margin-top:5px\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\"    >{{lst.categorie}}</mat-checkbox>\\n                          </ng-container>\\n                            <ng-container  *ngIf=\\\"lst.categorie=='autre'\\\" >\\n                                <mat-form-field>\\n                                    <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"Autre  *\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,'text',$event.target.value)\\\" >\\n                                    <mat-error>This field is mandatory.</mat-error>\\n                               </mat-form-field>\\n                             </ng-container>\\n                        </ng-container> \\n                        </td>\\n                        </ng-container>\\n                        <ng-container matColumnDef=\\\"champs2\\\">\\n                            <th mat-header-cell *matHeaderCellDef>\\n                               \\n                                 </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\">\\n                                <ng-container *ngFor=\\\"let lst of dataSource4\\\" >\\n                                    <mat-form-field style=\\\"float: left;width: 100%\\\" >\\n                                        <input type=\\\"number\\\" formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"Quand ?\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,'text',$event.target.value)\\\" >\\n                                        <mat-error>This field is mandatory.</mat-error>\\n                                   </mat-form-field>\\n                                 </ng-container>\\n                                 </td>\\n                               <label style=\\\"margin-top:10px\\\">Pour « autre », merci de fournir le diagnostic </label> \\n                                </ng-container>\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns3\\\"></tr>\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns3;\\\"></tr>\\n                </table>\\n                <hr/>\\n                <b>Gènes ou douleurs récurrentes : </b>\\n                <mat-radio-group>\\n                    <mat-radio-button value=\\\"{{lst.categorie}}\\\" [checked]=\\\"checkedradio(3119,lst.categorie)\\\"  *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(3119,3119,$event.value,'ts')\\\"  >{{lst.categorie}}</mat-radio-button>\\n                                           \\n                    \\n                  </mat-radio-group>\\n                <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource5\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"Masquer(3119)\\\">\\n            \\n                    <!-- Position Column -->\\n                    <ng-container matColumnDef=\\\"categorie\\\">\\n                      <th mat-header-cell *matHeaderCellDef>\\n                          \\n                      </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:25%\\\"> {{element.TextCategorie}} </td>\\n                    </ng-container>\\n                  \\n                    <!-- Name Column -->\\n                    <ng-container matColumnDef=\\\"champs\\\">\\n                      <th mat-header-cell *matHeaderCellDef> \\n                         \\n                            </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> \\n                          <ng-container *ngFor=\\\"let lst of dataSource10\\\" >\\n                              <mat-checkbox [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"width:25%;float: left;\\\"   (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\" >{{lst.categorie}}</mat-checkbox>\\n                  \\n                          </ng-container> \\n                            </td>\\n                    </ng-container>\\n                  \\n                    <!-- Weight Column -->\\n                   \\n                  \\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                  </table>\\n                 \\n                  <hr/>\\n                  <br/><u>Diagnostic et traitement :</u><br/><br/>\\n                  <b>Diagnostic et traitement : </b>\\n                  <mat-radio-group>\\n                      <mat-radio-button value=\\\"{{lst.categorie}}\\\" [checked]=\\\"checkedradio(4119,lst.categorie)\\\"  *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(4119,4119,$event.value,'ts')\\\"  >{{lst.categorie}}</mat-radio-button>\\n                                             \\n                      \\n                    </mat-radio-group>\\n                    \\n                    <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource6\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"Masquer(4119)\\\">\\n       \\n          <!-- Position Column -->\\n          <ng-container matColumnDef=\\\"categorie\\\">\\n            <th mat-header-cell *matHeaderCellDef> \\n              Diagnostic et traitement :\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.categorie}} </td>\\n          </ng-container>\\n        \\n          <!-- Name Column -->\\n\\n          <ng-container matColumnDef=\\\"champs\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n                \\n                 </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n                 <ng-container  *ngIf=\\\"element.categorie!='Autre'\\\" >\\n                   <mat-radio-group *ngFor=\\\"let lst of dataSource177\\\" >\\n                       <mat-radio-button value=\\\"{{element.id_categorie}}\\\" value=\\\"{{element.id_categorie}}\\\" [checked]=\\\"checked(element.id_categorie,lst.id_categorie)\\\"  (change)=\\\"updateChkbxArray(element.id_categorie,lst.id_categorie,$event.value,'rad')\\\" >{{lst.categorie}}</mat-radio-button>\\n                     \\n                     </mat-radio-group>\\n               </ng-container>\\n               <ng-container  *ngIf=\\\"element.categorie=='Autre'\\\" >\\n                   <mat-form-field>\\n                       <input  formControlName=\\\"AutreCtrl_{{element.id_categorie}}\\\"    matInput placeholder=\\\"Autre  *\\\"  (change)=\\\"updateChkbxArray(element.id_categorie,element.id_categorie,'text',$event.target.value)\\\" >\\n                       <mat-error>This field is mandatory.</mat-error>\\n                  </mat-form-field>\\n                </ng-container>\\n\\n            \\n\\n              \\n               \\n               \\n               </td> \\n                </ng-container>\\n              \\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n        </table>\\n                  \\n                    <hr/>\\n                    \\n                    <br/><u>ANTECEDENTS FAMILIAUX (PARENTS HOMMES DE MOINS DE 55 ANS, PARENTS FEMMES DE MOINS DE 65 ANS):</u><br/><br/>\\n                    <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource7\\\" class=\\\"mat-elevation-z8\\\">\\n            \\n                        <!-- Position Column -->\\n                        <ng-container matColumnDef=\\\"categorie\\\">\\n                          <th mat-header-cell *matHeaderCellDef></th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TextCategorie}} </td>\\n                        </ng-container>\\n                      \\n                        <!-- Name Column -->\\n                        <ng-container matColumnDef=\\\"champs\\\">\\n                          <th mat-header-cell *matHeaderCellDef> \\n                            \\n                                </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\"> \\n                              <ng-container *ngFor=\\\"let lst of dataSource12\\\" >\\n                                  <mat-checkbox [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"width: 20%;float: left;\\\"   (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\">{{lst.categorie}}</mat-checkbox>\\n                      \\n                              </ng-container> \\n                             \\n                                </td>\\n                        </ng-container>\\n                      \\n                        <!-- Weight Column -->\\n                       \\n                      \\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                      </table>\\n                      <br/><u>PRESCRIPTION MEDICALE COURANTE DE CES 12 DERNIERS MOIS</u><br/><br/>\\n                      <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource8\\\" class=\\\"mat-elevation-z8\\\">\\n            \\n                          <!-- Position Column -->\\n                          <ng-container matColumnDef=\\\"categorie\\\">\\n                            <th mat-header-cell *matHeaderCellDef></th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.TextCategorie}} </td>\\n                          </ng-container>\\n                        \\n                          <!-- Name Column -->\\n                          <ng-container matColumnDef=\\\"champs\\\">\\n                            <th mat-header-cell *matHeaderCellDef> \\n                              \\n                                  </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\"> \\n                                <ng-container *ngFor=\\\"let lst of dataSource9\\\" >\\n                                    <mat-checkbox [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"width: 50%;float: left;\\\"   (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\" >{{lst.categorie}}</mat-checkbox>\\n                        \\n                                </ng-container> \\n                                  </td>\\n                          </ng-container>\\n                        \\n                          <!-- Weight Column -->\\n                         \\n                        \\n                          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                        </table>\\n                </mat-form-field>\\n                    \\n                    <div>\\n                      <button style=\\\"width:auto\\\"  mat-button matStepperPrevious>Précédent</button>\\n                      <button style=\\\"width:auto\\\"  mat-button matStepperNext>Suivant</button>\\n                    </div> </mat-grid-list>\\n                  </form>\\n               \\n                </mat-step>\\n<!--------------------------------------------------------------------------->\\n<mat-step [stepControl]=\\\"secondFormGroup\\\">\\n    <form [formGroup]=\\\"secondFormGroup\\\" (submit)=\\\"onSubmit()\\\">\\n      <ng-template matStepLabel>EXAMEN PHYSIQUE GENERAL</ng-template>\\n      <u>3 EXAMEN PHYSIQUE GENERAL</u> <br/>\\n      <mat-form-field style=\\\"display:block\\\" >\\n          <input matInput disabled >\\n              \\n             \\n\\n         <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource18\\\" class=\\\"mat-elevation-z8\\\">\\n       \\n             <!-- Position Column -->\\n             <ng-container matColumnDef=\\\"categorie\\\">\\n               <th mat-header-cell *matHeaderCellDef> \\n                   EXAMEN PHYSIQUE GENERAL\\n               </th>\\n               <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n             </ng-container>\\n           \\n             <!-- Name Column -->\\n\\n             <ng-container matColumnDef=\\\"champs\\\">\\n               <th mat-header-cell *matHeaderCellDef>\\n                   \\n                    </th>\\n               <td mat-cell *matCellDef=\\\"let element\\\">\\n                  \\n                  <ng-container  *ngIf=\\\"element.TextCategorie=='Taille'\\\" >\\n                      <mat-form-field>\\n                          <input formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"     matInput placeholder=\\\"Taille  *\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                          <mat-error>This field is mandatory.</mat-error>\\n                     </mat-form-field>\\n                   </ng-container>\\n\\n                   <ng-container  *ngIf=\\\"element.TextCategorie=='Poids'\\\"  >\\n                      <mat-form-field>\\n                          <input   formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"    matInput placeholder=\\\"Poids  *\\\" (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                          <mat-error>This field is mandatory.</mat-error>\\n                     </mat-form-field>\\n                  </ng-container>\\n\\n                   <ng-container  *ngIf=\\\"element.TextCategorie!='Taille' && element.TextCategorie!='Poids'\\\" >\\n                      <mat-radio-group *ngFor=\\\"let lst of dataSource22\\\" >\\n                          <mat-radio-button value=\\\"{{element.CategorieID}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'Normal')\\\" >{{element.TextCategorie}}</mat-radio-button>\\n                        \\n                        </mat-radio-group>\\n                  </ng-container>\\n                  \\n                  \\n                  </td> \\n                   </ng-container>\\n                 \\n             <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n             <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n           </table>\\n           <hr/>\\n<b>  Symptômes du syndrome de Marfan</b>\\n           <mat-radio-group>\\n              <mat-radio-button value=\\\"{{lst.categorie}}\\\" [checked]=\\\"checkedradio(5119,lst.categorie)\\\"  *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(5119,5119,$event.value,'ts')\\\"  >{{lst.categorie}}</mat-radio-button>\\n                                     \\n              \\n            </mat-radio-group>\\n           <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource19\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"Masquer(5119)\\\">\\n\\n              <!-- Position Column -->\\n              <ng-container matColumnDef=\\\"categorie\\\">\\n                <th mat-header-cell *matHeaderCellDef>\\n                  \\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n              </ng-container>\\n            \\n              <!-- Name Column -->\\n              <ng-container matColumnDef=\\\"champs\\\">\\n                <th mat-header-cell *matHeaderCellDef> \\n                   \\n                      </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> \\n                <ng-container *ngFor=\\\"let lst of dataSource20\\\" >\\n                    <ng-container  *ngIf=\\\"lst.categorie!='autre'\\\" >  \\n                  <mat-checkbox [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"width:100%;float: left;\\\"   (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\" >{{lst.categorie}}</mat-checkbox>\\n                </ng-container>\\n                  <ng-container  *ngIf=\\\"lst.categorie=='autre'\\\" >\\n                      <mat-form-field>\\n                          <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"Autre  *\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,'text',$event.target.value)\\\" >\\n                          <mat-error>This field is mandatory.</mat-error>\\n                     </mat-form-field>\\n                   </ng-container>\\n                </ng-container> \\n                    </td>\\n              </ng-container>\\n            \\n              <!-- Weight Column -->\\n             \\n            \\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n            </table>\\n\\n</mat-form-field>\\n\\n<div>\\n<button style=\\\"width:auto\\\"  mat-button matStepperPrevious>Précédent</button>\\n<button style=\\\"width:auto\\\"  mat-button matStepperNext>Suivant</button>\\n</div>\\n\\n</form>\\n</mat-step>\\n\\n<!-------------------------------------------->\\n                <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n                    <form [formGroup]=\\\"secondFormGroup\\\" >\\n                      <ng-template matStepLabel>SYSTEME CARDIOVASCULAIRE</ng-template>\\n                      <u>4.\\tSYSTEME CARDIOVASCULAIRE</u> <br/>\\n                      <mat-form-field style=\\\"display:block\\\" >\\n                          <input matInput disabled >\\n                              \\n                             \\n              \\n                         <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource21\\\" class=\\\"mat-elevation-z8\\\">\\n                       \\n                             <!-- Position Column -->\\n                             <ng-container matColumnDef=\\\"categorie\\\">\\n                               <th mat-header-cell *matHeaderCellDef> \\n                                  SYSTEME CARDIOVASCULAIRE\\n                               </th>\\n                               <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                             </ng-container>\\n                           \\n                             <!-- Name Column -->\\n              \\n                             <ng-container matColumnDef=\\\"champs\\\">\\n                               <th mat-header-cell *matHeaderCellDef>\\n                                   \\n                                    </th>\\n                               <td mat-cell *matCellDef=\\\"let element\\\">\\n                                  <ng-container    >\\n                                      <mat-radio-group  *ngIf=\\\"element.TextCategorie=='Rythme'\\\"  >\\n                                          <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"padding-right:20px\\\" *ngFor=\\\"let lst of dataSource22\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                          </mat-radio-group>\\n                                          <mat-radio-group style=\\\"padding-right:20px\\\"  *ngIf=\\\"element.TextCategorie=='Son'\\\"  >\\n                                              <mat-radio-button value=\\\"{{lst.categorie}}\\\" [checked]=\\\"checkedradio(element.CategorieID,lst.categorie)\\\"  *ngFor=\\\"let lst of dataSource23\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,$event.value,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                              </mat-radio-group>\\n                                              <mat-radio-group style=\\\"padding-right:20px\\\" *ngIf=\\\"element.TextCategorie=='Veine jugulaire (position à 45°)'\\\"  >\\n                                                  <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" *ngFor=\\\"let lst of dataSource23\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                                  </mat-radio-group>\\n                                                  <mat-radio-group  style=\\\"padding-right:20px\\\" *ngIf=\\\"element.TextCategorie=='Souffle'\\\"  >\\n                                                      <mat-radio-button value=\\\"{{lst.categorie}}\\\" [checked]=\\\"checkedradio(element.CategorieID,lst.categorie)\\\"  *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,$event.value,'ts')\\\"  >{{lst.categorie}}</mat-radio-button>\\n                                                      </mat-radio-group>\\n                                                      <mat-radio-group  style=\\\"padding-right:20px\\\" *ngIf=\\\"element.TextCategorie=='Œdème périphérique' || element.TextCategorie=='Reflux hépato-jugulaire'\\\"  >\\n                                                          <mat-radio-button value=\\\"{{lst.categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.id_categorie,$event.value,'ts')\\\"  >{{lst.categorie}}</mat-radio-button>\\n                                                          </mat-radio-group>\\n                                  </ng-container>\\n                                 \\n                                      \\n                                          <ng-container *ngIf=\\\"element.TextCategorie=='Son'\\\"  >\\n                                              <ng-container *ngIf=\\\"Masquer(element.CategorieID)\\\" >\\n                                            précisez :  \\n                                              <mat-checkbox *ngFor=\\\"let lst of dataSource61\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"margin-right:5px\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\"    >{{lst.categorie}}</mat-checkbox>\\n                                     </ng-container>       </ng-container>\\n                                  \\n                             \\n\\n                                            <ng-container  *ngIf=\\\"element.TextCategorie=='Souffle'\\\"   >\\n                                                <ng-container *ngIf=\\\"Masquer(element.CategorieID)\\\" >\\n                                                précisez :  \\n                                                  <mat-checkbox *ngFor=\\\"let lst of dataSource62\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"margin-right:5px\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\"    >{{lst.categorie}}</mat-checkbox>\\n                                                </ng-container>\\n</ng-container>\\n                                   \\n                                  \\n                                  \\n                                  </td> \\n                                   </ng-container>\\n                                 \\n                             <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                             <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                           </table>\\n                           \\n\\n                          <hr/>\\n\\n                           <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource25\\\" class=\\\"mat-elevation-z8\\\">\\n                       \\n                              <!-- Position Column -->\\n                              <ng-container matColumnDef=\\\"categorie\\\">\\n                                <th mat-header-cell *matHeaderCellDef> \\n                                    Vaisseaux sanguins\\n                                </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                              </ng-container>\\n                            \\n                              <!-- Name Column -->\\n               \\n                              <ng-container matColumnDef=\\\"champs\\\">\\n                                <th mat-header-cell *matHeaderCellDef>\\n                                    \\n                                     </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\">\\n                                   <ng-container    >\\n                                       <mat-radio-group  *ngIf=\\\"element.TextCategorie=='Pouls périphérique'\\\"  >\\n                                           <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" *ngFor=\\\"let lst of dataSource24\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                           </mat-radio-group>\\n                                         \\n                                                   <mat-radio-group  *ngIf=\\\"element.TextCategorie=='Bruits vasculaires' || element.TextCategorie=='Varices'\\\"  >\\n                                                       <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                                       </mat-radio-group>\\n                                   </ng-container>\\n                                   \\n \\n                                  \\n \\n                                    \\n                                   \\n                                   \\n                                   </td> \\n                                    </ng-container>\\n                                  \\n                              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                            </table>\\n\\n                          <hr/>\\n                            <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource26\\\" class=\\\"mat-elevation-z8\\\">\\n                       \\n                                <!-- Position Column -->\\n                                <ng-container matColumnDef=\\\"categorie\\\">\\n                                  <th mat-header-cell *matHeaderCellDef> \\n                                      Pouls après 5 minutes de repos\\n                                  </th>\\n                                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                                </ng-container>\\n                              \\n                                <!-- Name Column -->\\n                 \\n                                <ng-container matColumnDef=\\\"champs\\\">\\n                                  <th mat-header-cell *matHeaderCellDef>\\n                                      \\n                                       </th>\\n                                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                                     <ng-container    >\\n                                        <mat-form-field>\\n                                            <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"______ /min\\\" (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                            <mat-error>This field is mandatory.</mat-error>\\n                                       </mat-form-field>\\n                                     </ng-container>\\n                        \\n                                     \\n                                     </td> \\n                                      </ng-container>\\n                                    \\n                                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                              </table>\\n                            <hr/>\\n                            <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource27\\\" class=\\\"mat-elevation-z8\\\">\\n                       \\n                                <!-- Position Column -->\\n                                <ng-container matColumnDef=\\\"categorie\\\">\\n                                  <th mat-header-cell *matHeaderCellDef> \\n                                      Pression artérielle en position allongée sur le dos après 5 minutes de repos\\n                                  </th>\\n                                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> \\n                                    {{element.TextCategorie}} </td>\\n                                </ng-container>\\n                              \\n                                <!-- Name Column -->\\n                 \\n                                <ng-container matColumnDef=\\\"champs\\\">\\n                                  <th mat-header-cell *matHeaderCellDef>\\n                                      \\n                                       </th>\\n                                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                                     <ng-container    >\\n                                        <mat-form-field >\\n                                            <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"___ / ___ mmHg\\\" (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                            <mat-error>This field is mandatory.</mat-error>\\n                                       </mat-form-field>\\n                                     </ng-container>\\n                        \\n                                     \\n                                     </td> \\n                                      </ng-container>\\n                                    \\n                                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                              </table>\\n\\n                              <hr/>\\n                              <u>4.1  ECG 12 ELECTRODES* EN POSITION ALLONGEE SUR LE DOS APRES 5 MINUTES DE REPOS</u> <br/>\\n         \\n                            <br/>\\n                            <b>  Rythme/conduction</b>\\n                            <mat-radio-group>\\n                                <mat-radio-button value=\\\"{{lst.categorie}}\\\" [checked]=\\\"checkedradio(6119,lst.categorie)\\\"  *ngFor=\\\"let lst of dataSource23\\\"  (change)=\\\"updateChkbxArray(6119,6119,$event.value,'ts')\\\"  >{{lst.categorie}}</mat-radio-button>\\n                                                       \\n                                \\n                              </mat-radio-group>\\n                              <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource29\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"Masquer(6119)\\\">\\n                         \\n                                  <!-- Position Column -->\\n                                  <ng-container matColumnDef=\\\"categorie\\\">\\n                                    <th mat-header-cell *matHeaderCellDef> \\n                                      \\n                                    </th>\\n                                    <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> \\n                                      {{element.TextCategorie}} </td>\\n                                  </ng-container>\\n                                \\n                                  <!-- Name Column -->\\n                   \\n                                  <ng-container matColumnDef=\\\"champs\\\">\\n                                    <th mat-header-cell *matHeaderCellDef>\\n                                       \\n                                         </th>\\n                                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                                        <ng-container *ngFor=\\\"let lst of dataSource28\\\"  >\\n                                            <ng-container  *ngIf=\\\"lst.categorie!='bloc atrio-ventriculaire'\\\" >\\n                                        <mat-checkbox [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"float: left;width: 100%;height:55px;margin-top:5px\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\"   >{{lst.categorie}}</mat-checkbox>\\n                                          </ng-container>\\n                                          \\n                                            <ng-container  *ngIf=\\\"lst.categorie=='bloc atrio-ventriculaire'\\\" >\\n                                                précisez :  \\n                                                <mat-checkbox *ngFor=\\\"let lst of dataSource63\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"margin-right:5px\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\"    >{{lst.categorie}}</mat-checkbox>\\n                                          \\n                                             </ng-container>\\n                                        </ng-container> \\n                          \\n                                       \\n                                       </td> \\n                                        </ng-container>\\n                                      \\n                                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                                </table>\\n         <hr/>\\n         <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource30\\\" class=\\\"mat-elevation-z8\\\">\\n                         \\n            <!-- Position Column -->\\n            <ng-container matColumnDef=\\\"categorie\\\">\\n              <th mat-header-cell *matHeaderCellDef> \\n                  Indices temporels\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> \\n                {{element.TextCategorie}} </td>\\n            </ng-container>\\n          \\n            <!-- Name Column -->\\n\\n            <ng-container matColumnDef=\\\"champs\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                  <mat-radio-group>\\n                      </mat-radio-group>\\n                   </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                  <ng-container *ngFor=\\\"let lst of dataSource31\\\"  >\\n                      <ng-container   >\\n                          <mat-form-field>\\n                              <input   formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"{{lst.categorie}}\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                              <mat-error>This field is mandatory.</mat-error>\\n                         </mat-form-field>\\n                       </ng-container>\\n                  </ng-container> \\n    \\n                 \\n                 </td> \\n                  </ng-container>\\n                \\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n          </table>\\n         <hr/>\\n           <U>Dépolarisation/complexe QRS</U><br/>\\n           <b>  Dépolarisation/complexe QRS</b>\\n           <mat-radio-group>\\n              <mat-radio-button value=\\\"{{lst.categorie}}\\\" [checked]=\\\"checkedradio(7119,lst.categorie)\\\"  *ngFor=\\\"let lst of dataSource23\\\"  (change)=\\\"updateChkbxArray(7119,7119,$event.value,'ts')\\\"  >{{lst.categorie}}</mat-radio-button>\\n                                     \\n              \\n            </mat-radio-group>\\n\\n         <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource34\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"Masquer(7119)\\\">\\n                         \\n            <!-- Position Column -->\\n            <ng-container matColumnDef=\\\"categorie\\\">\\n              <th mat-header-cell *matHeaderCellDef> \\n                  Dépolarisation/complexe QRS\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> \\n                {{element.TextCategorie}} </td>\\n            </ng-container>\\n          \\n            <!-- Name Column -->\\n\\n            <ng-container matColumnDef=\\\"champs\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n             \\n                   </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                  <ng-container *ngFor=\\\"let lst of dataSource32\\\"  >\\n                      <ng-container   >\\n                      <mat-checkbox [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"float: left;width: 100%;height:55px;margin-top:5px\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\"    >{{lst.categorie}}</mat-checkbox>\\n                    </ng-container>\\n              \\n                  </ng-container> \\n    \\n                 \\n                 </td> \\n                  </ng-container>\\n                \\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n          </table>\\n          <hr/>\\n          <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource33\\\" class=\\\"mat-elevation-z8\\\">\\n                          \\n             <!-- Position Column -->\\n             <ng-container matColumnDef=\\\"categorie\\\">\\n               <th mat-header-cell *matHeaderCellDef> \\n                   Indices temporels\\n               </th>\\n               <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> \\n                 {{element.TextCategorie}} </td>\\n             </ng-container>\\n           \\n             <!-- Name Column -->\\n \\n             <ng-container matColumnDef=\\\"champs\\\">\\n               <th mat-header-cell *matHeaderCellDef>\\n                   <mat-radio-group>\\n                       </mat-radio-group>\\n                    </th>\\n               <td mat-cell *matCellDef=\\\"let element\\\">\\n                 <mat-radio-group style=\\\"padding-right:20px\\\"  *ngIf=\\\"element.TextCategorie!='Bloc de branche' && element.TextCategorie!='Hypertrophie du ventricule gauche'\\\"     >\\n                  <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" value=\\\"{{lst.id_categorie}}\\\" *ngFor=\\\"let lst of dataSource23\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                     \\n                </mat-radio-group>\\n                  <mat-radio-group  style=\\\"padding-right:20px\\\" *ngIf=\\\"element.TextCategorie=='Bloc de branche'\\\"  >\\n                      <mat-radio-button value=\\\"{{lst.categorie}}\\\" [checked]=\\\"checkedradio(element.CategorieID,lst.categorie)\\\"  *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,$event.value,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                      </mat-radio-group >\\n                      <mat-radio-group  style=\\\"padding-right:20px\\\" *ngIf=\\\"element.TextCategorie=='Hypertrophie du ventricule gauche'\\\"  >\\n                          <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" value=\\\"{{lst.id_categorie}}\\\" *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                          </mat-radio-group >\\n                      <ng-container   *ngIf=\\\"element.TextCategorie=='Bloc de branche' \\\"  >\\n                          <ng-container   *ngIf=\\\"Masquer(element.CategorieID)\\\"  >\\n                          précisez :  \\n                          <mat-checkbox *ngFor=\\\"let lst of dataSource64\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"margin-right:5px\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\"    >{{lst.categorie}}</mat-checkbox>\\n                        </ng-container>\\n                      </ng-container>\\n                    \\n                  </td> \\n                   </ng-container>\\n                 \\n             <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n             <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n           </table>\\n           <hr/>\\n           Repolarisation (segment ST, ondes T, intervalle QT)\\n           <mat-radio-group>\\n              <mat-radio-button value=\\\"{{lst.categorie}}\\\" [checked]=\\\"checkedradio(8119,lst.categorie)\\\"  *ngFor=\\\"let lst of dataSource23\\\"  (change)=\\\"updateChkbxArray(8119,8119,$event.value,'ts')\\\"  >{{lst.categorie}}</mat-radio-button>\\n                                     \\n              \\n            </mat-radio-group>\\n\\n         \\n          \\n          <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource35\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"Masquer(8119)\\\">\\n                          \\n             <!-- Position Column -->\\n             <ng-container matColumnDef=\\\"categorie\\\">\\n               <th mat-header-cell *matHeaderCellDef> \\n                  Électrode\\n               </th>\\n               <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> \\n                 {{element.TextCategorie}} </td>\\n             </ng-container>\\n           \\n             <!-- Name Column -->\\n \\n             <ng-container matColumnDef=\\\"champs\\\">\\n               <th mat-header-cell *matHeaderCellDef>\\n                   <mat-radio-group>\\n                       </mat-radio-group>\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                        <ng-container *ngFor=\\\"let lst of dataSource36\\\"  >\\n                            <ng-container   >\\n                            <mat-checkbox [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"float: left;width:8%;height:55px;margin-top:5px\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\"    >{{lst.categorie}}</mat-checkbox>\\n                          </ng-container>\\n                    \\n                        </ng-container> \\n          \\n                       \\n                       </td> \\n                   </ng-container>\\n                 \\n             <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n             <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n           </table>\\n          <hr/>\\n        <u>4.2  ÉCHOCARDIOGRAPHIE*</u>\\n         \\n            <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource37\\\" class=\\\"mat-elevation-z8\\\">\\n                       \\n                <!-- Position Column -->\\n                <ng-container matColumnDef=\\\"categorie\\\">\\n                  <th mat-header-cell *matHeaderCellDef> \\n                      Surface corporelle (BSA) : m2\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                </ng-container>\\n              \\n                <!-- Name Column -->\\n \\n                <ng-container matColumnDef=\\\"champs\\\">\\n                  <th mat-header-cell *matHeaderCellDef>\\n                      \\n                       </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                     <ng-container>\\n                       <mat-form-field style=\\\"width:60%\\\">\\n                             <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"_________m2\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                             <mat-error>This field is mandatory.</mat-error>\\n                        </mat-form-field>\\n                      </ng-container>\\n  </td> \\n                      </ng-container>\\n                    \\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n              </table>\\n\\n<hr/>\\n             \\n                <br/>\\n                <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource38\\\" class=\\\"mat-elevation-z8\\\">\\n                             \\n                    <!-- Position Column -->\\n                    <ng-container matColumnDef=\\\"categorie\\\">\\n                      <th mat-header-cell *matHeaderCellDef> \\n                          Ventricule gauche\\n                      </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                    </ng-container>\\n                  \\n                    <!-- Name Column -->\\n      \\n                    <ng-container matColumnDef=\\\"champs\\\">\\n                      <th mat-header-cell *matHeaderCellDef>\\n                          \\n                           </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\">\\n                         <ng-container    >\\n                             <mat-radio-group  *ngIf=\\\"element.TextCategorie=='Mouvement régional de la paroi'\\\"  >\\n                                 <mat-radio-button value=\\\"{{element.CategorieID}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"padding-right:20px\\\" *ngFor=\\\"let lst of dataSource23\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                 </mat-radio-group>\\n                                \\n                         </ng-container>\\n                         <ng-container  *ngIf=\\\"element.TextCategorie!='Mouvement régional de la paroi' && element.TextCategorie!='Fonction diastolique'\\\"  >\\n                             <mat-form-field style=\\\"width:60%\\\">\\n                                 <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"{{element.unite}}\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\"  >\\n                                 <mat-error>This field is mandatory.</mat-error>\\n                            </mat-form-field>\\n                          </ng-container>\\n      \\n                          <ng-container  *ngIf=\\\"element.TextCategorie=='Fonction diastolique'\\\"  >\\n                             <mat-form-field style=\\\"width:60%\\\" *ngFor=\\\"let lst of dataSource39\\\" >\\n                                 <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"{{element.unite}}\\\" (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                 <mat-error>This field is mandatory.</mat-error>\\n                            </mat-form-field>\\n                         </ng-container>\\n      \\n                          \\n                         \\n                         \\n                         </td> \\n                          </ng-container>\\n                        \\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                  </table>\\n                  <hr/>\\n                  <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource40\\\" class=\\\"mat-elevation-z8\\\">\\n                       \\n                      <!-- Position Column -->\\n                      <ng-container matColumnDef=\\\"categorie\\\">\\n                        <th mat-header-cell *matHeaderCellDef> \\n                            Oreillette gauche\\n                        </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                      </ng-container>\\n                    \\n                      <!-- Name Column -->\\n       \\n                      <ng-container matColumnDef=\\\"champs\\\">\\n                        <th mat-header-cell *matHeaderCellDef>\\n                            \\n                             </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\n                           <ng-container>\\n                             <mat-form-field style=\\\"width:60%\\\">\\n                                   <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"_________m2\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                   <mat-error>This field is mandatory.</mat-error>\\n                              </mat-form-field>\\n                            </ng-container>\\n        </td> \\n                            </ng-container>\\n                          \\n                      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                    </table>\\n                    <hr/>\\n                    <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource41\\\" class=\\\"mat-elevation-z8\\\">\\n                         \\n                        <!-- Position Column -->\\n                        <ng-container matColumnDef=\\\"categorie\\\">\\n                          <th mat-header-cell *matHeaderCellDef> \\n                              Oreillette droite/veine cave inférieure \\n                          </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                        </ng-container>\\n                      \\n                        <!-- Name Column -->\\n         \\n                        <ng-container matColumnDef=\\\"champs\\\">\\n                          <th mat-header-cell *matHeaderCellDef>\\n                              \\n                               </th>\\n                               <td mat-cell *matCellDef=\\\"let element\\\">\\n                                  <ng-container    >\\n                                      <mat-radio-group  *ngIf=\\\"element.TextCategorie=='Variabilité respiratoire du diamètre de la veine cave inférieure'\\\"  >\\n                                          <mat-radio-button value=\\\"{{element.CategorieID}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"padding-right:20px\\\" *ngFor=\\\"let lst of dataSource42\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                          </mat-radio-group>\\n                                         \\n                                  </ng-container>\\n                                  <ng-container  *ngIf=\\\"element.TextCategorie!='Variabilité respiratoire du diamètre de la veine cave inférieure'\\\"  >\\n                                      <mat-form-field style=\\\"width:60%\\\">\\n                                          <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"  \\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                          <mat-error>This field is mandatory.</mat-error>\\n                                     </mat-form-field>\\n                                   </ng-container>\\n          </td> \\n                              </ng-container>\\n                            \\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                      </table>\\n\\n                      <hr/>\\n                      <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource43\\\" class=\\\"mat-elevation-z8\\\">\\n                           \\n                          <!-- Position Column -->\\n                          <ng-container matColumnDef=\\\"categorie\\\">\\n                            <th mat-header-cell *matHeaderCellDef> \\n                                Ventricule droit\\n                            </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                          </ng-container>\\n                        \\n                          <!-- Name Column -->\\n           \\n                          <ng-container matColumnDef=\\\"champs\\\">\\n                            <th mat-header-cell *matHeaderCellDef>\\n                                \\n                                 </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\">\\n                                <ng-container    >\\n                                    <mat-radio-group  *ngIf=\\\"element.TextCategorie=='Mouvement régional de la paroi'\\\"  >\\n                                        </mat-radio-group>\\n                                       \\n                                </ng-container>\\n                                <ng-container    >\\n                                    <mat-radio-group  *ngIf=\\\"element.TextCategorie=='Anévrisme local' || element.TextCategorie=='Hypertrophie'\\\"  >\\n                                        <mat-radio-button value=\\\"{{element.CategorieID}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"padding-right:20px\\\" *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                        </mat-radio-group>\\n                                       \\n                                </ng-container>\\n                                <ng-container  *ngIf=\\\"element.TextCategorie!='Mouvement régional de la paroi' && element.TextCategorie!='Anévrisme local' && element.TextCategorie!='Hypertrophie'\\\"  >\\n                                    <mat-form-field style=\\\"width:60%\\\">\\n                                        <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"  \\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                        <mat-error>This field is mandatory.</mat-error>\\n                                   </mat-form-field>\\n                                 </ng-container>\\n            </td> \\n                                </ng-container>\\n                              \\n                          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                        </table>\\n                        <hr/>\\n\\n                        <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource44\\\" class=\\\"mat-elevation-z8\\\">\\n                           \\n                            <!-- Position Column -->\\n                            <ng-container matColumnDef=\\\"categorie\\\">\\n                              <th mat-header-cell *matHeaderCellDef> \\n                                  Valvules\\n                              </th>\\n                              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                            </ng-container>\\n                          \\n                            <!-- Name Column -->\\n             \\n                            <ng-container matColumnDef=\\\"champs\\\">\\n                              <th mat-header-cell *matHeaderCellDef>\\n                                  \\n                                   </th>\\n                              <td mat-cell *matCellDef=\\\"let element\\\">\\n                                  <ng-container    >\\n                                      <mat-radio-group  *ngIf=\\\"element.TextCategorie!='Visualisation de l’ostium coronarien' && element.TextCategorie!='Diamètre de la base de l’aorte' && element.TextCategorie!='Aorte ascendante'\\\"  >\\n                                          <mat-radio-button value=\\\"{{lst.id_categorie}}\\\"  [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"padding-right:20px\\\" *ngFor=\\\"let lst of dataSource23\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                          </mat-radio-group>\\n                                         \\n                                  </ng-container>\\n                                  <ng-container  *ngIf=\\\"element.TextCategorie=='Visualisation de l’ostium coronarien'\\\"  >\\n                                      <mat-radio-group    >\\n                                          <mat-radio-button value=\\\"{{lst.categorie}}\\\"  [checked]=\\\"checkedradio(element.CategorieID,lst.categorie)\\\" style=\\\"padding-right:20px\\\" *ngFor=\\\"let lst of dataSource45\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,$event.value,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                          </mat-radio-group>\\n                                          <ng-container   *ngIf=\\\"Masquer(element.CategorieID)\\\"  >\\n                                              précisez :  \\n                                              <mat-checkbox *ngFor=\\\"let lst of dataSource66\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"margin-right:5px\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\"    >{{lst.categorie}}</mat-checkbox>\\n                                            </ng-container>\\n                                      \\n                                  </ng-container>\\n                                  <ng-container  *ngIf=\\\"element.TextCategorie =='Diamètre de la base de l’aorte' || element.TextCategorie =='Aorte ascendante'\\\"  >\\n                                      <mat-form-field style=\\\"width:60%\\\">\\n                                          <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"______ cm\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                          <mat-error>This field is mandatory.</mat-error>\\n                                     </mat-form-field>\\n                                   </ng-container>\\n              </td> \\n                                  </ng-container>\\n                                \\n                            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                          </table>\\n                          <hr/>\\n\\n                          \\n                            </mat-form-field>\\n        \\n          <div>\\n            <button style=\\\"width:auto\\\"  mat-button matStepperPrevious>Précédent</button>\\n            <button style=\\\"width:auto\\\"  mat-button matStepperNext>Suivant</button>\\n          </div>\\n      \\n        </form>\\n      </mat-step>\\n\\n\\n      <!------------------------------------------------------------------------->\\n    \\n     \\n      <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n          <form [formGroup]=\\\"secondFormGroup\\\" >\\n            <ng-template matStepLabel>RESULTATS SANGUINS (A JEUN)</ng-template>\\n            <u>5.\\tRESULTATS SANGUINS (A JEUN)</u> <br/>\\n            <mat-form-field style=\\\"display:block\\\" >\\n                <input matInput disabled >\\n                <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource46\\\" class=\\\"mat-elevation-z8\\\">\\n                           \\n                    <!-- Position Column -->\\n                    <ng-container matColumnDef=\\\"categorie\\\">\\n                      <th mat-header-cell *matHeaderCellDef> \\n                          RESULTATS SANGUINS (A JEUN)\\n                      </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                    </ng-container>\\n                  \\n                    <!-- Name Column -->\\n     \\n                    <ng-container matColumnDef=\\\"champs\\\">\\n                      <th mat-header-cell *matHeaderCellDef>\\n                          \\n                           </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\">\\n                        \\n                          <ng-container    >\\n                              <mat-form-field style=\\\"width:60%\\\">\\n                                  <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"  \\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                  <mat-error>This field is mandatory.</mat-error>\\n                             </mat-form-field>\\n                           </ng-container>\\n                         </td> \\n                          </ng-container>\\n                        \\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                  </table>\\n                  <hr/> \\n              </mat-form-field>\\n        \\n              <div>\\n                <button style=\\\"width:auto\\\"  mat-button matStepperPrevious>Précédent</button>\\n                <button style=\\\"width:auto\\\"  mat-button matStepperNext>Suivant</button>\\n              </div>\\n          \\n            </form>\\n          </mat-step>  \\n          \\n             <!-------------------------------------------------------->\\n\\n      <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n          <form [formGroup]=\\\"secondFormGroup\\\" >\\n            <ng-template matStepLabel>APPAREIL LOCOMOTEUR</ng-template>\\n            <u>APPAREIL LOCOMOTEUR</u> <br/>\\n            <i>6.1  COLONNE VERTEBRALE, NIVEAU DU BASSIN ET LONGUEUR DES JAMBES</i>\\n            <mat-form-field style=\\\"display:block\\\" >\\n                <input matInput disabled >\\n                <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource47\\\" class=\\\"mat-elevation-z8\\\">\\n                           \\n                    <!-- Position Column -->\\n                    <ng-container matColumnDef=\\\"categorie\\\">\\n                      <th mat-header-cell *matHeaderCellDef> \\n                          COLONNE VERTEBRALE, NIVEAU DU BASSIN ET LONGUEUR DES JAMBES\\n                      </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                    </ng-container>\\n                  \\n                    <!-- Name Column -->\\n     \\n                    <ng-container matColumnDef=\\\"champs\\\">\\n                      <th mat-header-cell *matHeaderCellDef>\\n                          \\n                           </th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\">\\n                        \\n                          <ng-container  *ngIf=\\\"element.TextCategorie=='Forme de la colonne'\\\"  >\\n                              <mat-radio-group    >\\n                                  <mat-radio-button value=\\\"{{lst.id_categorie}}\\\"  [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"padding-right:20px\\\" *ngFor=\\\"let lst of dataSource48\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                  </mat-radio-group>\\n                                  \\n                              \\n                          </ng-container>\\n                          <ng-container  *ngIf=\\\"element.TextCategorie=='Niveau du bassin'\\\"  >\\n                              <mat-radio-group    >\\n                                  <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"padding-right:20px\\\" *ngFor=\\\"let lst of dataSource49\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                  </mat-radio-group>\\n                                  \\n                              \\n                          </ng-container>\\n                          <ng-container  *ngIf=\\\"element.TextCategorie=='Différence de niveau malléolaire'\\\"  >\\n                              <mat-radio-group    >\\n                                  <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"padding-right:20px\\\" *ngFor=\\\"let lst of dataSource23\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                  </mat-radio-group>\\n                                  \\n                              \\n                          </ng-container>\\n                          <ng-container  *ngIf=\\\"element.TextCategorie=='Rotation cervicale à gauche' || element.TextCategorie=='Rotation cervicale à droite'\\\"  >\\n                              \\n                                  <mat-form-field  >\\n                                      <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                      <mat-error>This field is mandatory.</mat-error>\\n                                  \\n                                 </mat-form-field>\\n                                 <mat-radio-group    >    \\n                                    douloureux <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"padding-left:60px\\\" *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                 </mat-radio-group>\\n                                \\n                                  \\n                              \\n                          </ng-container>\\n                          <ng-container  *ngIf=\\\"element.TextCategorie=='Souplesse rachidienne'\\\"  >\\n                              <mat-form-field style=\\\"width:60%\\\">\\n                                  <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"Distance du bout des doigts au sol\\t_____cm\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                  <mat-error>This field is mandatory.</mat-error>\\n                             </mat-form-field>\\n                              \\n                          </ng-container>\\n                         \\n      </td> \\n                          </ng-container>\\n                        \\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                  </table>\\n                  <hr/>\\n                  <i>6.2  EXAMEN DES HANCHES, DE L’AINE ET DE LA CUISSE</i>\\n          <hr/>\\n                  <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource51\\\" class=\\\"mat-elevation-z8\\\">\\n                           \\n                      <!-- Position Column -->\\n                      <ng-container matColumnDef=\\\"categorie\\\">\\n                        <th mat-header-cell *matHeaderCellDef> \\n                            Souplesse de la hanche\\n                             </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                      </ng-container>\\n                    \\n                      <!-- Name Column -->\\n       \\n                      <ng-container matColumnDef=\\\"champs\\\">\\n                        <th mat-header-cell *matHeaderCellDef>\\n                            \\n                             </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\n                          \\n                            <ng-container  *ngIf=\\\"element.TextCategorie=='Forme de la colonne à gauche' || element.TextCategorie=='Forme de la colonne à droite'\\\"  >\\n                                <mat-radio-group    >\\n                                    <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"padding-right:20px\\\" *ngFor=\\\"let lst of dataSource48\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                    </mat-radio-group>\\n                                    \\n                                \\n                            </ng-container>\\n                            <ng-container  *ngIf=\\\"element.TextCategorie=='Hernie à gauche' || element.TextCategorie=='Hernie à droite'\\\"  >\\n                               \\n                                    <label style=\\\"width:30%\\\" >\\n                                        \\n                                    </label>\\n                                   <mat-radio-group    >    \\n                                       <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"width:30%\\\" *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                   </mat-radio-group>\\n                                   \\n                                \\n                            </ng-container>\\n                            <ng-container  *ngIf=\\\"element.TextCategorie=='Sensibilité à la palpation de l’aine à gauche' || element.TextCategorie=='Sensibilité à la palpation de l’aine à droite'\\\"  >\\n                               \\n                                    <label style=\\\"width:20%\\\" >\\n                                        \\n                                    </label>\\n                                   <mat-radio-group    >    \\n                                       <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"width:20%\\\"*ngFor=\\\"let lst of dataSource54\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                   </mat-radio-group>\\n                                   \\n                                     \\n                                \\n                            </ng-container>\\n                            <ng-container  *ngIf=\\\"element.TextCategorie!='Sensibilité à la palpation de l’aine à gauche' && element.TextCategorie!='Hernie à gauche' && element.TextCategorie!='Sensibilité à la palpation de l’aine à droite' && element.TextCategorie!='Hernie à droite'\\\"  >\\n                               \\n                                    <mat-form-field  >\\n                                        <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                        <mat-error>This field is mandatory.</mat-error>\\n                                    \\n                                   </mat-form-field>\\n                                   <mat-radio-group    >    \\n                                      douloureux <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"padding-left:60px\\\" *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                   </mat-radio-group>\\n                                    \\n                                    \\n                                \\n                            </ng-container>\\n                           \\n                           \\n        </td> \\n                            </ng-container>\\n                          \\n                      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                    </table>\\n                    <hr/>\\n                  <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource52\\\" class=\\\"mat-elevation-z8\\\">\\n                           \\n                      <!-- Position Column -->\\n                      <ng-container matColumnDef=\\\"categorie\\\">\\n                        <th mat-header-cell *matHeaderCellDef> \\n                            Muscles\\n                             </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                      </ng-container>\\n                    \\n                      <!-- Name Column -->\\n       \\n                      <ng-container matColumnDef=\\\"champs\\\">\\n                        <th mat-header-cell *matHeaderCellDef>\\n                            \\n                             </th>\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\n                          \\n                            \\n                               \\n                                    <label style=\\\"width:20%\\\" >\\n                                        \\n                                    </label>\\n                                   <mat-radio-group    >    \\n                                       <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"width:20%\\\" *ngFor=\\\"let lst of dataSource23\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                   </mat-radio-group>\\n                                   <mat-form-field>\\n                                      <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"précisez : \\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                      <mat-error>This field is mandatory.</mat-error>\\n                                  \\n                                 </mat-form-field>\\n                                   \\n                                \\n                       \\n                           \\n                               </td> \\n                        </ng-container>\\n                          \\n                      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                    </table>\\n                    <hr/>\\n                    6.3  EXAMEN DU GENOU\\n                    <br/>\\n                    <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource53\\\" class=\\\"mat-elevation-z8\\\">\\n                           \\n                        <!-- Position Column -->\\n                        <ng-container matColumnDef=\\\"categorie\\\">\\n                          <th mat-header-cell *matHeaderCellDef> \\n                              EXAMEN DU GENOU\\n                               </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                        </ng-container>\\n                      \\n                        <!-- Name Column -->\\n         \\n                        <ng-container matColumnDef=\\\"champs\\\">\\n                          <th mat-header-cell *matHeaderCellDef>\\n                              \\n                               </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            \\n                              \\n                                  \\n                                     \\n                                    \\n                                    <ng-container  *ngIf=\\\"element.TextCategorie!='Axe de l’articulation du genou à gauche' && element.TextCategorie!='Flexion / Extension à gauche' && element.TextCategorie!='Axe de l’articulation du genou à droite' && element.TextCategorie!='Flexion / Extension à droite'\\\"  >\\n                                 \\n                                      <label style=\\\"width:20%\\\" >\\n                                          \\n                                      </label>\\n                                     <mat-radio-group  *ngFor=\\\"let lst of dataSource56\\\"   >  \\n                                        <mat-radio-button value=\\\"{{element.CategorieID}}\\\" style=\\\"width:15%\\\"  [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.value,'rad')\\\" >{{lst.categorie}}</mat-radio-button>\\n                       \\n                                         </mat-radio-group>\\n                                    </ng-container>\\n                                  \\n                                  <ng-container  *ngIf=\\\"element.TextCategorie=='Axe de l’articulation du genou à gauche' || element.TextCategorie=='Axe de l’articulation du genou à droite'\\\"  >\\n                                     \\n                                    <label style=\\\"width:20%\\\" >\\n                                        \\n                                    </label>\\n                                   <mat-radio-group    >    \\n                                       <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"width:20%\\\" *ngFor=\\\"let lst of dataSource55\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                   </mat-radio-group>\\n                                 \\n                                </ng-container>\\n                                   <ng-container  *ngIf=\\\"element.TextCategorie=='Flexion / Extension à gauche' || element.TextCategorie=='Flexion / Extension à droite'\\\"  >\\n                                      \\n                                          <mat-form-field  >\\n                                              <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                              <mat-error>This field is mandatory.</mat-error>\\n                                          \\n                                         </mat-form-field>\\n                                         <mat-radio-group    >    \\n                                            douloureux <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"padding-left:60px\\\" *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                         </mat-radio-group>\\n                                        \\n                                          \\n                                      \\n                                  </ng-container>\\n                                     \\n                                  \\n                         \\n                             \\n                                 </td> \\n                          </ng-container>\\n                            \\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                      </table>\\n                      <hr/>\\n                      <hr/>\\n                      6.4 \\tEXAMEN DE LA JAMBE, DE LA CHEVILLE ET DU PIED\\n                      <br/>\\n                      <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource57\\\" class=\\\"mat-elevation-z8\\\">\\n                             \\n                          <!-- Position Column -->\\n                          <ng-container matColumnDef=\\\"categorie\\\">\\n                            <th mat-header-cell *matHeaderCellDef> \\n                EXAMEN DE LA JAMBE, DE LA CHEVILLE ET DU PIED\\n                                 </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                          </ng-container>\\n                        \\n                          <!-- Name Column -->\\n           \\n                          <ng-container matColumnDef=\\\"champs\\\">\\n                            <th mat-header-cell *matHeaderCellDef>\\n                                \\n                                 </th>\\n                            <td mat-cell *matCellDef=\\\"let element\\\">\\n                              \\n                                \\n                                    \\n                                       \\n                                      \\n                                     \\n                                    <ng-container  *ngIf=\\\"element.TextCategorie=='Supination totale à droite' || element.TextCategorie=='Pronation totale à droite' || element.TextCategorie=='Supination totale à gauche' || element.TextCategorie=='Pronation totale à gauche'\\\"  >\\n                                     \\n                                      <label style=\\\"width:20%\\\" >\\n                                          \\n                                      </label>\\n                                     <mat-radio-group    >    \\n                                         <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"width:20%\\\" *ngFor=\\\"let lst of dataSource58\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                     </mat-radio-group>\\n                                    </ng-container>\\n                                 \\n                                  <ng-container  *ngIf=\\\"element.TextCategorie=='Articulation métatarsienne à droite' || element.TextCategorie=='Articulation métatarsienne à gauche'\\\"  >\\n                                      \\n                                    <label style=\\\"width:30%\\\" >\\n                                        \\n                                    </label>\\n                                   <mat-radio-group    >    \\n                                       <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"width:30%\\\" *ngFor=\\\"let lst of dataSource59\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                   </mat-radio-group>\\n                                 \\n                                </ng-container>\\n                                  <ng-container  *ngIf=\\\"element.TextCategorie=='Sensibilité de la cheville à droite' || element.TextCategorie=='Sensibilité de la cheville à gauche'\\\"  >\\n                                     \\n                                    <label style=\\\"width:30%\\\" >\\n                                        \\n                                    </label>\\n                                   <mat-radio-group    >    \\n                                       <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"width:30%\\\" *ngFor=\\\"let lst of dataSource9\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                   </mat-radio-group>\\n                                  \\n                                </ng-container>\\n\\n                                  <ng-container  *ngIf=\\\"element.TextCategorie=='Signe de tiroir antérieur à droite' || element.TextCategorie=='Signe de tiroir antérieur à gauche'\\\"  >\\n                                      \\n                                    <label style=\\\"width:15%\\\" >\\n                                        \\n                                    </label>\\n                                   <mat-radio-group    >    \\n                                       <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\"  style=\\\"width:20%\\\" *ngFor=\\\"let lst of dataSource56\\\" (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" >{{lst.categorie}}</mat-radio-button>\\n                                   </mat-radio-group>\\n                                  </ng-container>\\n                              \\n                                     <ng-container  *ngIf=\\\"element.TextCategorie=='Dorsiflexion à gauche' || element.TextCategorie=='Flexion plantaire à gauche' || element.TextCategorie=='Dorsiflexion à droite' || element.TextCategorie=='Flexion plantaire à droite'\\\"  >\\n                                       \\n                                            <mat-form-field    >\\n                                                <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                                <mat-error>This field is mandatory.</mat-error>\\n                                            \\n                                           </mat-form-field>\\n                                           <mat-radio-group    >    \\n                                              douloureux <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"padding-left:60px\\\" *ngFor=\\\"let lst of dataSource9\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\">{{lst.categorie}}</mat-radio-button>\\n                                           </mat-radio-group>\\n                                             \\n                                            \\n                                        \\n                                    </ng-container>\\n                                       \\n                                    \\n                           \\n                               \\n                                   </td> \\n                            </ng-container>\\n                              \\n                          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                        </table>\\n                        <hr/>\\n\\n              </mat-form-field>\\n        \\n              <div>\\n                <button style=\\\"width:auto\\\"  mat-button matStepperPrevious>Précédent</button>\\n                <button style=\\\"width:auto\\\"  mat-button matStepperNext>Suivant</button>\\n              </div>\\n          \\n            </form>\\n          </mat-step>  \\n\\n          <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n              <form [formGroup]=\\\"secondFormGroup\\\"  (submit)=\\\"onSubmit()\\\"  >\\n                <ng-template matStepLabel>RESUME DE L’EVALUATION</ng-template>\\n                <u>7.\\tRESUME DE L’EVALUATION</u> <br/>\\n                 <mat-form-field style=\\\"display:block\\\" >\\n                    <input matInput disabled >\\n                    <table style=\\\"width:100%\\\" mat-table [dataSource]=\\\"dataSource60\\\" class=\\\"mat-elevation-z8\\\">\\n                           \\n                        <!-- Position Column -->\\n                        <ng-container matColumnDef=\\\"categorie\\\">\\n                          <th mat-header-cell *matHeaderCellDef> \\n                              RESUME DE L’EVALUATION\\n                               </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:50%\\\"> {{element.TextCategorie}} </td>\\n                        </ng-container>\\n                      \\n                        <!-- Name Column -->\\n         \\n                        <ng-container matColumnDef=\\\"champs\\\">\\n                          <th mat-header-cell *matHeaderCellDef>\\n                              \\n                               </th>\\n                          <td mat-cell *matCellDef=\\\"let element\\\">\\n                            \\n                              \\n                                 \\n                                     <mat-radio-group *ngFor=\\\"let lst of dataSource9\\\">    \\n                                         <mat-radio-button value=\\\"{{lst.id_categorie}}\\\" [checked]=\\\"checked(element.CategorieID,lst.id_categorie)\\\" style=\\\"width:20%\\\"  (change)=\\\"updateChkbxArray(element.CategorieID,lst.id_categorie,$event.checked,'ts')\\\" value=\\\"{{lst.id_categorie}}\\\"  >{{lst.categorie}}</mat-radio-button>\\n                                     </mat-radio-group>\\n                                     <mat-form-field *ngIf=\\\"element.TextCategorie!='APTE A LA PRATIQUE DU FOOTBALL DE HAUT NIVEAU'\\\" >\\n                                        <input  formControlName=\\\"AutreCtrl_{{element.CategorieID}}\\\"  matInput placeholder=\\\"précisez : \\\"  (change)=\\\"updateChkbxArray(element.CategorieID,element.CategorieID,'text',$event.target.value)\\\" >\\n                                        <mat-error>This field is mandatory.</mat-error>\\n                                    \\n                                   </mat-form-field>\\n                                      \\n                                  \\n                         \\n                             \\n                                 </td> \\n                          </ng-container>\\n                            \\n                        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns2\\\"></tr>\\n                        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns2;\\\"></tr>\\n                      </table>\\n                      <hr/>\\n                   \\n                      <img [src]=\\\"imageUrl\\\"  style=\\\"width:250px;height:200px\\\">\\n                      <input type=\\\"file\\\" #Image accept=\\\"image/*\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\n                    </mat-form-field>\\n                  \\n              \\n        \\n                  <div>\\n                    <button style=\\\"width:auto\\\"  mat-button matStepperPrevious>Précédent</button>\\n                    <button style=\\\"width:auto\\\" type=\\\"submit\\\" mat-button matStepperNext>Envoyer</button>\\n                  </div>\\n              \\n                </form>\\n              </mat-step> \\n  </mat-horizontal-stepper>\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators, FormArray, FormControl} from '@angular/forms';\nimport { MatTableDataSource, MatCheckbox } from '@angular/material';\nimport { shouldCallLifecycleInitHook } from '@angular/core/src/view';\nimport { DossierService } from 'src/app/shared/dossier.service';\nimport { Dossier } from 'src/app/shared/dossier.model';\nimport { Action } from 'src/app/shared/action.model';\nimport { Joueur } from 'src/app/shared/joueur.model';\nimport { Categorie } from 'src/app/shared/categorie.model';\nimport { JoueurService } from '../../shared/joueur.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TestBed } from '@angular/core/testing';\nimport { analyzeAndValidateNgModules } from '@angular/compiler';\nimport { concat } from 'rxjs/operators';\nimport { DataSource } from '@angular/cdk/table';\nimport { ClubService } from 'src/app/shared/club.service';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-dossier',\n  templateUrl: './dossier.component.html',\n  styleUrls: ['./dossier.component.css']\n})\n\nexport class DossierComponent implements OnInit {\n\n  displayedColumns:string[] = ['categorie','Non','oui4','4oui'];\n  displayedColumns2:string[] = ['categorie','champs'];\n  displayedColumns3:string[] = ['categorie','champs','champs2'];\n  dataSourceJoueur= new MatTableDataSource<Joueur>();\n  dataSourceDossier= new MatTableDataSource<Dossier>();\n  dataSourceAction= new MatTableDataSource<Action>();\n  list :Action[]; \n  firstFormGroup: FormGroup;\n  FormGroup: FormGroup;\n  \n  Formarray:FormArray;\n \n  dataSource = new MatTableDataSource<Categorie>();\n  dataSource1 :[];\n  dataSource2 :[];\n  dataSource3 = ELEMENT_DATA3;\n  dataSource4 = ELEMENT_DATA4;\n  dataSource5 :[];\n  dataSource6 = ELEMENT_DATA6;\n  dataSource7 :[];\n  dataSource8 :[];\n  dataSource9=ELEMENT_DATA9;\n  dataSource10=ELEMENT_DATA10;\n  dataSource11=ELEMENT_DATA11;\n  dataSource12=ELEMENT_DATA12;\n  dataSource13=ELEMENT_DATA13;\n  dataSource14=ELEMENT_DATA14;\n  dataSource15:[];\n  dataSource16:[];\n  dataSource17:[];\n  dataSource18:[];\n  dataSource19:[];\n  dataSource20=ELEMENT_DATA20;\n  dataSource21:[];\n  dataSource22=ELEMENT_DATA22;\n  dataSource23=ELEMENT_DATA23;\n  dataSource24=ELEMENT_DATA24;\n  dataSource25:[];\n  dataSource26:[];\n  dataSource27:[];\n  dataSource28=ELEMENT_DATA28;\n  dataSource29:[];\n  dataSource30=[];\n  dataSource31=ELEMENT_DATA31;\n  dataSource32=ELEMENT_DATA32;\n  dataSource33:[];\n  dataSource34:[];\n  dataSource35:[];\n  dataSource36=ELEMENT_DATA36;\n  dataSource37:[];\n  dataSource38:[];\n  dataSource39=ELEMENT_DATA39;\n  dataSource40:[];\n  dataSource41:[];\n  dataSource42=ELEMENT_DATA42;\n  dataSource43:[];\n  dataSource44=[];\n  dataSource45=ELEMENT_DATA45;\n  dataSource46:[];\n  dataSource47:[];\n  dataSource48=ELEMENT_DATA48;\n  dataSource49=ELEMENT_DATA49;\n  dataSource50=ELEMENT_DATA50;\n  dataSource51:[];\n  dataSource52:[];\n  dataSource53:[];\n  dataSource54=ELEMENT_DATA54;\n  dataSource55=ELEMENT_DATA55;\n  dataSource56=ELEMENT_DATA56;\n  dataSource57:[];\n  dataSource58=ELEMENT_DATA58;\n  dataSource59=ELEMENT_DATA59;\n  dataSource61=ELEMENT_DATA61;\n  dataSource62=ELEMENT_DATA62;\n  dataSource63=ELEMENT_DATA63;\n  dataSource64=ELEMENT_DATA64;\n  dataSource65=ELEMENT_DATA65;\n  dataSource66=ELEMENT_DATA66;\n  dataSource177=ELEMENT_DATA177;\n  dataSource60:[];\n  datas=tableCate;\n  datasources:[];\n  interests:any;\n  selected: any;\n  dataaction:any;\n  typesOfShoes: string[] = ['tête/visage', 'nuque', 'vertèbre thoracique', 'vertèbre lombaire','abdomen','doigts','épaule','bras','coude','poignet','bassin/sacrum','hanche','aine','cuisse','bassin/sacrum','basse jambe','tend. d’Achille','cheville','pied/orteil','hanche (droit)','aine (droit)','cuisse (droit)','genou (droit)','basse jambe (droit)','tend. d’Achille (droit)','cheville (droit)','pied/orteil (droit)','hanche (gauche)','aine (gauche)','cuisse (gauche)','genou (gauche)','basse jambe (gauche)','tend. d’Achille (gauche)','cheville (gauche)','pied/orteil (gauche)'];\n  typesOfShoes2: string[] = ['repos', 'physiothérapie', 'chirurgie'];\n  typesOfShoes3: string[] = ['Non', 'Père', 'Mère','Frére/soeur','Autre'];\n  typesOfShoes4: string[] = ['Non', 'Oui'];\n  secondFormGroup: FormGroup;\n  secondFormGroup2: FormGroup\n  secondFormGroup3: FormGroup;\n  secondFormGroup4: FormGroup;\n  secondFormGroup5: FormGroup;\n  secondFormGroup6: FormGroup;\n  formgroupDossier:FormGroup;\n  formgroupJoueur:FormGroup;\n  formCatTab:FormGroup;\n  isOptional = false;\n  varl:any;\nformdatajoueur=ejoueur;\n\n  constructor(private serviceClub : ClubService,private router : Router,private route : ActivatedRoute,private _formBuilder: FormBuilder,private service : DossierService,private servicejoueur : JoueurService) {}\n  onSubmit() {\n    \n    /*formData1.append('Image', this.fileToUpload, this.fileToUpload.name);\n    formData1.append()*/\n    this.formgroupDossier.patchValue({\nFileDossier:this.fileToUpload.name,\n    })\n    \n   this.service.postDossier_(this.formgroupDossier.value).then((obj) => {\n    const val= obj.DossierID;\n    this.service.uploadFile(obj.DossierID,this.fileToUpload);\n    elm_dt.forEach(obj=>{obj.DossierID=val,this.service.postDossier(obj)})\n        });\n   \n\n        this.router.navigate(['home/dossier-list']);\n \n  }\n\n  changeradio(i,ctrl){\nif(i==1){\n  let control = this.secondFormGroup.get(ctrl);\n  control.enable();\n}else{\n  let control = this.secondFormGroup.get(ctrl);\n  control.disable();\n}\n  }\n  updateChkbxArray(chk, isChecked,matcheck,text) {\n\n    \n    if(matcheck==false){\n      isChecked=true;\n      this.FormGroup.patchValue({\n        ActionID:null,\n        CategorieID:chk,\n       \n        ResAction:matcheck,\n       TextAction:text,\n       DossierID:null\n        // formControlName2: myValue2 (can be omitted)\n      });\n      const index : number = elm_dt.indexOf(this.FormGroup.value);\n      elm_dt.splice(index,1);\n      \n    \n\n    }else if(matcheck==true){\n      \n      this.FormGroup.patchValue({\n        ActionID:null,\n        CategorieID:chk,\n        CheckID:isChecked,\n        ResAction:matcheck,\n       TextAction:text,\n       DossierID:null\n       });\n       \n       elm_dt.push(this.FormGroup.value);\n    }else{\n     \n     \n       \n       elm_dt.forEach(function (elm) {\n        if(elm.CategorieID==chk){\n          if(text!='rad'){\n          if(elm.CheckID==isChecked){\n            if(matcheck!='text'){\n              console.log(elm);\n              const index : number = elm_dt.indexOf(elm);\n          elm_dt.splice(index,1)\n\n            }\n            }}else{\n              const index : number = elm_dt.indexOf(elm);\n              elm_dt.splice(index,1)\n\n            }\n        }\n      });\n  if(matcheck!=false){\n    console.log(isChecked);\n      this.FormGroup.patchValue({\n        ActionID:null,\n        CategorieID:chk,\n        CheckID:isChecked,\n        ResAction:matcheck,\n       TextAction:text,\n       DossierID:null\n      });\n    \n       elm_dt.push(this.FormGroup.value);\n       \n    }}\n    \n    console.log(elm_dt);\n  \n}\n\nchangejoueur(ctrl){\n  if(ejoueur.length!=0){\n ejoueur.splice(0,1)\n  }\n\n    let NomClub=this.serviceClub.getByID(ctrl.ClubID);\n    \n    this.formdatajoueur.push({\n     \"JoueurID\":ctrl.JoueurID,\n     \"NomJoueur\": ctrl.NomJoueur,\n     \"DatenJoueur\": ctrl.DatenJoueur,\n     \"PrenomJoueur\": ctrl.PrenomJoueur,\n     \"PosteJoueur\": ctrl.PosteJoueur,\n     \"LateralisationJoueur\":ctrl.LateralisationJoueur,\n     \"PhotoJoueur\":ctrl.PhotoJoueur,\n     \"NomClub\": NomClub,\n   });\n\n   this.formgroupDossier.patchValue({\n    DossierID:null,\n    JoueurID:ctrl.JoueurID,\n    ClubID:ctrl.ClubID,\n    MedecinID:localStorage.getItem('IdInt'),\n    DateDossier:Date.now(),\n  })\n}\nvalued(idcat,idcheck){ \n  console.log(\"test\");\n  if(elm_dt){\n    for(var i=0;i<elm_dt.length;i++){\n      if(elm_dt[i].CategorieID==idcat){\n        if(elm_dt[i].CheckID==idcheck){\n          console.log(elm_dt[i].TextAction);\n         return elm_dt[i].TextAction;  \n        }\n       \n        \n      } } }\n\n\n}\ncheckedradio(idcat,idcheck){ \n var res;\n \n if((idcheck=='Oui')||(idcheck=='anormal')||(idcheck=='Possible')){\nres=true;\n }\n  if(elm_dt){\n    for(var i=0;i<elm_dt.length;i++){\n      if(elm_dt[i].CategorieID==idcat){\n        if(elm_dt[i].ResAction==idcheck){\n         \n         res=true;  \n        }\n       \n        \n      } } }\n\n\nreturn res;\n}\nfileToUpload: File = null;\nimageUrl: string = \"/assets/img/default-image.png\";\nhandleFileInput(file: FileList) {\n  this.fileToUpload = file.item(0);\n\n  //Show image preview\n  var reader = new FileReader();\n  reader.onload = (event:any) => {\n    this.imageUrl = event.target.result;\n  }\n  reader.readAsDataURL(this.fileToUpload);\n}\nchecked(idcat,idcheck){ \n \n  if(elm_dt){\n    for(var i=0;i<elm_dt.length;i++){\n      if(elm_dt[i].CategorieID==idcat){\n        if(elm_dt[i].CheckID==idcheck){\n        \n         return true;  \n        }\n       \n        \n      } } }\n\n\n\n}\nMasquer(id){\n  var res=true;\n  for(var i=0;i<elm_dt.length;i++){\n    if(elm_dt[i].CategorieID==id){\n      if((elm_dt[i].ResAction=='Non')||(elm_dt[i].ResAction=='normal')||(elm_dt[i].ResAction=='Impossible'))\n    res=false;\n      \n    } } \n    return res;\n}\n  ngOnInit() {\n    console.log(localStorage.getItem('token'));\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl:'',\n    AnneeCtrl:'',\n    PoidsCtrl:'',\n    AutreCtrl:'',\n    TailleCtrl:'',\n    });\n    \nfor(let i=200;i<501;i++){\n    let parm=\"AutreCtrl_\"+i;\n     \n      this.secondFormGroup.addControl(parm,new FormControl(elm_dt));\n}\n\n    for(let i=1;i<34;i++){\n    \n   \n    this.service.getListC(i).then((data: Categorie) => {\n\n    this.Datasource(i,data);\n    \n   \n    })\n      }\n    \n   /* All_tabs.push(DataSource);\n    for(let i=1;i<61;i++){\n\n      All_tabs.push(DataSource&&i);\n    }\n    All_tabs.forEach(ob=>{\n    this.secondFormGroup.addControl(\"AutreCtrl_\"+ob.id_categorie,new FormControl(elm_dt));\n\n    })\n    this.firstFormGroup.addControl(\"AutreCtrl_12\",new FormControl(elm_dt));*/\n   // this.firstFormGroup.controls['AutreCtrl_12'].setValue(\"123\");\n    this.formgroupDossier= this._formBuilder.group({\n      DossierID:null,\n      JoueurID:null,\n      ClubID:null,\n      MedecinID:1,\n      DateDossier:'',\n      FileDossier:''\n    });\n    this.serviceClub.refreshList();\n    this.formgroupJoueur= this._formBuilder.group({\n      JoueurID :null,\n      NomJoueur :'',\n     PrenomJoueur :'',\n      DatenJoueur :'',\n     EmailJoueur :'',\n            GsmJoueur :'',\n    PosteJoueur:'',\n     LateralisationJoueur:'',\n     ClubID :'', });\n    const iddos=this.route.snapshot.paramMap.get('id');\n    if(iddos!=null){\n      this.secondFormGroup.disable();\n      \n      this.service.getList(iddos).then((data: any) => {\n\n        this.servicejoueur.getList(data.JoueurID).then((data: any) => {\n          \n                let NomClub=this.serviceClub.getByID(data.ClubID);\n                \n        \n               this.formdatajoueur.push({\n                \"JoueurID\":data.JoueurID,\n                \"NomJoueur\": data.NomJoueur,\n                \"PrenomJoueur\": data.PrenomJoueur,\n                \"DatenJoueur\": data.DatenJoueur,\n                \"PosteJoueur\": data.PosteJoueur,\n                \"LateralisationJoueur\":data.LateralisationJoueur,\n                \"PhotoJoueur\":data.PhotoJoueur,\n                \"NomClub\": NomClub,\n              });\n        })\n          \n        \n          \n                });\n                this.service.getListA(iddos).then((data: any) => {\n\n                  data.forEach(el=>{     \n                    elm_dt.push(el);\n                    if(el.ResAction=='text'){\n                      \n                      let pram='AutreCtrl_'+el.CategorieID;\n                     \n                       this.secondFormGroup.controls[pram].setValue(el.TextAction);\n                    }\n                   \n                    }) })\n                    \n   /* this.service.getListA(iddos).then((data: Action) => {\n      \n      this.dataaction=data;\n      console.log(this.dataaction);\n      if(data.ResAction=='text'){\n       \n      this.firstFormGroup.controls['AutreCtrl_'+data.CategorieID].setValue(data.TextAction);\n }\n   })*/\n \n\n\n  \n\n      }\n    this.service.refreshList();\n    this.servicejoueur.refreshList().then((data: any) => {\n      this.dataSourceJoueur.data=data;\n    \n          });\n    \n\n    this.formgroupDossier= this._formBuilder.group({\n      DossierID:null,\n      JoueurID:null,\n      ClubID:null,\n      MedecinID:1,\n      DateDossier:'',\n      FileDossier:''\n    \n    });\n  \n    this.firstFormGroup = this._formBuilder.group({\n      TailleCtrl:'',\n      firstCtrl:'',\n      JoueurID:'',\n      AutreCtrl_12:'',\n    });\n  \n    this.FormGroup = this._formBuilder.group({\n      ActionID:null,\n      CategorieID:null,\n      CheckID:null,\n      ResAction:'',\n     TextAction:'',\n     DossierID:null,\n    \n      \n    });\n  \n  \n  \n    \n    /*if(iddos!=null){\n      this.secondFormGroup.disable();\n      this.secondFormGroup2.disable();\n      this.secondFormGroup3.disable();\n      this.secondFormGroup4.disable();\n      this.secondFormGroup5.disable();\n      this.secondFormGroup6.disable();\n      this.firstFormGroup.disable();\n      }*/\n      \n  }\n  createItem(): FormGroup {\n    return this._formBuilder.group({\n      id_cat:new FormControl(''),\n      id_check:new FormControl(''),\n     \n    });\n  }\n  Datasource(i,data){\n    if(i==1){this.dataSource=data}\n    else if(i==2){this.dataSource1=data}\n    else if(i==3){this.dataSource2=data;}\n    else if(i==4){this.dataSource15=data}\n    else if(i==5){this.dataSource16=data}\n    else if(i==6){this.dataSource5=data}\n    else if(i==7){this.dataSource17=data}\n    else if(i==8){this.dataSource7=data}\n    else if(i==9){this.dataSource8=data}\n    else if(i==10){this.dataSource18=data}\n    else if(i==11){this.dataSource19=data}\n    else if(i==12){this.dataSource21=data}\n    else if(i==13){this.dataSource25=data}\n    else if(i==14){this.dataSource26=data}\n    else if(i==15){this.dataSource27=data}\n    else if(i==16){this.dataSource29=data}\n    else if(i==17){this.dataSource30=data}\n    else if(i==18){this.dataSource34=data}\n    else if(i==19){this.dataSource33=data}\n    else if(i==20){this.dataSource35=data}\n    else if(i==21){this.dataSource37=data}\n    else if(i==22){this.dataSource38=data}\n    else if(i==23){this.dataSource40=data}\n    else if(i==24){this.dataSource41=data}\n    else if(i==25){this.dataSource43=data}\n    else if(i==26){this.dataSource44=data}\n    else if(i==27){this.dataSource46=data}\n    else if(i==28){this.dataSource47=data}\n    else if(i==29){this.dataSource51=data}\n    else if(i==30){this.dataSource52=data}\n    else if(i==31){this.dataSource53=data}\n    else if(i==32){this.dataSource57=data}\n    else if(i==33){this.dataSource60=data}\n  }\n}\nexport interface checklist {\n\n  id_cat: number;\n  id_check:number;\n  bool:boolean;\n  \n}\nexport interface PeriodicElement {\n\n  categorie: string;\n  id_categorie:number;\n \n\n}\nexport interface PeriodicElement1 {\n\n  categorie: string;\n  id_categorie:number;\n  action:boolean;\n  cat:number;\n\n}\nexport interface matcheck {\n\n  categorie: string;\n  \n  id_categorie:number;\n \n  \n}\nexport interface matcheck2 {\n\n  categorie: string;\n  unite:string;\n  id_categorie:number;\n \n  \n}\nexport interface table {\n  id: number;\n  idtab:number;\n  idcat:number;\n  idcheck:number;  \n}\nconst ejoueur:any[]=[]; \nconst elm_dt:Action[]=[]; \nconst elm_tabs:any[]=[]; \nconst All_tabs:any[]=[]; \nconst edossier:Dossier[]=[];\n\nconst Tabs: PeriodicElement[] = [\n  { id_categorie: 1, categorie: 'Géneral'},\n  {id_categorie: 2, categorie: 'Cœur et poumon'},\n];\nconst tableCate: table[] = [\n  {idcat:1,idcheck:44,idtab:1,id:1},\n  {idcat:1,idcheck:45,idtab:1,id:2},\n  {idcat:1,idcheck:46,idtab:1,id:3},\n  {idcat:2,idcheck:44,idtab:1,id:4},\n  {idcat:2,idcheck:45,idtab:1,id:5},\n  {idcat:2,idcheck:46,idtab:1,id:6},\n  {idcat:3,idcheck:44,idtab:1,id:7},\n  {idcat:3,idcheck:45,idtab:1,id:8},\n  {idcat:3,idcheck:46,idtab:1,id:9},\n  {idcat:4,idcheck:44,idtab:1,id:10},\n  {idcat:4,idcheck:45,idtab:1,id:11},\n  {idcat:4,idcheck:46,idtab:1,id:12},\n  {idcat:5,idcheck:44,idtab:1,id:13},\n  {idcat:5,idcheck:45,idtab:1,id:14},\n  {idcat:5,idcheck:46,idtab:1,id:15},\n  {idcat:6,idcheck:44,idtab:1,id:16},\n  {idcat:6,idcheck:45,idtab:1,id:17},\n  {idcat:6,idcheck:46,idtab:1,id:18},\n  {idcat:7,idcheck:44,idtab:1,id:19},\n  {idcat:7,idcheck:45,idtab:1,id:20},\n  {idcat:7,idcheck:46,idtab:1,id:21},\n  {idcat:8,idcheck:47,idtab:2,id:22},\n  {idcat:8,idcheck:48,idtab:2,id:23},\n  {idcat:8,idcheck:49,idtab:2,id:24},\n  {idcat:9,idcheck:47,idtab:2,id:25},\n  {idcat:9,idcheck:48,idtab:2,id:26},\n  {idcat:9,idcheck:49,idtab:2,id:27},\n  {idcat:10,idcheck:47,idtab:2,id:28},\n  {idcat:10,idcheck:48,idtab:2,id:29},\n  {idcat:10,idcheck:49,idtab:2,id:30},\n  {idcat:11,idcheck:47,idtab:2,id:31},\n  {idcat:11,idcheck:48,idtab:2,id:32},\n  {idcat:11,idcheck:49,idtab:2,id:33},\n  {idcat:12,idcheck:47,idtab:2,id:34},\n  {idcat:12,idcheck:48,idtab:2,id:35},\n  {idcat:12,idcheck:49,idtab:2,id:36},\n  {idcat:13,idcheck:47,idtab:2,id:37},\n  {idcat:13,idcheck:48,idtab:2,id:38},\n  {idcat:13,idcheck:49,idtab:2,id:39},\n  {idcat:14,idcheck:47,idtab:2,id:40},\n  {idcat:14,idcheck:48,idtab:2,id:41},\n  {idcat:14,idcheck:49,idtab:2,id:42},\n  {idcat:15,idcheck:47,idtab:2,id:43},\n  {idcat:15,idcheck:48,idtab:2,id:44},\n  {idcat:15,idcheck:49,idtab:2,id:45},\n  {idcat:16,idcheck:47,idtab:2,id:46},\n  {idcat:16,idcheck:48,idtab:2,id:47},\n  {idcat:16,idcheck:49,idtab:2,id:48},\n  {idcat:17,idcheck:47,idtab:2,id:49},\n  {idcat:17,idcheck:48,idtab:2,id:50},\n  {idcat:17,idcheck:49,idtab:2,id:51},\n  \n];\nconst ELEMENT_DATA: PeriodicElement[] = [\n  { id_categorie: 1, categorie: 'Symptômes de la grippe'},\n  {id_categorie: 2, categorie: 'Infections (surtout virales)'},\n  {id_categorie: 3, categorie: 'Fièvre rhumatismale'},\n  {id_categorie: 4, categorie: 'Coups de chaleur'},\n  {id_categorie: 5,  categorie: 'Commotion'},\n  {id_categorie: 6, categorie: 'Allergie nourriture/insectes'},\n  {id_categorie: 7,  categorie: 'Allergie médicaments'}\n \n];\nconst ELEMENT_DATA1: PeriodicElement[] = [\n  { id_categorie: 8, categorie: 'Douleur ou oppression thoracique'},\n  {id_categorie: 9, categorie: 'Souffle court', },\n  {id_categorie: 10, categorie: 'Asthme'},\n  {id_categorie: 11, categorie: 'Toux'},\n  {id_categorie: 12,  categorie: 'Bronchite'},\n  {id_categorie: 13, categorie: 'Palpitations'},\n  {id_categorie: 14,  categorie: 'Arythmie cardiaque'},\n  {id_categorie: 15, categorie: 'Autres problèmes cardiaques'},\n  {id_categorie: 16,  categorie: 'Vertiges'},\n  {id_categorie: 17,  categorie: 'Syncopes'}\n \n];\nconst ELEMENT_DATA2: PeriodicElement[] = [\n  { id_categorie: 18, categorie: 'Hypertension'},\n  {id_categorie: 19, categorie: 'Souffle au cœur', },\n  {id_categorie: 20, categorie: 'Profil lipidique anormal'},\n  {id_categorie: 21, categorie: 'Crises, épilepsie'},\n  {id_categorie: 22,  categorie: 'Conseillé d’arrêter le sport'},\n  {id_categorie: 23, categorie: 'Fatigué plus vite que coéquipiers'},\n  {id_categorie: 24,  categorie: 'Diarrhées '}\n \n];\nconst ELEMENT_DATA3: PeriodicElement[] = [\n  { id_categorie: 25, categorie: 'Adducteurs'},\n  {id_categorie: 26, categorie: 'Quadriceps', },\n  {id_categorie: 27, categorie: 'Ischio-jambiers'},\n  {id_categorie: 28, categorie: 'Ligaments du genou'},\n  {id_categorie: 29,  categorie: 'Ligaments de la cheville'},\n  {id_categorie: 30, categorie: 'autre'},\n  /*{id_categorie: 7,  categorie: 'Pour « autre », merci de fournir le diagnostic '}*/\n \n];\nconst ELEMENT_DATA4: PeriodicElement[] = [\n  { id_categorie: 31, categorie: 'Hanche'},\n  {id_categorie: 32, categorie: 'Aine (pubalgie)', },\n  {id_categorie: 33, categorie: 'Ligaments du genou'},\n  {id_categorie: 34, categorie: 'Ménisque ou cartilage du genou'},\n  {id_categorie: 35,  categorie: 'Tendon Achille'},\n  {id_categorie: 36, categorie: 'cheville'},\n  {id_categorie: 37,  categorie: 'autre'}\n  /*{id_categorie: 7,  categorie: 'Pour « autre », merci de fournir le diagnostic '}*/\n \n];\n\nconst ELEMENT_DATA5: PeriodicElement[] = [\n  { id_categorie: 38, categorie: 'Gènes ou douleurs récurrentes : '},\n  \n  /*{id_categorie: 7,  categorie: 'Pour « autre », merci de fournir le diagnostic '}*/\n \n];\nconst ELEMENT_DATA15: PeriodicElement[] = [\n  { id_categorie: 50, categorie: 'Blessures graves : '},\n  \n  /*{id_categorie: 7,  categorie: 'Pour « autre », merci de fournir le diagnostic '}*/\n \n];\nconst ELEMENT_DATA16: PeriodicElement[] = [\n  { id_categorie: 1151, categorie: 'Opérations sur l’appareil locomoteur : '},\n  \n  /*{id_categorie: 7,  categorie: 'Pour « autre », merci de fournir le diagnostic '}*/\n \n];\nconst ELEMENT_DATA17: PeriodicElement[] = [\n  { id_categorie: 5441, categorie: 'Diagnostic et traitement :'},\n  \n  /*{id_categorie: 7,  categorie: 'Pour « autre », merci de fournir le diagnostic '}*/\n \n];\nconst ELEMENT_DATA177: PeriodicElement[] = [\n  { id_categorie: 6441, categorie: 'Repos'},\n  { id_categorie: 6442, categorie: 'Physiothérapie'},\n  { id_categorie: 6443, categorie: 'Chirurgie'},\n  /*{id_categorie: 7,  categorie: 'Pour « autre », merci de fournir le diagnostic '}*/\n \n];\nconst ELEMENT_DATA6: matcheck[] = [\n  { id_categorie: 349, categorie: 'pubalgie'},\n  { id_categorie: 440, categorie: 'lésion de l’ischio-jambier'},\n  { id_categorie: 441, categorie: 'lésion du quadriceps'},\n  { id_categorie: 442, categorie: 'entorse du genou'},\n  { id_categorie: 443, categorie: 'lésion du ménisque'},\n  { id_categorie: 444, categorie: 'tendinite de la cheville'},\n  { id_categorie: 445, categorie: 'entorse de la cheville '},\n  { id_categorie: 446, categorie: 'commotion'},\n  { id_categorie: 447, categorie: 'douleur lombaire'},\n  { id_categorie: 448, categorie: 'Autre'},\n  \n  /*{id_categorie: 7,  categorie: 'Pour « autre », merci de fournir le diagnostic '}*/\n \n];\nconst ELEMENT_DATA7: matcheck[] = [\n  { id_categorie: 418, categorie: 'Mort subite'},\n  { id_categorie: 429, categorie: 'Mort subite (infantile)'},\n  { id_categorie: 530, categorie: 'Maladie coronarienne'},\n  { id_categorie: 541, categorie: 'Cardiomyopathie'},\n  { id_categorie: 552, categorie: 'Hypertension'},\n  { id_categorie: 563, categorie: 'Syncope à répétition'},\n  { id_categorie: 574, categorie: 'Arythmie cardiaque'},\n  { id_categorie: 585, categorie: 'Transplantation cardiaque'},\n  { id_categorie: 596, categorie: 'Chirurgie cardiaque'},\n  { id_categorie: 517, categorie: 'Pacemaker/Défibrillateur'},\n  { id_categorie: 528, categorie: 'Syndrome de Marfan'},\n  { id_categorie: 539, categorie: 'Noyade inexpliquée'},\n  { id_categorie: 640, categorie: 'Accident de voiture inexpliqué'},\n  { id_categorie: 651, categorie: 'AVC'},\n  { id_categorie: 662, categorie: 'Diabète'},\n  { id_categorie: 673, categorie: 'Cancer'},\n  { id_categorie: 684, categorie: 'autre'},\n  \n  /*{id_categorie: 7,  categorie: 'Pour « autre », merci de fournir le diagnostic '}*/\n \n];\nconst ELEMENT_DATA8: matcheck[] = [\n  { id_categorie: 625, categorie: 'Anti-inflammatoires non stéroïdiens'},\n  { id_categorie: 626, categorie: 'Médicaments contre l’asthme'},\n  { id_categorie: 627, categorie: 'Médicament contre l’hypertension'},\n  { id_categorie: 628, categorie: 'Antidiabétique'},\n  { id_categorie: 629, categorie: 'Hypolipidémiant'},\n  { id_categorie: 720, categorie: 'Psychotrope'},\n  { id_categorie: 721, categorie: 'autre'},\n \n  \n  /*{id_categorie: 7,  categorie: 'Pour « autre », merci de fournir le diagnostic '}*/\n \n];\n\n  const ELEMENT_DATA10 : matcheck[]=[\n    { id_categorie: 1222, categorie:'tête/visage'}, { id_categorie: 2222, categorie:'nuque'},{ id_categorie: 3222, categorie:'vertèbre thoracique'},{ id_categorie: 4222, categorie:'vertèbre lombaire'},{ id_categorie: 5222, categorie:'abdomen'},{ id_categorie: 6222, categorie:'doigts'},{ id_categorie: 7222, categorie:'épaule'},{ id_categorie: 8222, categorie:'bras'},{ id_categorie: 9222, categorie:'coude'},{ id_categorie: 91222, categorie:'poignet'},{ id_categorie: 92122, categorie:'bassin/sacrum'},{ id_categorie: 10222, categorie:'hanche'},{ id_categorie: 11222, categorie:'aine'},{ id_categorie: 12222, categorie:'cuisse'},{ id_categorie: 13222, categorie:'bassin/sacrum'}\n    ,{ id_categorie: 14222, categorie:'basse jambe'},{ id_categorie: 15222, categorie:'tend. d’Achille'},{ id_categorie: 16222, categorie:'cheville'},{ id_categorie: 17222, categorie:'pied/orteil'},{ id_categorie: 18222, categorie:'hanche (droit)'},{ id_categorie: 19222, categorie:'aine (droit)'},{ id_categorie: 20222, categorie:'cuisse (droit)'},{ id_categorie: 21222, categorie:'genou (droit)'},{ id_categorie: 22222, categorie:'basse jambe (droit)'},{ id_categorie: 23222, categorie:'tend. d’Achille (droit)'},{ id_categorie: 24222, categorie:'cheville (droit)'},{ id_categorie: 25222, categorie:'pied/orteil (droit)'},{ id_categorie: 26222, categorie:'hanche (gauche)'},{ id_categorie: 27222, categorie:'aine (gauche)'}\n    ,{ id_categorie: 28222, categorie:'cuisse (gauche)'},{ id_categorie: 29222, categorie:'genou (gauche)'},{ id_categorie: 30222, categorie:'basse jambe (gauche)'},{ id_categorie: 31222, categorie:'tend. d’Achille (gauche)'},{ id_categorie: 32222, categorie:'cheville (gauche)'},{ id_categorie: 33222, categorie:'pied/orteil (gauche)'}\n];\nconst ELEMENT_DATA9 : matcheck[]=[\n  { id_categorie: 34, categorie: 'Non'},\n  { id_categorie: 35, categorie: 'Oui'}\n\n];\n\nconst ELEMENT_DATA11 : matcheck[]=[\n  { id_categorie: 36, categorie: 'repos'},\n  { id_categorie: 37, categorie: 'physiothérapie'},\n  { id_categorie: 38, categorie: 'chirurgie'}\n]\nconst ELEMENT_DATA12 : matcheck[]=[\n  { id_categorie: 39, categorie: 'Non'},\n  { id_categorie: 40, categorie: 'Père'},\n  { id_categorie: 41, categorie: 'Mère'},\n  { id_categorie: 42, categorie: 'Frére/soeur'},\n  { id_categorie: 43, categorie: 'Autre'}\n]\nconst ELEMENT_DATA13 : matcheck[]=[\n  { id_categorie: 44, categorie: 'Non'},\n  { id_categorie: 45, categorie: 'oui, dans les 4 dernières semaines'},\n  { id_categorie: 46, categorie: 'oui, il y a plus de 4 semaines'}]\n  const ELEMENT_DATA14 : matcheck[]=[\n    { id_categorie: 47, categorie: 'Non'},\n    { id_categorie: 48, categorie: 'Dans les 4 dernières semaines au repos… pendant'},\n    { id_categorie: 49, categorie: 'Dans les 4 dernières semaines après l’effort'}\n]\nconst ELEMENT_DATA18 : matcheck[]=[\n  { id_categorie: 59, categorie: 'Taille'},\n  { id_categorie: 58, categorie: 'Poids'},\n  { id_categorie: 53, categorie: 'Glande thyroïde'},\n  { id_categorie: 54, categorie: 'Nœud lymphatique/rate'},\n  { id_categorie: 55, categorie: 'Poumons Percussion'},\n  { id_categorie: 56, categorie: 'Respiration'},\n  { id_categorie: 57, categorie: 'Abdomen Palpation'},\n]\nconst ELEMENT_DATA19 : matcheck[]=[\n  { id_categorie: 59, categorie: 'Symptômes du syndrome de Marfan'},\n\n]\nconst ELEMENT_DATA20 : matcheck[]=[\n  { id_categorie: 60, categorie: 'déformation du thorax'},\n  { id_categorie: 61, categorie: 'long bras et longues jambes'},\n  { id_categorie: 62, categorie: 'pieds plats'},\n  { id_categorie: 63, categorie: 'scoliose'},\n  { id_categorie: 64, categorie: 'dislocation du cristallin'},\n  { id_categorie: 65, categorie: 'autre'},\n  \n]\nconst ELEMENT_DATA21 : matcheck[]=[\n  { id_categorie: 66, categorie: 'Rythme'},\n  { id_categorie: 67, categorie: 'Son'},\n  { id_categorie: 68, categorie: 'Souffle'},\n  { id_categorie: 69, categorie: 'Œdème périphérique'},\n  { id_categorie: 70, categorie: 'Veine jugulaire (position à 45°)'},\n  { id_categorie: 71, categorie: 'Reflux hépato-jugulaire'},\n  \n]\nconst ELEMENT_DATA22 : matcheck[]=[\n  { id_categorie: 72, categorie: 'normal'},\n  { id_categorie: 73, categorie: 'arythmique'}\n]\nconst ELEMENT_DATA23 : matcheck[]=[\n  { id_categorie: 74, categorie: 'normal'},\n  { id_categorie: 75, categorie: 'anormal'}\n]\nconst ELEMENT_DATA24 : matcheck[]=[\n  { id_categorie: 76, categorie: 'palpable'},\n  { id_categorie: 77, categorie: 'non palpable'}\n]\nconst ELEMENT_DATA25 : matcheck[]=[\n  { id_categorie: 78, categorie: 'Pouls périphérique'},\n  { id_categorie: 79, categorie: 'Bruits vasculaires'},\n  { id_categorie: 80, categorie: 'Varices'}\n]\nconst ELEMENT_DATA26: matcheck[]=[\n  { id_categorie: 81, categorie: 'Pouls après 5 minutes de repos'},\n\n]\nconst ELEMENT_DATA27: matcheck[]=[\n  { id_categorie: 82, categorie: 'Bras droit'},\n  { id_categorie: 83, categorie: 'Bras gauche'},\n  { id_categorie: 84, categorie: 'Cheville'}\n]\nconst ELEMENT_DATA28: matcheck[]=[\n  { id_categorie: 83, categorie: 'battements ventriculaires prématurés'},\n  { id_categorie: 84, categorie: 'battements supraventriculaires prématurés'},\n  { id_categorie: 85, categorie: 'tachycardie supraventriculaire'},\n  { id_categorie: 86, categorie: 'arythmie ventriculaire'},\n  { id_categorie: 87, categorie: 'flutter auriculaire/fibrillation'},\n  { id_categorie: 88, categorie: 'grande amplitude (onde delta)'},\n  { id_categorie: 89, categorie: 'bloc atrio-ventriculaire'}\n]\nconst ELEMENT_DATA29: matcheck[]=[\n  { id_categorie: 90, categorie: 'Rythme/conduction'},\n \n]\nconst ELEMENT_DATA30: matcheck[]=[\n  { id_categorie: 91, categorie: 'Indices temporels'},\n \n]\nconst ELEMENT_DATA34: matcheck[]=[\n  { id_categorie: 91, categorie: 'Dilatation auriculaire\t'},\n \n]\nconst ELEMENT_DATA31: matcheck[]=[\n  { id_categorie: 93, categorie: 'PQ_________ms'},\n  { id_categorie: 94, categorie: 'QRS________ms'},\n  { id_categorie: 95, categorie: 'QTc________ms'},\n \n]\nconst ELEMENT_DATA32: matcheck[]=[\n  { id_categorie: 96, categorie: 'gauche (partie négative de l’onde P dans V1≥0,1mV en amplitude et ≥0,04 s en durée)'},\n  { id_categorie: 98, categorie: 'droite (pic d’onde P dans électrodes II et III ou V1≥0,25mV en amplitude)'},\n]\nconst ELEMENT_DATA33: matcheck[]=[\n  { id_categorie: 99, categorie: 'Axe'},\n  { id_categorie: 100, categorie: 'Voltage'},\n  { id_categorie: 101, categorie: 'Hypertrophie du ventricule gauche'},\n  { id_categorie: 991, categorie: 'Ondes Q'},\n  { id_categorie: 1001, categorie: 'Bloc de branche'},\n  { id_categorie: 1011, categorie: 'Onde R'},\n \n \n]\nconst ELEMENT_DATA35: matcheck[]=[\n  { id_categorie: 102, categorie: 'Baisse des ondes ST'},\n  { id_categorie: 103, categorie: 'Aplatissement des ondes T'},\n  { id_categorie: 104, categorie: 'Inversion des ondes T'},\n  { id_categorie: 105, categorie: 'Repolarisation  prématurée'},\n]\nconst ELEMENT_DATA36: matcheck[]=[\n  { id_categorie: 106, categorie: 'I'},\n  { id_categorie: 107, categorie: 'II'},\n  { id_categorie: 108, categorie: 'III'},\n  { id_categorie: 109, categorie: 'aVR'},\n  { id_categorie: 110, categorie: 'aVL'},\n  { id_categorie: 111, categorie: 'AVF'},\n  { id_categorie: 112, categorie: 'v1'},\n  { id_categorie: 113, categorie: 'v2'},\n  { id_categorie: 114, categorie: 'v3'},\n  { id_categorie: 115, categorie: 'v4'},\n  { id_categorie: 116, categorie: 'v5'},\n  { id_categorie: 117, categorie: 'v6'},\n\n]\n\nconst ELEMENT_DATA37: matcheck[]=[\n  { id_categorie: 130, categorie: 'Surface corporelle (BSA) : m2'},\n\n\n]\nconst ELEMENT_DATA38: matcheck2[]=[\n  { id_categorie: 118,unite:'______ cm/m²', categorie: 'Diamètre télédiastolique <br/>  (valeurs normales : ♀<3,2 cm/m², ♂<3,1cm/m²)'},\n  { id_categorie: 119,unite:'______ cm/m²', categorie: 'Diamètre télésystolique cm/m2'},\n  { id_categorie: 120,unite:'______ cm/m²', categorie: 'Épaisseur du septum interventriculaire télédiastolique <br/> (valeurs normales : ♀<0,9 cm/m², ♂<1,0cm/m²)'},\n  { id_categorie: 121,unite:'______ cm/m²', categorie: 'Épaisseur diastolique de la paroi postérieure  (valeurs normales : ♀<0,9 cm/m², ♂<1,0cm/m²)'},\n  { id_categorie: 122,unite:'______ ml/m²', categorie: 'Volume diastolique du ventricule gauche (valeurs normales ♀ et ♂ <75 ml/m²)'},\n  { id_categorie: 123,unite:'______ ml/m²', categorie: 'Volume systolique du ventricule gauche (valeurs normales : ♀ et ♂<30 ml/m²)'},\n  { id_categorie: 124,unite:'______ g/m²', categorie: 'MMI du ventricule gauche (masse/BSA ; méthode linéaire) (valeurs normales : ♀<95 g/m²), ♂<115 g/m²)'},\n  { id_categorie: 125,unite:'______ mm', categorie: 'Fonction systolique Mouvement antérieur de la valve mitrale  mm'},\n  { id_categorie: 126,unite:'______ %', categorie: 'Fraction de raccourcissement (endocardique) (valeurs normales : ♀>27 %, ♂> 25 %)'},\n  { id_categorie: 127,unite:'______ %', categorie: 'Fraction d’éjection (méthode de Simpson ou de la longueur de l’aire) (valeur normale : ≥ 55%)'},\n  { id_categorie: 128,unite:'______ cm/m²', categorie: 'Mouvement régional de la paroi'},\n  { id_categorie: 129,unite:'______ cm/s', categorie: 'Fonction diastolique'},\n\n]\nconst ELEMENT_DATA39: matcheck2[]=[\n  { id_categorie: 131,unite:'______ cm/s', categorie: 'Onde E'},\n  { id_categorie: 132,unite:'______ cm/s', categorie: 'Onde A'},\n  { id_categorie: 133,unite:'______', categorie: '(rapport E/A)'},\n  { id_categorie: 134,unite:'______ ms', categorie: 'Durée de décélération'},\n  { id_categorie: 135,unite:'______ cm/s', categorie: 'E’ (Doppler tissulaire)\tseptal'},\n  { id_categorie: 136,unite:'______ cm/s', categorie: 'paroi latérale'},\n  { id_categorie: 137,unite:'______ ', categorie: 'E/E’'},\n \n\n]\nconst ELEMENT_DATA40: matcheck2[]=[\n  { id_categorie: 131,unite:'______cm', categorie: 'Diamètre (mode M, grand axe parasternal)'},\n  { id_categorie: 132,unite:'______ cm', categorie: 'Aire (vue des quatre chambres) (valeurs normales : <20 cm²)'},\n  { id_categorie: 133,unite:'______ ml/m2', categorie: 'Volume (méthode de Simpson ou de la longueur de l’aire) (valeurs normales : ♀ et ♂ <28ml/m²)'},\n\n]\nconst ELEMENT_DATA41: matcheck2[]=[\n  { id_categorie: 131,unite:'______ cm', categorie: 'Aire (vue des quatre chambres) (valeurs normales : <20 cm²)'},\n  { id_categorie: 132,unite:'______ cm', categorie: 'Diamètre de la veine cave inférieure'},\n  { id_categorie: 12333,unite:'______ cm/m²', categorie: 'Variabilité respiratoire du diamètre de la veine cave inférieure'},\n\n \n\n]\nconst ELEMENT_DATA42: matcheck[]=[\n  { id_categorie: 1531, categorie: '>50 %'},\n  { id_categorie: 1352, categorie: '<50 %'},\n\n \n\n]\n\nconst ELEMENT_DATA43: matcheck2[]=[\n  { id_categorie: 131,unite:'______ cm (valeurs normales : <3,3 cm)', categorie: 'Diamètre (vue des quatre chambres)'},\n  { id_categorie: 132,unite:'______ cm (valeurs normales : <7,9 cm)', categorie: 'Longueur (vue des quatre chambres)'},\n  { id_categorie: 133,unite:'______ % (valeurs normales : > 32%)', categorie: 'Variation de surface'},\n  { id_categorie: 131,unite:'______ mm', categorie: 'Mouvement tricuspide antérieur'},\n  { id_categorie: 132,unite:'______ mmHg', categorie: 'Rapport systolique ventricule droit/oreillette droite'},\n  { id_categorie: 133,unite:'______ mmHg', categorie: 'Mouvement régional de la paroi'},\n  { id_categorie: 131,unite:'______ mmHg', categorie: 'Anévrisme local'},\n  { id_categorie: 132,unite:'______ mmHg', categorie: 'Hypertrophie'},\n  { id_categorie: 133,unite:'______ cm (valeurs normales : <0,5 cm)', categorie: 'Épaisseur de la paroi libre'},\n \n\n]\nconst ELEMENT_DATA44: matcheck[]=[\n  { id_categorie: 134, categorie: 'Valvule aortique'},\n  { id_categorie: 135, categorie: 'Visualisation de l’ostium coronarien'},\n  { id_categorie: 136, categorie: 'Valvule mitrale'},\n  { id_categorie: 137, categorie: 'Valvule tricuspide'},\n  { id_categorie: 138, categorie: 'Valvule pulmonaire'},\n  { id_categorie: 139, categorie: 'Diamètre de la base de l’aorte'},\n  { id_categorie: 140, categorie: 'Aorte ascendante'},\n  { id_categorie: 141, categorie: 'Résumé analyse de l’échocardiographie'},\n]\nconst ELEMENT_DATA45: matcheck[]=[\n  { id_categorie: 142, categorie: 'Impossible'},\n  { id_categorie: 143, categorie: 'Possible'},\n \n]\nconst ELEMENT_DATA46: matcheck2[]=[\n  { id_categorie: 144,unite:'______ mg/dl', categorie: 'Hémoglobine (mg/dl)'},\n  { id_categorie: 145,unite:'______ %', categorie: 'Hématocrite (%)'},\n  { id_categorie: 146,unite:'______ mg/dl', categorie: 'Érythrocytes (mg/dl)'},\n  { id_categorie: 147,unite:'______ mg/dl', categorie: 'Thrombocytes (mg/dl)'},\n  { id_categorie: 148,unite:'______ mg/dl', categorie: 'Leucocytes (mg/dl)'},\n  { id_categorie: 149,unite:'_____ mmol/l', categorie: 'Sodium (mmol/l)'},\n  { id_categorie: 150,unite:'_____ mmol/l', categorie: 'Potassium (mmol/l)'},\n  { id_categorie: 151,unite:'_____ µmol/l', categorie: 'Créatinine (µmol/l)'},\n  { id_categorie: 152,unite:'_____ mmol/l', categorie: 'Cholestérol (total) (mmol/l)'},\n  { id_categorie: 153,unite:'_____ mmol/l', categorie: 'Cholestérol LDL (mmol/l)'},\n  { id_categorie: 154,unite:'_____ mmol/l', categorie: 'Cholestérol HDL (mmol/l)'},\n  { id_categorie: 155,unite:'_____ mmol/l', categorie: 'Triglycérides (mmol/l)'},\n  { id_categorie: 156,unite:'_____ mmol/l', categorie: 'Glucose (mmol/l)'},\n  { id_categorie: 157,unite:'_____ mg/l', categorie: 'Protéine C-réactive (mg/l)'},\n]\nconst ELEMENT_DATA47: matcheck[]=[\n  { id_categorie: 158, categorie: 'Forme de la colonne'},\n  { id_categorie: 159, categorie: 'Niveau du bassin'},\n  { id_categorie: 160, categorie: 'Différence de niveau malléolaire'},\n  { id_categorie: 161, categorie: 'Rotation cervicale à droite'},\n  { id_categorie: 1621, categorie: 'Rotation cervicale à gauche'},\n  { id_categorie: 1631, categorie: 'Souplesse rachidienne'},\n]\nconst ELEMENT_DATA48: matcheck[]=[\n  { id_categorie: 162, categorie: 'normal'},\n  { id_categorie: 163, categorie: 'plat'},\n  { id_categorie: 164, categorie: 'hypercyphose'},\n  { id_categorie: 165, categorie: 'hyperlordose'},\n  { id_categorie: 166, categorie: 'scoliose'},\n]\nconst ELEMENT_DATA49: matcheck[]=[\n  { id_categorie: 167, categorie: 'horizontal'},\n  { id_categorie: 168, categorie: 'plus bas à droite'},\n  { id_categorie: 169, categorie: 'plus bas à gauche'},\n]\nconst ELEMENT_DATA50: matcheck[]=[\n  { id_categorie: 170, categorie: 'à droite'},\n  { id_categorie: 171, categorie: 'à gauche'},\n \n]\nconst ELEMENT_DATA51: matcheck[]=[\n  { id_categorie: 17212, categorie: 'Flexion / Extension à droite'},\n  { id_categorie: 1721, categorie: 'Flexion / Extension à gauche'},\n  { id_categorie: 173, categorie: 'Rotation vers l’intérieur (flexion de 90°) à droite'},\n  { id_categorie: 1731, categorie: 'Rotation vers l’intérieur (flexion de 90°) à gauche'},\n  { id_categorie: 174, categorie: 'Abduction à droite'},\n  { id_categorie: 1741, categorie: 'Abduction à gauche'},\n  { id_categorie: 175, categorie: 'Sensibilité à la palpation de l’aine à droite'},\n  { id_categorie: 1751, categorie: 'Sensibilité à la palpation de l’aine à gauche'},\n  { id_categorie: 176, categorie: 'Hernie à droite'},\n  { id_categorie: 1761, categorie: 'Hernie à gauche'},\n]\nconst ELEMENT_DATA52: matcheck[]=[\n  { id_categorie: 177, categorie: 'Adducteurs à droite'},\n  { id_categorie: 1771, categorie: 'Adducteurs  à gauche'},\n  { id_categorie: 178, categorie: 'Ischio-jambiers à droite'},\n  { id_categorie: 1781, categorie: 'Ischio-jambiers  à gauche'},\n  { id_categorie: 179, categorie: 'Iliopsoas à droite'},\n  { id_categorie: 1791, categorie: 'Iliopsoas  à gauche'},\n  { id_categorie: 180, categorie: 'Quadriceps à droite'},\n  { id_categorie: 1801, categorie: 'Quadriceps  à gauche'},\n]\nconst ELEMENT_DATA53: matcheck[]=[\n  { id_categorie: 1811, categorie: 'Axe de l’articulation du genou à droite'},\n  { id_categorie: 18111, categorie: 'Axe de l’articulation du genou à gauche'},\n  { id_categorie: 1821, categorie: 'Flexion / Extension à droite'},\n  { id_categorie: 182231, categorie: 'Flexion / Extension à gauche'},\n  { id_categorie: 18333, categorie: 'Test de Lachman à droite'},\n  { id_categorie: 18351, categorie: 'Test de Lachman à gauche'},\n  { id_categorie: 1845, categorie: 'Signe de tiroir antérieur (genou à 90° de flexion) à droite'},\n  { id_categorie: 18451, categorie: 'Signe de tiroir antérieur (genou à 90° de flexion) à gauche'},\n  { id_categorie: 1855, categorie: 'Valgus forcé, en extension à droite'},\n  { id_categorie: 18551, categorie: 'Valgus forcé, en extension à gauche'},\n  { id_categorie: 1865, categorie: 'Valgus forcé, 30° de flexionà droite '},\n  { id_categorie: 18651, categorie: 'Valgus forcé, 30° de flexion à gauche'},\n  { id_categorie: 1875, categorie: 'Varus forcé, en extension à droite'},\n  { id_categorie: 18751, categorie: 'Varus forcé, en extension à gauche'},\n  { id_categorie: 1885, categorie: 'Varus forcé, 30° de flexion à droite'},\n  { id_categorie: 18815, categorie: 'Varus forcé, 30° de flexion à gauche'},\n]\nconst ELEMENT_DATA54: matcheck[]=[\n  { id_categorie: 189, categorie: 'non'},\n  { id_categorie: 190, categorie: 'pubis'},\n  { id_categorie: 191, categorie: 'canal inguinal'},\n]\nconst ELEMENT_DATA55: matcheck[]=[\n  { id_categorie: 192, categorie: 'normal'},\n  { id_categorie: 193, categorie: 'genu varum'},\n  { id_categorie: 194, categorie: 'genu valgum'},\n]\nconst ELEMENT_DATA56: matcheck[]=[\n  { id_categorie: 1921, categorie: 'normal'},\n  { id_categorie: 1931, categorie: '+'},\n  { id_categorie: 1941, categorie: '++'},\n  { id_categorie: 1951, categorie: '+++'},\n]\nconst ELEMENT_DATA57: matcheck[]=[\n  { id_categorie: 181, categorie: 'Sensibilité de la cheville à droite'},\n  { id_categorie: 181211, categorie: 'Sensibilité de la cheville à gauche'},\n  { id_categorie: 182, categorie: 'Signe de tiroir antérieur à droite'},\n  { id_categorie: 1821, categorie: 'Signe de tiroir antérieur à gauche'},\n  { id_categorie: 183, categorie: 'Dorsiflexion à droite'},\n  { id_categorie: 1831, categorie: 'Dorsiflexion à gauche'},\n  { id_categorie: 184, categorie: 'Flexion plantaire à droite'},\n  { id_categorie: 1841, categorie: 'Flexion plantaire à gauche'},\n  { id_categorie: 185, categorie: 'Supination totale à droite'},\n  { id_categorie: 1851, categorie: 'Supination totale à gauche'},\n  { id_categorie: 186, categorie: 'Pronation totale à droite'},\n  { id_categorie: 1861, categorie: 'Pronation totale à gauche'},\n  { id_categorie: 187, categorie: 'Articulation métatarsienne à droite'},\n  { id_categorie: 1871, categorie: 'Articulation métatarsienne à gauche'},\n \n\n]\nconst ELEMENT_DATA58: matcheck[]=[\n  { id_categorie: 188, categorie: 'normal'},\n  { id_categorie: 189, categorie: 'diminuée'},\n  { id_categorie: 190, categorie: 'accrue'},\n]\nconst ELEMENT_DATA59: matcheck[]=[\n  { id_categorie: 191, categorie: 'normal'},\n  { id_categorie: 192, categorie: 'pathologique'},\n\n]\nconst ELEMENT_DATA60: matcheck[]=[\n  { id_categorie: 193, categorie: 'Suspicion de pathologie cardiaque'},\n  { id_categorie: 194, categorie: 'Autres pathologies'},\n  { id_categorie: 195, categorie: 'APTE A LA PRATIQUE DU FOOTBALL DE HAUT NIVEAU'},\n\n]\nconst ELEMENT_DATA61: matcheck[]=[\n  { id_categorie: 196, categorie: 'dédoublement'},\n  { id_categorie: 197, categorie: 'paradoxal'},\n  { id_categorie: 198, categorie: '3e son'},\n  { id_categorie: 199, categorie: '4e son'},\n]\nconst ELEMENT_DATA62: matcheck[]=[\n  { id_categorie: 200, categorie: 'dédoublement'},\n  { id_categorie: 201, categorie: 'diastolique'},\n  { id_categorie: 202, categorie: 'claquements'},\n  { id_categorie: 203, categorie: 'changements durant la manœuvre de Valsalva'},\n  { id_categorie: 204, categorie: 'changements après s’être levé brusquement'},\n]\nconst ELEMENT_DATA63: matcheck[]=[\n  { id_categorie: 205, categorie: 'premier degré'},\n  { id_categorie: 206, categorie: 'second degré type I'},\n  { id_categorie: 207, categorie: 'second degré type II'},\n  { id_categorie: 208, categorie: 'troisième degré'},\n \n]\nconst ELEMENT_DATA64: matcheck[]=[\n  { id_categorie: 209, categorie: 'gauche complet (>0,12 s)'},\n  { id_categorie: 210, categorie: 'droit complet (>0,12 s)'},\n  { id_categorie: 211, categorie: 'antérieur gauche incomplet'},\n  { id_categorie: 212, categorie: 'postérieur gauche incomplet'},\n  { id_categorie: 213, categorie: 'incomplet droit'},\n]\nconst ELEMENT_DATA65: matcheck[]=[\n  { id_categorie: 214, categorie: 'raccourci'},\n  { id_categorie: 215, categorie: 'douloureux'},\n\n]\nconst ELEMENT_DATA66: matcheck[]=[\n  { id_categorie: 216, categorie: 'gauche'},\n  { id_categorie: 217, categorie: 'droite'},\n  { id_categorie: 218, categorie: 'vue de petit axe parasternal'},\n  { id_categorie: 219, categorie: 'autre vue'},\n\n]","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rvc3NpZXJzL2Rvc3NpZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  dossiers works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dossiers',\n  templateUrl: './dossiers.component.html',\n  styleUrls: ['./dossiers.component.css']\n})\nexport class DossiersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <br/>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n                <div class=\\\"card card-stats\\\">\\n                    <div class=\\\"card-header card-header-warning card-header-icon\\\">\\n                        <div class=\\\"card-icon\\\">\\n                            <i class=\\\"material-icons\\\">content_copy</i>\\n                        </div>\\n                        <p class=\\\"card-category\\\">Nouveau dossier</p>\\n                        <h3 class=\\\"card-title\\\">\\n                            <small>+</small>\\n                        </h3>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons text-danger\\\">warning</i>\\n                            <a href=\\\"#pablo\\\">Dossier non valide</a>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n                <div class=\\\"card card-stats\\\">\\n                    <div class=\\\"card-header card-header-success card-header-icon\\\">\\n                        <div class=\\\"card-icon\\\">\\n                            <i class=\\\"material-icons\\\">store</i>\\n                        </div>\\n                        <p class=\\\"card-category\\\">La liste de dossier</p>\\n                        <h3 class=\\\"card-title\\\">+</h3>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons\\\">date_range</i> Dernières 24 heures\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n                <div class=\\\"card card-stats\\\">\\n                    <div class=\\\"card-header card-header-danger card-header-icon\\\">\\n                        <div class=\\\"card-icon\\\">\\n                            <i class=\\\"material-icons\\\"></i>\\n                        </div>\\n                        <p class=\\\"card-category\\\">Nouveau Joueur</p>\\n                        <h3 class=\\\"card-title\\\">+</h3>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons\\\">local_offer</i> \\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n                <div class=\\\"card card-stats\\\">\\n                    <div class=\\\"card-header card-header-info card-header-icon\\\">\\n                        <div class=\\\"card-icon\\\">\\n                            <i class=\\\"fa fa-twitter\\\"></i>\\n                        </div>\\n                        <p class=\\\"card-category\\\">Nouveau club</p>\\n                        <h3 class=\\\"card-title\\\">+</h3>\\n                    </div>\\n                    <div class=\\\"card-footer\\\">\\n                        <div class=\\\"stats\\\">\\n                            <i class=\\\"material-icons\\\">update</i> Vient de mettre à jour\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <br/>\\n        <div class=\\\"row\\\">\\n           \\n            <div class=\\\"col-lg-12 col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-warning\\\">\\n                        <h4 class=\\\"card-title\\\">Les dossiers\\n                            </h4>\\n                        <p class=\\\"card-category\\\">Nouveaux dossier</p>\\n                    </div>\\n                    <div class=\\\"card-body table-responsive\\\">\\n                        <table class=\\\"table table-hover\\\">\\n                            <thead class=\\\"text-warning\\\">\\n                                <th>ID</th>\\n                                <th>Nom</th>\\n                                <th>Dossier</th>\\n                                <th>Club</th>\\n                            </thead>\\n                            <tbody>\\n                                <tr>\\n                                    <td>1</td>\\n                                    <td>Dakota Rice</td>\\n                                    <td>12</td>\\n                                    <td>FAR</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>2</td>\\n                                    <td>Minerva Hooper</td>\\n                                    <td>23</td>\\n                                    <td>IRT</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>3</td>\\n                                    <td>Sage Rodriguez</td>\\n                                    <td>65</td>\\n                                    <td>RCA</td>\\n                                </tr>\\n                                <tr>\\n                                    <td>4</td>\\n                                    <td>Philip Chaney</td>\\n                                    <td>55</td>\\n                                    <td>WAC</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport * as Chartist from 'chartist';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n  startAnimationForLineChart(chart){\n      let seq: any, delays: any, durations: any;\n      seq = 0;\n      delays = 80;\n      durations = 500;\n\n      chart.on('draw', function(data) {\n        if(data.type === 'line' || data.type === 'area') {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if(data.type === 'point') {\n              seq++;\n              data.element.animate({\n                opacity: {\n                  begin: seq * delays,\n                  dur: durations,\n                  from: 0,\n                  to: 1,\n                  easing: 'ease'\n                }\n              });\n          }\n      });\n\n      seq = 0;\n  };\n  startAnimationForBarChart(chart){\n      let seq2: any, delays2: any, durations2: any;\n\n      seq2 = 0;\n      delays2 = 80;\n      durations2 = 500;\n      chart.on('draw', function(data) {\n        if(data.type === 'bar'){\n            seq2++;\n            data.element.animate({\n              opacity: {\n                begin: seq2 * delays2,\n                dur: durations2,\n                from: 0,\n                to: 1,\n                easing: 'ease'\n              }\n            });\n        }\n      });\n\n      seq2 = 0;\n  };\n  ngOnInit() {\n      /* ----------==========     Daily Sales Chart initialization For Documentation    ==========---------- */\n\n      const dataDailySalesChart: any = {\n          labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n          series: [\n              [12, 17, 7, 17, 23, 18, 38]\n          ]\n      };\n\n     const optionsDailySalesChart: any = {\n          lineSmooth: Chartist.Interpolation.cardinal({\n              tension: 0\n          }),\n          low: 0,\n          high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0},\n      }\n\n      var dailySalesChart = new Chartist.Line('#dailySalesChart', dataDailySalesChart, optionsDailySalesChart);\n\n      this.startAnimationForLineChart(dailySalesChart);\n\n\n      /* ----------==========     Completed Tasks Chart initialization    ==========---------- */\n\n      const dataCompletedTasksChart: any = {\n          labels: ['12p', '3p', '6p', '9p', '12p', '3a', '6a', '9a'],\n          series: [\n              [230, 750, 450, 300, 280, 240, 200, 190]\n          ]\n      };\n\n     const optionsCompletedTasksChart: any = {\n          lineSmooth: Chartist.Interpolation.cardinal({\n              tension: 0\n          }),\n          low: 0,\n          high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0}\n      }\n\n      var completedTasksChart = new Chartist.Line('#completedTasksChart', dataCompletedTasksChart, optionsCompletedTasksChart);\n\n      // start animation for the Completed Tasks Chart - Line Chart\n      this.startAnimationForLineChart(completedTasksChart);\n\n\n\n      /* ----------==========     Emails Subscription Chart initialization    ==========---------- */\n\n      var datawebsiteViewsChart = {\n        labels: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n        series: [\n          [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\n\n        ]\n      };\n      var optionswebsiteViewsChart = {\n          axisX: {\n              showGrid: false\n          },\n          low: 0,\n          high: 1000,\n          chartPadding: { top: 0, right: 5, bottom: 0, left: 0}\n      };\n      var responsiveOptions: any[] = [\n        ['screen and (max-width: 640px)', {\n          seriesBarDistance: 5,\n          axisX: {\n            labelInterpolationFnc: function (value) {\n              return value[0];\n            }\n          }\n        }]\n      ];\n      var websiteViewsChart = new Chartist.Bar('#websiteViewsChart', datawebsiteViewsChart, optionswebsiteViewsChart, responsiveOptions);\n\n      //start animation for the Emails Subscription Chart\n      this.startAnimationForBarChart(websiteViewsChart);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZWxheW91dC9ob21lbGF5b3V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<div class=\\\"container\\\">\\n  \\n  <app-parametre></app-parametre>\\n  \\n    \\n </div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homelayout',\n  templateUrl: './homelayout.component.html',\n  styleUrls: ['./homelayout.component.css']\n})\nexport class HomelayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.sidenav .mat-toolbar {\\n  background: inherit;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\n.spacer{\\n  flex: 1 1 auto;\\n}\\n\\n.mat-toolbar a{\\n  display:inline-block;\\n  margin: 0 10px;\\n  color: white;\\n  text-decoration: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFyYW1ldHJlL3BhcmFtZXRyZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtDQUNkOztBQUVEO0VBQ0UsYUFBYTtDQUNkOztBQUVEO0VBQ0Usb0JBQW9CO0NBQ3JCOztBQUVEO0VBQ0UseUJBQWlCO0VBQWpCLGlCQUFpQjtFQUNqQixPQUFPO0VBQ1AsV0FBVztDQUNaOztBQUNEO0VBQ0UsZUFBZTtDQUNoQjs7QUFFRDtFQUNFLHFCQUFxQjtFQUNyQixlQUFlO0VBQ2YsYUFBYTtFQUNiLHNCQUFzQjtDQUN2QiIsImZpbGUiOiJzcmMvYXBwL3BhcmFtZXRyZS9wYXJhbWV0cmUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWRlbmF2LWNvbnRhaW5lciB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLnNpZGVuYXYge1xuICB3aWR0aDogMjAwcHg7XG59XG5cbi5zaWRlbmF2IC5tYXQtdG9vbGJhciB7XG4gIGJhY2tncm91bmQ6IGluaGVyaXQ7XG59XG5cbi5tYXQtdG9vbGJhci5tYXQtcHJpbWFyeSB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTtcbn1cbi5zcGFjZXJ7XG4gIGZsZXg6IDEgMSBhdXRvO1xufVxuXG4ubWF0LXRvb2xiYXIgYXtcbiAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gIG1hcmdpbjogMCAxMHB4O1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn0iXX0= */\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer \\n  class=\\\"sidenav\\\" \\n  fixedInViewport=\\\"true\\\"\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n      [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar>Menu</mat-toolbar>\\n    <mat-nav-list>\\n        <button style=\\\"margin-top: 15px;text-align: left;\\\"  mat-button  class=\\\"mat-btn\\\"  (click)=\\\"Navigate('/home/dashboard')\\\"  ><mat-icon>home</mat-icon>Tableau de bord</button>\\n       \\n        <button *ngIf=\\\"Pnavigate('dossier')\\\" style=\\\"margin-top: 15px;text-align: left;\\\"  mat-button  class=\\\"mat-btn\\\" [matMenuTriggerFor]=\\\"dossier\\\" ><mat-icon>folder</mat-icon>Dossier PCMA <mat-icon>keyboard_arrow_right</mat-icon></button>\\n        \\n      \\n<button *ngIf=\\\"Pnavigate('donnee')\\\" style=\\\"margin-top: 15px;text-align: left;\\\" mat-button class=\\\"mat-btn\\\" [matMenuTriggerFor]=\\\"donnee\\\"><mat-icon>storage</mat-icon> Données <mat-icon>keyboard_arrow_right</mat-icon></button>\\n<button *ngIf=\\\"Pnavigate('rapport')\\\" style=\\\"margin-top: 15px;text-align: left;\\\"  mat-button class=\\\"mat-btn\\\"  [matMenuTriggerFor]=\\\"Rapport\\\"><mat-icon>poll</mat-icon>  Rapport <mat-icon>keyboard_arrow_right</mat-icon></button>\\n<button *ngIf=\\\"Pnavigate('parametre')\\\" style=\\\"margin-top: 15px;text-align: left;\\\"  mat-button class=\\\"mat-btn\\\" [matMenuTriggerFor]=\\\"Parametre\\\"><mat-icon>settings</mat-icon> Paramétre <mat-icon>keyboard_arrow_right</mat-icon></button>\\n<button style=\\\"margin-top: 15px;text-align: left;\\\"  mat-button class=\\\"mat-btn\\\" [matMenuTriggerFor]=\\\"Profil\\\"><mat-icon>account_box</mat-icon> Profil <mat-icon>keyboard_arrow_right</mat-icon></button>\\n<mat-menu #dossier=\\\"matMenu\\\" >\\n    <button *ngIf=\\\"Pnavigate('listd')\\\" mat-menu-item (click)=\\\"Navigate('/home/dossier-list')\\\"   >Dossiers</button>\\n    <button *ngIf=\\\"Pnavigate('envoyer')\\\" mat-menu-item (click)=\\\"Navigate('/home/dossier')\\\"   > <mat-icon>send</mat-icon> Envoyer</button>\\n   \\n    \\n  </mat-menu>        \\n\\n<mat-menu #donnee=\\\"matMenu\\\" >\\n \\n          <button *ngIf=\\\"Pnavigate('club')\\\"  mat-menu-item (click)=\\\"Navigate('/home/club')\\\"  >Clubs</button>\\n          <button *ngIf=\\\"Pnavigate('joueur')\\\" mat-menu-item (click)=\\\"Navigate('/home/joueur')\\\" >Joueurs</button>\\n          <button *ngIf=\\\"Pnavigate('saison')\\\" mat-menu-item (click)=\\\"Navigate('/home/saison')\\\" >Saison</button>\\n          <button *ngIf=\\\"Pnavigate('competition')\\\" mat-menu-item (click)=\\\"Navigate('/home/competition')\\\" >Competition</button>\\n          \\n        </mat-menu>\\n        <mat-menu #Rapport=\\\"matMenu\\\" >\\n            <button *ngIf=\\\"Pnavigate('rpcma')\\\" mat-menu-item  >Dossier PCMA</button>\\n            <button *ngIf=\\\"Pnavigate('rjoueurs')\\\" mat-menu-item >Joueurs</button>\\n            <button *ngIf=\\\"Pnavigate('rMedecin')\\\" mat-menu-item >Medecin</button>           \\n          </mat-menu>\\n        <mat-menu #Parametre=\\\"matMenu\\\" >\\n            <button *ngIf=\\\"Pnavigate('utilisateur')\\\" mat-menu-item (click)=\\\"Navigate('/home/utilisateur-list')\\\" >Utilisateurs</button>\\n            <button *ngIf=\\\"Pnavigate('profil')\\\" mat-menu-item (click)=\\\"Navigate('/home/profil')\\\"  >Profil</button>\\n            <button *ngIf=\\\"Pnavigate('droit')\\\" mat-menu-item >Droit</button> \\n          </mat-menu>\\n          <mat-menu #Profil=\\\"matMenu\\\" > \\n              <button mat-menu-item >Changer Mot de Passe</button>\\n              <button mat-menu-item  (click)=\\\"Logout()\\\">Se Déconnecter </button>\\n             \\n            </mat-menu> \\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Dossier PCMA</span>\\n      <span class=\\\"spacer\\\"></span>\\n     \\n      <a href=\\\"#\\\"><mat-icon>settings</mat-icon></a>\\n    </mat-toolbar>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-parametre',\n  templateUrl: './parametre.component.html',\n  styleUrls: ['./parametre.component.css'],\n})\nexport class ParametreComponent {\nprofil:string;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver,private router : Router) {}\n  Logout() {\n    \n    localStorage.removeItem('userToken');\n    localStorage.removeItem('id');\n    localStorage.removeItem('profil');\n    window.location.href = '/login';\n\n\n\n  }\n  ngOnInit() {\n  this.profil=localStorage.getItem('profil');\n\n  }\n  Navigate(parm) {\n    \nwindow.location.href = parm;\n\n  }\n  Pnavigate(parm) {\n  \n  \n    if(parm=='club'){\n      if(this.profil=='6'){\n      return false;\n      }else if(this.profil=='9'){\n      return false;\n      }else if(this.profil=='11'){\n      return true;\n      }else if(this.profil=='14'){\n      return false;\n      }else if(this.profil=='15'){\n      return false;\n      }\n    }else if(parm=='joueur'){\n      if(this.profil=='6'){\n        return false;\n        }else if(this.profil=='9'){\n        return false;\n        }else if(this.profil=='11'){\n        return true;\n        }else if(this.profil=='14'){\n        return true;\n        }else if(this.profil=='15'){\n        return false;\n        }\n    }else if(parm=='saison'){\n      if(this.profil=='6'){\n        return false;\n        }else if(this.profil=='9'){\n        return false;\n        }else if(this.profil=='11'){\n        return true;\n        }else if(this.profil=='14'){\n        return false;\n        }else if(this.profil=='15'){\n        return false;\n        }\n    }else if(parm=='competition'){\n      if(this.profil=='6'){\n        return false;\n        }else if(this.profil=='9'){\n        return false;\n        }else if(this.profil=='11'){\n        return true;\n        }else if(this.profil=='14'){\n        return false;\n        }else if(this.profil=='15'){\n        return false;\n        }\n    }else if(parm=='rpcma'){\n      if(this.profil=='6'){\n        return false;\n        }else if(this.profil=='9'){\n        return true;\n        }else if(this.profil=='11'){\n        return true;\n        }else if(this.profil=='14'){\n        return false;\n        }else if(this.profil=='15'){\n        return false;\n        }\n    }else if(parm=='rjoueurs'){\n      if(this.profil=='6'){\n        return false;\n        }else if(this.profil=='9'){\n        return true;\n        }else if(this.profil=='11'){\n        return true;\n        }else if(this.profil=='14'){\n        return false;\n        }else if(this.profil=='15'){\n        return false;\n        }\n    }else if(parm=='rMedecin'){\n      if(this.profil=='6'){\n        return false;\n        }else if(this.profil=='9'){\n        return true;\n        }else if(this.profil=='11'){\n        return true;\n        }else if(this.profil=='14'){\n        return false;\n        }else if(this.profil=='15'){\n        return false;\n        }\n    }else if(parm=='utilisateur'){\n      if(this.profil=='6'){\n        return false;\n        }else if(this.profil=='9'){\n        return false;\n        }else if(this.profil=='11'){\n        return true;\n        }else if(this.profil=='14'){\n        return false;\n        }else if(this.profil=='15'){\n        return false;\n        }\n    }else if(parm=='profil'){\n      if(this.profil=='6'){\n        return false;\n        }else if(this.profil=='9'){\n        return false;\n        }else if(this.profil=='11'){\n        return true;\n        }else if(this.profil=='14'){\n        return false;\n        }else if(this.profil=='15'){\n        return false;\n        }\n    }else if(parm=='droit'){\n      if(this.profil=='6'){\n        return false;\n        }else if(this.profil=='9'){\n        return false;\n        }else if(this.profil=='11'){\n        return true;\n        }else if(this.profil=='14'){\n        return false;\n        }else if(this.profil=='15'){\n        return false;\n        }\n    }else if(parm=='parametre'){\n      if(this.profil=='6'){\n        return false;\n        }else if(this.profil=='9'){\n        return false;\n        }else if(this.profil=='11'){\n        return true;\n        }else if(this.profil=='14'){\n        return false;\n        }else if(this.profil=='15'){\n        return false;\n        }\n    }else if(parm=='rapport'){\n      if(this.profil=='6'){\n        return false;\n        }else if(this.profil=='9'){\n        return true;\n        }else if(this.profil=='11'){\n        return true;\n        }else if(this.profil=='14'){\n        return false;\n        }else if(this.profil=='15'){\n        return false;\n        }\n    }else if(parm=='donnee'){\n      if(this.profil=='6'){\n        return false;\n        }else if(this.profil=='9'){\n        return false;\n        }else if(this.profil=='11'){\n        return true;\n        }else if(this.profil=='14'){\n        return true;\n        }else if(this.profil=='15'){\n        return false;\n        }\n    }else if(parm=='dossier'){\n      if(this.profil=='6'){\n        return true;\n        }else if(this.profil=='9'){\n        return true;\n        }else if(this.profil=='11'){\n        return true;\n        }else if(this.profil=='14'){\n        return false;\n        }else if(this.profil=='15'){\n        return true;\n      }  }else if(parm=='listd'){\n          if(this.profil=='6'){\n            return true;\n            }else if(this.profil=='9'){\n            return true;\n            }else if(this.profil=='11'){\n            return true;\n            }else if(this.profil=='14'){\n            return false;\n            }else if(this.profil=='15'){\n            return true;\n         }   }else if(parm=='envoyer'){\n              if(this.profil=='6'){\n                return true;\n                }else if(this.profil=='9'){\n                return false;\n                }else if(this.profil=='11'){\n                return true;\n                }else if(this.profil=='14'){\n                return false;\n                }else if(this.profil=='15'){\n                return false;\n                }\n    \n    }\n    \n   \n    }\n  }\n","import { Injectable } from '@angular/core';\nimport { Confirmation1 } from './Confirmation1.model';\nimport {HttpClient, HttpHeaders}from \"@angular/common/http\";\nimport * as _ from 'lodash';\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmationService {\n  formData:Confirmation1;\n  list :Confirmation1[]; \n  data:any;\n  val:string;\n  readonly rootURL =\"http://localhost:56391/api/\";\n    dataSource: any;\n  constructor(private http : HttpClient) {\n\n \n  }\n  \n  form: FormGroup = new FormGroup({\n  \n    ConfirmationID:new FormControl(null),\n      DossierID:new FormControl(null),\n      UtilisateurID:new FormControl(null),\n      Confirmation1:new FormControl(''),\n      DateConfirmation:new FormControl(null),\n  \n  });\n  \n  postConfirmation(formData : Confirmation1){\n    \nreturn this.http.post<Confirmation1>(this.rootURL+'Confirmation',formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n  \n}  \n  getutl(formData){\nthis.form.patchValue({\n  DossierID:formData.DossierID,\n})\n    \n  \n  }\n  putConfirmation(formData:Confirmation1){\n   \n    this.form.setValue(formData);\n    return this.http.put<Confirmation1>(this.rootURL+'Confirmation/'+formData.ConfirmationID,formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n      }\n      getByID(id:number){\n\n      console.log(this.list);\n    var val=\"Aucun\";\n    if(this.list){\n        for(var i=0;i<this.list.length;i++){\n          if(this.list[i].DossierID==id){\n            val=this.list[i]['Confirmation1'];\n      \n          } } }  return val;\n     /*   var subject = new Subject<string>();\n     this.http.get<Confirmation>(this.rootURL+'Confirmation/'+id).subscribe((res:any) => {\n     this.list=res;\n    this.val=\"\";\n     for(var i=0;i<this.list.length;i++){\n       if(this.list[i].ConfirmationID==id){\n      this.formData=Object.assign({},this.list[i]);\n      this.val= this.formData['NomConfirmation'];\n      subject.next(this.val);} }\n     \n              });*/\n    \n\n    \n             \n       \n            }\n      getList() {\n        return this.http.get(this.rootURL + 'Confirmation',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n      }\n      getListtable() {\n        return this.http.get(this.rootURL + 'Confirmation',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n      }\n    refreshList(){\n      this.http.get(this.rootURL+'Confirmation',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n      .toPromise().then(res => this.list = res as Confirmation1[]);\n    \n     return this.http.get(this.rootURL+'Confirmation',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n     .toPromise();\n   \n   }\n \n   \n   deleteConfirmation(formData:Confirmation1){\n    \n  this.http.delete<Confirmation1>(this.rootURL+'Confirmation/'+formData.ConfirmationID,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).subscribe(res => {\n      console.log(res);\n    }, err => {\n      console.log(err);\n    });\n   \n    return this.refreshList();\n  }\n  getNomConfirmation($key){\n    if ($key == \"0\")\n    return \"\";\n  else{\n    return _.find(this.list, (obj) => { return obj.$key == $key; })['Confirmation1'];\n  } \n  }\n  initializeFormGroup() {\n    this.form.setValue({\n      ConfirmationID:null, \n      DossierID:null,\n      UtilisateurID:null,\n      Confirmation1:\"\",\n      DateConfirmation:null,\n     \n    });\n  }\n}\n","import { Injectable, ViewChild } from '@angular/core';\nimport { Club } from './club.model';\nimport {HttpClient, HttpHeaders}from \"@angular/common/http\";\nimport * as _ from 'lodash';\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Observable } from 'rxjs';\nimport {MatPaginator,MatTableDataSource, MatSort } from '@angular/material';\nimport { SaisonService } from './saison.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClubService {\n  formData:Club;\n  list :Club[]; \n  data:any;\n  readonly rootURL =\"http://localhost:56391/api/\";\n   \n  constructor(private http : HttpClient,private servicesaison : SaisonService) {}\n  displayedColumns:string[] = ['ClubID','NomClub','NomCompetition','action'];\n  dataSource= new MatTableDataSource<Club>();\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  @ViewChild(MatSort) sort:MatSort;\n  form: FormGroup = new FormGroup({\n    ClubID: new FormControl(null),\n    NomClub: new FormControl('', Validators.required),\n    EmailClub: new FormControl('', Validators.required),\n    TelClub: new FormControl('', Validators.required),\n    CompetitionID: new FormControl(null),\n    MedecinID: new FormControl(null),\n  });\n  \n  postClub(formData : Club){\n    this.data=this.http.post<Club>(this.rootURL+'club',formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\nconsole.log(this.data);\nreturn this.data.toPromise();\n  }  \n  getClub():Observable<any>{\n    this.data = this.http.get(this.rootURL + 'club',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n    \n   return this.data;  \n  \n  }\n\n  getutl(formData:Club){\n   \n    this.form.setValue(formData);\n  \n  }\n  putClub(formData:Club){\n    \n    this.form.setValue(formData);\n    this.data=this.http.put<Club>(this.rootURL+'club/'+formData.ClubID,formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n    return this.data;\n      }\n      getByID(id:number){\n       \n   \n        var val=\"Reading...\";\n        if(this.list){\n            for(var i=0;i<this.list.length;i++){\n              if(this.list[i].ClubID==id){\n                val=this.list[i]['NomClub'];\n                \n              } } } return val;\n         /*   var subject = new Subject<string>();\n         this.http.get<Saison>(this.rootURL+'Saison/'+id).subscribe((res:any) => {\n         this.list=res;\n        this.val=\"\";\n         for(var i=0;i<this.list.length;i++){\n           if(this.list[i].SaisonID==id){\n          this.formData=Object.assign({},this.list[i]);\n          this.val= this.formData['NomSaison'];\n          subject.next(this.val);} }\n         \n                  });*/\n        \n    \n        \n                 \n           \n                }\n      getList() {\n        return this.http.get(this.rootURL + 'club',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n      }\n      getListtable() {\n        return this.http.get(this.rootURL + 'club',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n      }\n    refreshList(){\n      this.http.get(this.rootURL+'Club',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n      .toPromise().then(res => this.list = res as Club[] );\n     \n     return this.http.get(this.rootURL+'Club',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n     .toPromise();\n   \n   }\n \n   \n   deleteClub(formData:Club){\n    \n  this.http.delete<Club>(this.rootURL+'Club/'+formData.ClubID,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).subscribe(res => {\n      console.log(res);\n    }, err => {\n      console.log(err);\n    });\n   \n    return this.refreshList();\n  }\npform(Clubs){\n\n  this.form.setValue(_.omit(Clubs,'NomCompetition'));\n  \n}\n  initializeFormGroup() {\n    this.form.setValue({\n      ClubID:null,\n      NomClub:\"\",\n      EmailClub:\"\",\n     TelClub:\"\",\n      CompetitionID:null,\n      MedecinID:null\n    });\n  }\n}\n","import { Injectable, ViewChild } from '@angular/core';\nimport { Competition } from './Competition.model';\nimport {HttpClient, HttpHeaders}from \"@angular/common/http\";\nimport { ActivatedRoute } from '@angular/router';\nimport * as _ from 'lodash';\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Observable } from 'rxjs';\nimport {MatPaginator,MatTableDataSource, MatSort } from '@angular/material';\nimport { SaisonService } from './saison.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompetitionService {\n  formData:Competition;\n  list :Competition[]; \n  data:any;\n  readonly rootURL =\"http://localhost:56391/api/\";\n   \n  constructor(private http : HttpClient,private servicesaison : SaisonService) {}\n  displayedColumns:string[] = ['CompetitionID','NomCompetition','NomSaison','action'];\n  dataSource= new MatTableDataSource<Competition>();\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  @ViewChild(MatSort) sort:MatSort;\n  form: FormGroup = new FormGroup({\n    CompetitionID: new FormControl(null),\n    NomCompetition: new FormControl('', Validators.required),\n    RegimeCompetition: new FormControl('', Validators.required),\n    CategorieCompetition: new FormControl('', Validators.required),\n    SaisonID:new FormControl(null),\n  \n  });\n  \n  postCompetition(formData : Competition){\n    console.log(formData);\nreturn this.http.post<Competition>(this.rootURL+'Competition',formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n  }  \n  getCompetition():Observable<any>{\n    this.data = this.http.get(this.rootURL + 'Competition',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n    \n   return this.data;  \n  \n  }\n\n  getutl(formData:Competition){\n   \n    this.form.setValue(formData);\n  \n  }\n  putCompetition(formData:Competition){\n    \n    this.form.setValue(formData);\n    this.data=this.http.put<Competition>(this.rootURL+'Competition/'+formData.CompetitionID,formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n    return this.data;\n      }\n      getByID(id:number){\n       \n        var val=\"Aucun\";\n            for(var i=0;i<this.list.length;i++){\n              if(this.list[i].CompetitionID==id){\n                val=this.list[i]['NomCompetition'];\n                \n              } }  return val;\n         /*   var subject = new Subject<string>();\n         this.http.get<Saison>(this.rootURL+'Saison/'+id).subscribe((res:any) => {\n         this.list=res;\n        this.val=\"\";\n         for(var i=0;i<this.list.length;i++){\n           if(this.list[i].SaisonID==id){\n          this.formData=Object.assign({},this.list[i]);\n          this.val= this.formData['NomSaison'];\n          subject.next(this.val);} }\n         \n                  });*/\n        \n    \n        \n                 \n           \n                }\n      getList() {\n        return this.http.get(this.rootURL + 'Competition',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n      }\n      getListtable() {\n        return this.http.get(this.rootURL + 'Competition',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n      }\n      refreshList(){\n        this.http.get(this.rootURL+'Competition',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n        .toPromise().then(res => this.list = res as Competition[]);\n       \n       return this.http.get(this.rootURL+'Competition',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n       .toPromise();\n     \n     }\n \n   \n   deleteCompetition(formData:Competition){\n    \n  this.http.delete<Competition>(this.rootURL+'Competition/'+formData.CompetitionID,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).subscribe(res => {\n      console.log(res);\n    }, err => {\n      console.log(err);\n    });\n   \n    return this.refreshList();\n  }\npform(competitions){\n  this.form.setValue(_.omit(competitions,'NomSaison'));\n\n}\n  initializeFormGroup() {\n    this.form.setValue({\n      CompetitionID:null,\n      NomCompetition:\"\",\n      RegimeCompetition:\"\",\n      CategorieCompetition:\"\",\n      SaisonID:null,\n     \n    });\n  }\n}\n","import { Injectable, ViewChild } from '@angular/core';\nimport { Dossier } from './dossier.model';\nimport { Action } from './action.model';\nimport {HttpClient, HttpHeaders}from \"@angular/common/http\";\nimport * as _ from 'lodash';\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Observable } from 'rxjs';\nimport {MatPaginator,MatTableDataSource, MatSort } from '@angular/material';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DossierService {\n  formData:Dossier;\n  formDataa:Action;\n  listD :Dossier[]; \n  list :Action[]; \n  data:any;\n  readonly rootURL =\"http://localhost:56391/api/\";\n   \n  constructor(private http : HttpClient) {}\n  displayedColumns:string[] = ['DossierID','NomJoueur','NomClub','NomUtilisateur','Etat','action'];\n \n  dataSource= new MatTableDataSource<Dossier>();\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  @ViewChild(MatSort) sort:MatSort;\n  form: FormGroup = new FormGroup({\n    DossierID: new FormControl(null),\n    NomDossier: new FormControl('', Validators.required),\n    EmailDossier: new FormControl('', Validators.required),\n    TelDossier: new FormControl('', Validators.required),\n    CompetitionID: new FormControl(null),\n  \n  });\n  \n  postDossier(formDataa : Action){\n    console.log(formDataa);\n\n    this.data=this.http.post<Action>(this.rootURL+'Action',formDataa,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n\n    return this.data.toPromise();\n  } \n  postDossier_(formData : Dossier){\n    \n\n    console.log(formData);\n    this.data=this.http.post<Dossier>(this.rootURL+'Dossier',formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n\n    return this.data;\n  }\n  \n  getDossier():Observable<any>{\n    if((localStorage.getItem('profil')=='11') || (localStorage.getItem('profil')=='9'))\n    this.data = this.http.get(this.rootURL + 'Dossier',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n    else\n    this.data = this.http.get(this.rootURL + 'DossierM/'+localStorage.getItem('IdInt'),{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n   \n   return this.data;  \n  \n  }\nuploadFile(iddossier: string, fileToUpload: File) {\n /* console.log('tes');\n  const formData1: FormData = new FormData();\n  formData1.append('Image', fileToUpload, fileToUpload.name);\n  formData1.append('id', iddossier);\n  var res =this.http.post(this.rootURL + 'File',formData1,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n console.log(res);\n  return res.toPromise();*/\n\n}\n  getutl(formData:Dossier){\n   \n    this.form.setValue(formData);\n  \n  }\n  getListC(id) {\n       \n    return this.http.get(this.rootURL + 'Categorie/'+id,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n  }\n  putDossier(formData:Action){\n    \n    this.form.setValue(formData);\n    this.data=this.http.put<Dossier>(this.rootURL+'Action/'+formData.ActionID,formData);\n    return this.data;\n      }\n      getByID(id:number){\n       \n        var val=\"Aucun\";\n            for(var i=0;i<this.list.length;i++){\n              if(this.list[i].ActionID==id){\n                val=this.list[i]['NomDossier'];\n                \n              } }  return val;\n         /*   var subject = new Subject<string>();\n         this.http.get<Saison>(this.rootURL+'Saison/'+id).subscribe((res:any) => {\n         this.list=res;\n        this.val=\"\";\n         for(var i=0;i<this.list.length;i++){\n           if(this.list[i].SaisonID==id){\n          this.formData=Object.assign({},this.list[i]);\n          this.val= this.formData['NomSaison'];\n          subject.next(this.val);} }\n         \n                  });*/\n        \n    \n        \n                 \n           \n                }\n      getList(id) {\n        return this.http.get(this.rootURL + 'Dossier/'+id,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n      }\n      getListA(id) {\n       \n        return this.http.get(this.rootURL + 'Action/'+id,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n      }\n      getListtable() {\n        return this.http.get(this.rootURL + 'Dossier',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n      }\n    refreshList(){\n      this.http.get(this.rootURL+'Dossier',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n      .toPromise().then(res => this.list = res as Action[] );\n     \n     return this.http.get(this.rootURL+'Dossier',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n     .toPromise();\n   \n   }\n \n   \n   deleteDossier(formData:Dossier){\n    \n  this.http.delete<Dossier>(this.rootURL+'Dossier/'+formData.DossierID,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).subscribe(res => {\n      console.log(res);\n    }, err => {\n      console.log(err);\n    });\n   \n    return this.refreshList();\n  }\n\n\n\n  initializeFormGroup() {\n    this.form.setValue({\n      ActionID:null,\n      CategorieID:null,\n      CheckID:null,\n      ResAction:\"\",\n     TextAction:\"\"\n     \n    });\n  }\n}\n","import { Injectable, ViewChild } from '@angular/core';\nimport { Joueur } from './Joueur.model';\nimport {HttpClient, HttpHeaders}from \"@angular/common/http\";\nimport { ActivatedRoute } from '@angular/router';\nimport * as _ from 'lodash';\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Observable } from 'rxjs';\nimport {MatPaginator,MatTableDataSource, MatSort } from '@angular/material';\nimport { ClubService } from './club.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JoueurService {\n  formData:Joueur;\n  list :Joueur[]; \n  data:any;\n  readonly rootURL =\"http://localhost:56391/api/\";\n   \n  constructor(private http : HttpClient,private serviceclub : ClubService) {}\n  displayedColumns:string[] = ['JoueurID','NomJoueur','NomClub','action'];\n  dataSource= new MatTableDataSource<Joueur>();\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  @ViewChild(MatSort) sort:MatSort;\n  form: FormGroup = new FormGroup({\n    JoueurID: new FormControl(null),\n    NomJoueur: new FormControl('', Validators.required),\n    PrenomJoueur :new FormControl('', Validators.required),\n    DatenJoueur :new FormControl('', Validators.required),\n    EmailJoueur :new FormControl('', Validators.email),\n    GsmJoueur :new FormControl('', Validators.required),\n    PosteJoueur:new FormControl('', Validators.required),\n    LateralisationJoueur:new FormControl('', Validators.required),\n    ClubID : new FormControl(null),\n    PhotoJoueur:new FormControl('', Validators.required),\n  });\n \n  postJoueur(formData : Joueur){\n    console.log(formData);\nreturn this.http.post<Joueur>(this.rootURL+'Joueur',formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n  }  \n  getJoueur():Observable<any>{\n    this.data = this.http.get(this.rootURL + 'Joueur',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n    \n   return this.data;  \n  \n  }\n\n  getutl(formData:Joueur){\n   \n    this.form.setValue(formData);\n  \n  }\n  putJoueur(formData:Joueur){\n    \n    this.form.setValue(formData);\n    this.data=this.http.put<Joueur>(this.rootURL+'Joueur/'+formData.JoueurID,formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n    return this.data;\n      }\n      getByID(id:number){\n       \n        var val=\"Reading...\";\n        if(this.list){\n            for(var i=0;i<this.list.length;i++){\n              if(this.list[i].JoueurID==id){\n                val=this.list[i]['NomJoueur'];\n                \n              } }}  return val;\n         /*   var subject = new Subject<string>();\n         this.http.get<Saison>(this.rootURL+'Saison/'+id).subscribe((res:any) => {\n         this.list=res;\n        this.val=\"\";\n         for(var i=0;i<this.list.length;i++){\n           if(this.list[i].SaisonID==id){\n          this.formData=Object.assign({},this.list[i]);\n          this.val= this.formData['NomSaison'];\n          subject.next(this.val);} }\n         \n                  });*/\n        \n    \n        \n                 \n           \n                }\n      getList(id) {\n        return this.http.get(this.rootURL + 'Joueur/'+id,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n      }\n      getListtable() {\n        return this.http.get(this.rootURL + 'Joueur');\n      }\n      refreshList(){\n       \n        this.http.get(this.rootURL+'JoueurM/'+localStorage.getItem('club'),{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n        .toPromise().then(res => this.list = res as Joueur[]);\n       \n       return this.http.get(this.rootURL+'JoueurM/'+localStorage.getItem('club'),{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n       .toPromise();\n     \n     }\n \n   \n   deleteJoueur(formData:Joueur){\n    \n  this.http.delete<Joueur>(this.rootURL+'Joueur/'+formData.JoueurID,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).subscribe(res => {\n      console.log(res);\n    }, err => {\n      console.log(err);\n    });\n   \n    return this.refreshList();\n  }\npform(Joueurs){\n  this.form.setValue(_.omit(Joueurs,'NomClub'));\n\n}\n  initializeFormGroup() {\n    this.form.setValue({\n      JoueurID :null,\n      NomJoueur :\"\",\n     PrenomJoueur :\"\",\n      DatenJoueur :\"\",\n     EmailJoueur :\"\",\n     GsmJoueur :\"\",\n     PosteJoueur:\"\",\n     LateralisationJoueur:\"\",\n     ClubID :null,\n     PhotoJoueur:\"\",\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Profil } from './profil.model';\nimport {HttpClient, HttpHeaders}from \"@angular/common/http\";\n\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfilService {\n  formData:Profil;\n  list :Profil[]; \n  data:any;\n  authToken: any;\n  readonly rootURL =\"http://localhost:56391/api/\";\n    dataSource: any;\n  constructor(private http : HttpClient) {}\n  \n  form: FormGroup = new FormGroup({\n    ProfilID: new FormControl(null),\n    NomProfil: new FormControl('', Validators.required),\n   \n  \n  });\n  loadToken(){\n    const token = localStorage.getItem('userToken');\n   \n    this.authToken = token;\n  }\n  postProfil(formData : Profil){\n     \nreturn this.http.post<Profil>(this.rootURL+'profil',formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n  }  \n  getutl(formData:Profil){\n   \n    this.form.setValue(formData);\n  \n  }\n  putProfil(formData:Profil){\n   \n    this.form.setValue(formData);\n    return this.http.put<Profil>(this.rootURL+'profil/'+formData.ProfilID,formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n      }\n      getByID(id:number){\n       \n        var val=\"Reading...\";\n        if(this.list){\n            for(var i=0;i<this.list.length;i++){\n              if(this.list[i].ProfilID==id){\n                val=this.list[i]['NomProfil'];\n                \n              } }  return val;\n            }\n                }\n      getList() {\n        return this.http.get(this.rootURL + 'profil',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n      }\n      getListtable() {\n        return this.http.get(this.rootURL + 'profil',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n      }\n    refreshList(){\n      this.loadToken();\n  \n   \n      this.http.get(this.rootURL+'profil',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n      .toPromise().then(res => this.list = res as Profil[]);\n     \n     return this.http.get(this.rootURL+'profil',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n     .toPromise();\n   \n   }\n \n   \n   deleteProfil(formData:Profil){\n    \n  this.http.delete<Profil>(this.rootURL+'profil/'+formData.ProfilID,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).subscribe(res => {\n      console.log(res);\n    }, err => {\n      console.log(err);\n    });\n   \n    return this.refreshList();\n  }\n\n  initializeFormGroup() {\n    this.form.setValue({\n      ProfilID: null,\n      NomProfil: '',\n     \n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Saison } from './saison.model';\nimport {HttpClient, HttpHeaders}from \"@angular/common/http\";\nimport * as _ from 'lodash';\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Subject } from 'rxjs/internal/Subject';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaisonService {\n  formData:Saison;\n  list :Saison[]; \n  data:any;\n  val:string;\n  readonly rootURL =\"http://localhost:56391/api/\";\n    dataSource: any;\n  constructor(private http : HttpClient) {\n\n \n  }\n  \n  form: FormGroup = new FormGroup({\n    SaisonID: new FormControl(null),\n    NomSaison: new FormControl('', Validators.required),\n   \n  \n  });\n  \n  postSaison(formData : Saison){\n    \nreturn this.http.post<Saison>(this.rootURL+'Saison',formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n  }  \n  getutl(formData:Saison){\n   \n    this.form.setValue(formData);\n  \n  }\n  putSaison(formData:Saison){\n   \n    this.form.setValue(formData);\n    return this.http.put<Saison>(this.rootURL+'Saison/'+formData.SaisonID,formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n      }\n      getByID(id:number){\n    var val=\"Aucun\";\n        for(var i=0;i<this.list.length;i++){\n          if(this.list[i].SaisonID==id){\n            val=this.list[i]['NomSaison'];\n      \n          } }  return val;\n     /*   var subject = new Subject<string>();\n     this.http.get<Saison>(this.rootURL+'Saison/'+id).subscribe((res:any) => {\n     this.list=res;\n    this.val=\"\";\n     for(var i=0;i<this.list.length;i++){\n       if(this.list[i].SaisonID==id){\n      this.formData=Object.assign({},this.list[i]);\n      this.val= this.formData['NomSaison'];\n      subject.next(this.val);} }\n     \n              });*/\n    \n\n    \n             \n       \n            }\n      getList() {\n        return this.http.get(this.rootURL + 'Saison',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n      }\n      getListtable() {\n        return this.http.get(this.rootURL + 'Saison',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n      }\n    refreshList(){\n      this.http.get(this.rootURL+'Saison',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n      .toPromise().then(res => this.list = res as Saison[]);\n     \n     return this.http.get(this.rootURL+'Saison',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n     .toPromise();\n   \n   }\n \n   \n   deleteSaison(formData:Saison){\n    \n  this.http.delete<Saison>(this.rootURL+'saison/'+formData.SaisonID,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).subscribe(res => {\n      console.log(res);\n    }, err => {\n      console.log(err);\n    });\n   \n    return this.refreshList();\n  }\n  getNomSaison($key){\n    if ($key == \"0\")\n    return \"\";\n  else{\n    return _.find(this.list, (obj) => { return obj.$key == $key; })['NomSaison'];\n  } \n  }\n  initializeFormGroup() {\n    this.form.setValue({\n      SaisonID: null,\n      NomSaison: '',\n     \n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { User } from './user.model';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n  readonly rootUrl = 'http://localhost:56391';\n  constructor(private http: HttpClient) { }\n  formData:User;\n  form: FormGroup = new FormGroup({\n    userName: new FormControl(null),\n    password: new FormControl('', Validators.required),\n  });\n  registerUser(user: User) {\n    const body: User = {\n      UserName: user.UserName,\n      Password: user.Password,\n      Email: user.Email,\n      FirstName: user.FirstName,\n      LastName: user.LastName\n    }\n    var reqHeader = new HttpHeaders({'No-Auth':'True'});\n    return this.http.post(this.rootUrl + '/api/User/Register', body,{headers : reqHeader});\n  }\n\n  userAuthentication(formData : User) {\n\n    this.form.setValue(formData);\n\n    var data = \"username=\"+this.form.value['userName']+\"&password=\"+this.form.value['password']+\"&grant_type=password\";\n    \n    var reqHeader = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded','No-Auth':'True' });\n    var ret =this.http.post(this.rootUrl + '/token', data, { headers: reqHeader });\n    \n    return ret;\n  }\n\n  getUserClaims(){\n  var data =this.http.get(this.rootUrl+'/api/GetUserClaims',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n  console.log(localStorage.getItem('id'));\n  \n  return data;\n  }\n  getUserProfil(idchar : string){\n    var data =this.http.get(this.rootUrl+'/api/GetUserProfil/'+idchar,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n    console.log(data);\n  \n    return data;\n    }\n}","import { Injectable, ViewChild } from '@angular/core';\nimport { Utilisateur } from './utilisateur.model';\nimport {HttpClient, HttpHeaders}from \"@angular/common/http\";\nimport { ActivatedRoute } from '@angular/router';\nimport * as _ from 'lodash';\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Observable } from 'rxjs';\nimport {MatPaginator,MatTableDataSource, MatSort } from '@angular/material';\nimport { ProfilService } from './profil.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilisateurService {\n  formData:Utilisateur;\n  list :Utilisateur[]; \n  data:any;\n  public nom:string;\n  readonly rootURL =\"http://localhost:56391/api/\";\n   \n  constructor(private http : HttpClient,private serviceProfil : ProfilService) {}\n  displayedColumns:string[] = ['UtilisateurID','NomUtilisateur','NomProfil','action'];\n  dataSource= new MatTableDataSource<Utilisateur>();\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  @ViewChild(MatSort) sort:MatSort;\n  form: FormGroup = new FormGroup({\n    UtilisateurID: new FormControl(null),\n    NomUtilisateur: new FormControl('', Validators.required),\n    PrenomUtilisateur: new FormControl('', Validators.required),\n    MdpUtilisateur: new FormControl('', Validators.required),\n    LoggedOn: new FormControl(''),\n    GsmUtilisateur: new FormControl('', [Validators.required, Validators.minLength(8)]),   \n    EmailUtilisateur: new FormControl('',Validators.email),\n    ProfilUtilisateur: new FormControl(0),\n  \n  });\n\n  \n  postUtilisateur(formData : Utilisateur){\n    console.log(formData);\nreturn this.http.post<Utilisateur>(this.rootURL+'Utilisateur',formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n  }  \n  getUtilisateur():Observable<any>{\n    this.data = this.http.get(this.rootURL + 'Utilisateur',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n    \n   return this.data;  \n  \n  }\ngetNomUtilisateur(id:number){\n\n  this.http.get(this.rootURL + 'GetUserString/'+id,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise().then(res => {\n   this.setNom(res);\n  \n  });\n\n\n}\n\nsetNom(res:any){\n  console.log(res);\nthis.nom=res;\n\n}\ngetNom(){\n  return this.nom;\n}\n  getutl(formData:Utilisateur){\n   \n    this.form.setValue(formData);\n  \n  }\n  putUtilisateur(formData:Utilisateur){\n    \n    this.form.setValue(formData);\n    this.data=this.http.put<Utilisateur>(this.rootURL+'Utilisateur/'+formData.UtilisateurID,formData,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n    return this.data;\n      }\n      getByID(id:number){\n       \n        var val=\"Reading...\";\n        if(this.list){\n            for(var i=0;i<this.list.length;i++){\n              if(this.list[i].UtilisateurID==id){\n                val=this.list[i]['NomUtilisateur'];\n                \n              } } } return val;\n         /*   var subject = new Subject<string>();\n         this.http.get<Profil>(this.rootURL+'Profil/'+id).subscribe((res:any) => {\n         this.list=res;\n        this.val=\"\";\n         for(var i=0;i<this.list.length;i++){\n           if(this.list[i].ProfilID==id){\n          this.formData=Object.assign({},this.list[i]);\n          this.val= this.formData['NomProfil'];\n          subject.next(this.val);} }\n         \n                  });*/\n        \n    \n        \n                 \n           \n                }\n      getList() {\n        return this.http.get(this.rootURL + 'Utilisateur',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).toPromise();\n      }\n      getListtable() {\n        return this.http.get(this.rootURL + 'Utilisateur',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})});\n      }\n      refreshList(){\n        this.http.get(this.rootURL+'UtilisateurP/6',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n        .toPromise().then(res => this.list = res as Utilisateur[]);\n       \n       return this.http.get(this.rootURL+'UtilisateurP/6',{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})})\n       .toPromise();\n     \n     }\n \n   \n   deleteUtilisateur(formData:Utilisateur){\n    \n  this.http.delete<Utilisateur>(this.rootURL+'Utilisateur/'+formData.UtilisateurID,{headers: new HttpHeaders({'Authorization':'Bearer '+localStorage.getItem('userToken')})}).subscribe(res => {\n      console.log(res);\n    }, err => {\n      console.log(err);\n    });\n   \n    return this.refreshList();\n  }\npform(Utilisateurs){\n  console.log(Utilisateurs);\n this.form.setValue(_.omit(Utilisateurs,'NomProfil'));\n\n}\ninitializeFormGroup() {\n  this.form.setValue({\n    UtilisateurID: null,\n    NomUtilisateur: '',\n    PrenomUtilisateur: '',\n    MdpUtilisateur: '',\n    GsmUtilisateur: '',\n    EmailUtilisateur: '',\n    LoggedOn:'',\n    ProfilUtilisateur: 0,\n   \n  });\n}\n}\n","module.exports = \"mat-card {\\r\\n    max-width: 400px;\\r\\n    margin: 2em auto;\\r\\n    text-align: center;\\r\\n  }\\r\\n  .signin-content {\\r\\n    padding: 60px 1rem;\\r\\n  }\\r\\n  .full-width-input {\\r\\n    width: 100%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9zaWduLWluL3NpZ24taW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsbUJBQW1CO0dBQ3BCO0VBQ0Q7SUFDRSxtQkFBbUI7R0FDcEI7RUFDRDtJQUNFLFlBQVk7R0FDYiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XHJcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gICAgbWFyZ2luOiAyZW0gYXV0bztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbiAgLnNpZ25pbi1jb250ZW50IHtcclxuICAgIHBhZGRpbmc6IDYwcHggMXJlbTtcclxuICB9XHJcbiAgLmZ1bGwtd2lkdGgtaW5wdXQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfSJdfQ== */\"","module.exports = \"<div class=\\\"signin-content\\\">\\n  <mat-card>\\n    <mat-card-content>\\n      <form [formGroup]=\\\"service.form\\\"   (ngSubmit)=\\\"OnSubmit()\\\">\\n        <p>Please login to continue</p>\\n        <mat-form-field class=\\\"full-width-input\\\">\\n          <input matInput placeholder=\\\"User\\\" formControlName=\\\"userName\\\" required>\\n          <mat-error >\\n            Please inform your user name\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"full-width-input\\\">\\n          <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required>\\n          <mat-error >\\n            Please inform your password\\n          </mat-error>\\n        </mat-form-field>\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Login</button>\\n      </form>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../shared/user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n  isLoginError : boolean = false;\n  constructor(public service : UserService,private router : Router) { }\n\n  ngOnInit() {\n  }\n\n  OnSubmit(){\nconsole.log(this.service.form.value);\n     this.service.userAuthentication(this.service.form.value).subscribe((data : any)=>{\n      localStorage.setItem('userToken',data.access_token);\n      this.service.getUserClaims().then((data : any)=>{\n        console.log(data);\n        localStorage.setItem('id',data.IdChar);\n        localStorage.setItem('IdInt',data.UtilisateurID);\n        localStorage.setItem('profil',data.ProfilUtilisateur);\n        localStorage.setItem('club',data.ClubID);\n       })\n       \n      \n    }\n    \n    ,\n    (err : HttpErrorResponse)=>{\n      this.isLoginError = true;\n    });\n    if(localStorage.getItem('id')!=''){\n      this.router.navigate(['/home/dashboard']);\n    }\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  user works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXRpbGlzYXRldXJzL3Byb2ZpbC1saXN0L3Byb2ZpbC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0dBQ2IiLCJmaWxlIjoic3JjL2FwcC91dGlsaXNhdGV1cnMvcHJvZmlsLWxpc3QvcHJvZmlsLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH0iXX0= */\"","module.exports = \"<mat-card><h6 style=\\\"color: #8d8a8a;float: left\\\">Paramétre</h6> / Profil</mat-card>\\n<div class=\\\"search-div\\\">\\n  <button mat-raised-button (click)=\\\"AddOrEditOrderItem(null,null)\\\">\\n    <mat-icon>add</mat-icon>Ajouter\\n  </button>\\n  <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n    <input matInput [(ngModel)]=\\\"searchKey\\\" placeholder=\\\"Chercher\\\" autocomplete=\\\"off\\\" (keyup)=\\\"applyFilter()\\\">\\n    <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\"*ngIf=\\\"searchKey\\\"  (click)=\\\"onSearchClear()\\\">\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"ProfilID\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.ProfilID}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"NomProfil\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Profil </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.NomProfil}} </td>\\n    </ng-container>\\n\\n \\n  <ng-container matColumnDef=\\\"action\\\" >\\n          <th mat-header-cell *matHeaderCellDef> Action </th>\\n    <td mat-cell *matCellDef=\\\"let element ; let i=index;\\\">\\n        <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"onEdit(element)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n      <a class=\\\"btn btn-sm btn-danger text-white\\\" style=\\\"margin-left:5px;\\\" (click)=\\\"onDelete(element)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n   </td> \\n      </ng-container>\\n  <ng-container matColumnDef=\\\"loading\\\">\\n              <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n                      Chargement des données...\\n              </mat-footer-cell>\\n  </ng-container>\\n            <ng-container matColumnDef=\\\"noData\\\">\\n              <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n                      Pas de données.\\n              </mat-footer-cell>\\n            </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':dataSource!=null}\\\"></mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\" [ngClass]=\\\"{'hide':!(dataSource!=null && dataSource.data.length==0)}\\\"></mat-footer-row>\\n  </table>\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProfilService } from '../../shared/profil.service';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Profil } from 'src/app/shared/profil.model';\nimport { MatDialog, MatDialogConfig,MatPaginator,MatTableDataSource, MatSort } from '@angular/material';\n\nimport { ProfilComponent } from '../profil/profil.component';\n\n\n@Component({\n  selector: 'app-profil-list',\n  templateUrl: './profil-list.component.html',\n  styleUrls: ['./profil-list.component.css']\n})\nexport class ProfilListComponent implements OnInit {\n\n  constructor(public service : ProfilService,public dialog:MatDialog,public toastr : ToastrService) { }\n  displayedColumns:string[] = ['ProfilID','NomProfil','action'];\n  dataSource= new MatTableDataSource<Profil>();\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  @ViewChild(MatSort) sort:MatSort;\n  searchKey:string;\n\n\n  ngOnInit() {\n    this.service.refreshList().then((data: any) => {\n      this.dataSource.data=data;\n          });\n          this.dataSource.sort=this.sort;\n          this.dataSource.paginator=this.paginator;\n  }\n  populateForm(atr : Profil){ \n    this.service.formData=Object.assign({},atr);\n  }\n  /*onDelete(id : number){\n    if(confirm(\"are you sur ?\")){\n  this.service.deleteProfil(id).subscribe(res =>{\n    this.service.refreshList();\n    this.toastr.warning('Delete Successfully','EMP.Register');\n  })\n    }\n  }*/\n  AddOrEditOrderItem(itemIndex,Id){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus=true;\n    dialogConfig.disableClose=true;\n    dialogConfig.width=\"50%\";\n    dialogConfig.data={itemIndex,Id};\n    this.service.formData = Object.assign({},  this.service.list[itemIndex]);\nthis.dialog.open(ProfilComponent,dialogConfig);\n\n  }\n  onEdit(row){\n   const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"60%\";\n    dialogConfig.data=row;\n    this.service.getutl(row);\n    this.dialog.open(ProfilComponent,dialogConfig);   \n    \n  }\n\n  onDelete(row){\n    if(confirm('Are you sure to delete this record ?')){\n      \n    this.service.deleteProfil(row).then((data: any) => {\n      this.dataSource.data=data;\n          });\n    this.toastr.warning('! Deleted successfully');\n    }}\n  onSearchClear(){\n    this.searchKey=\"\";\n    this.applyFilter();\n  }\n  applyFilter(){\n    this.dataSource.filter=this.searchKey.trim().toLowerCase();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0aWxpc2F0ZXVycy9wcm9maWwvcHJvZmlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-toolbar>\\n  <span>Profil</span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\"><mat-icon>clear</mat-icon></button>\\n</mat-toolbar>\\n<form [formGroup]=\\\"service.form\\\" class=\\\"normal-form\\\" (submit)=\\\"onSubmit()\\\">\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"300px\\\">\\n    <mat-grid-tile>\\n      <div class=\\\"controles-container\\\">\\n        \\n        <input type=\\\"hidden\\\" formControlName=\\\"ProfilID\\\">\\n        <mat-form-field>\\n          <input formControlName=\\\"NomProfil\\\" matInput placeholder=\\\"Profil *\\\">\\n          <mat-error>This field is mandatory.</mat-error>\\n        </mat-form-field>\\n       \\n       \\n      </div>\\n    </mat-grid-tile>\\n    <mat-grid-tile>\\n      <div class=\\\"controles-container\\\">\\n        <div class=\\\"button-row\\\">\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"service.form.invalid\\\">Submit</button>\\n          <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear()\\\">Clear</button>\\n        </div>\\n      </div>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</form>\"","\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { ProfilService } from '../../shared/profil.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog, MatDialogConfig, MAT_DIALOG_DATA, MatTableDataSource } from '@angular/material';\nimport { inherits } from 'util';\nimport  { ProfilListComponent } from '../profil-list/profil-list.component';\nimport { Router } from '@angular/router';\nimport { Profil } from 'src/app/shared/profil.model';\n\n@Component({\n  selector: 'app-profil',\n  templateUrl: './profil.component.html',\n  styleUrls: ['./profil.component.css']\n})\nexport class ProfilComponent implements OnInit {\n  dataSource= new MatTableDataSource<Profil>();\n \n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef:MatDialog,\n    public service : ProfilService,\n    \n    public toastr : ToastrService,\n    private dialog:MatDialog,\n    private router:Router,\n   ) {\n      \n     }\n   \n      onClear() {\n       \n        this.service.form.reset();\n        this.service.initializeFormGroup();\n      }\n  ngOnInit() {\n/*this.service.getList().then(res => this.service.list=res as Profil[]);\nif(this.service.formData.ProfilID==null)\n    this.resetForm();*/\n   \n  }\n  resetForm(form? : NgForm){\n    if(form != null)\n    form.resetForm();\n    \n    this.service.formData = {\n    ProfilID:null,\n    NomProfil :'',\n    \n    }\n  }\n  \n  onSubmit(){\n    console.log(this.service.form.get('ProfilID').value);\n    if (this.service.form.valid)\n    if (!this.service.form.get('ProfilID').value)\n    this.insertRecord(this.service.form.value)\n    else\n    this.updateRecord(this.service.form.value);\n    this.service.form.reset();\n      this.service.initializeFormGroup();\n    this.dialogRef.closeAll()\n    \n  }\n\n  insertRecord(form : NgForm){\n  \n    \nthis.service.postProfil(this.service.form.value).then((data: any) =>{ \n  this.dataSource.data=data;\n  this.toastr.success('Inserted Successfully','EMP.Register');\n  this.service.refreshList();\n  \n  this.resetForm(form)});\n\n  }\n  updateRecord(form : NgForm){\n    \n    this.service.putProfil(this.service.form.value).subscribe(res =>{ \n      this.service.refreshList().then((data: any) => {\n        this.dataSource.data=data;\n            });\n      this.resetForm(form)});\n     \n      this.toastr.info('Update Successfully','EMP.Register');\n     \n    }\n    onClose() {\n      this.service.form.reset();\n      this.service.initializeFormGroup();\n      this.dialogRef.closeAll();\n    }\n\n   \n}\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXRpbGlzYXRldXJzL3V0aWxpc2F0ZXVyLWxpc3QvdXRpbGlzYXRldXItbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtHQUNiIiwiZmlsZSI6InNyYy9hcHAvdXRpbGlzYXRldXJzL3V0aWxpc2F0ZXVyLWxpc3QvdXRpbGlzYXRldXItbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfSJdfQ== */\"","module.exports = \"<!--<a class=\\\"btn btn-sm btn-success text-white\\\" style=\\\"margin-bottom: 5px;\\\" (click)=\\\"AddOrEditOrderItem(null,null)\\\"><i class=\\\"fa fa-plus\\\"> Ajouter</i></a>\\n    <div class=\\\"mat-elevation-z8\\\">\\n<table class=\\\"table table-striped table-hover\\\" [mfData]=\\\"data\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"5\\\">\\n    <thead>\\n        <tr mat-header-row >\\n          <th ><mfDefaultSorter by=\\\"NomUtilisateur\\\">Nom Prenom</mfDefaultSorter></th>\\n          <th ><mfDefaultSorter by=\\\"GsmUtilisateur\\\">Gsm</mfDefaultSorter></th>\\n          <th ><mfDefaultSorter by=\\\"EmailUtilisateur\\\">Email</mfDefaultSorter></th>\\n          <th><mfDefaultSorter >Action</mfDefaultSorter></th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n     \\n  <tr mat-row *ngFor=\\\"let utl of service.list; let i=index;\\\">\\n        <ng-container matColumnDef=\\\"position\\\">\\n            <td (click)=\\\"populateForm(utl)\\\"><b>{{utl.NomUtilisateur}}</b>  {{utl.PrenomUtilisateur}}</td>\\n   \\n    <td (click)=\\\"populateForm(utl)\\\">{{utl.GsmUtilisateur}}</td>\\n    <td (click)=\\\"populateForm(utl)\\\">{{utl.EmailUtilisateur}}</td>\\n    <td><a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"AddOrEditOrderItem(i,utl.UtilisateurID)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n        <a class=\\\"btn btn-sm btn-danger text-white\\\" style=\\\"margin-left:5px;\\\" (click)=\\\"onDelete(utl.UtilisateurID)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n\\n    </td></ng-container> \\n  </tr>\\n</tbody>\\n<tfoot>\\n    <tr>\\n        <td colspan=\\\"4\\\">\\n            <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\n        </td>\\n    </tr>\\n    </tfoot>\\n</table>\\n\\n</div>-->\\n<mat-card><h6 style=\\\"color: #8d8a8a;float: left\\\">Paramétre</h6> / Utilisateur</mat-card>\\n<div class=\\\"search-div\\\">\\n        <button mat-raised-button (click)=\\\"AddOrEditOrderItem()\\\">\\n          <mat-icon>add</mat-icon>Ajouter\\n        </button>\\n        <mat-form-field class=\\\"search-form-field\\\" floatLabel=\\\"never\\\">\\n          <input matInput [(ngModel)]=\\\"searchKey\\\" placeholder=\\\"Chercher\\\" autocomplete=\\\"off\\\" (keyup)=\\\"applyFilter()\\\">\\n          <button mat-button matSuffix mat-icon-button aria-label=\\\"Clear\\\"*ngIf=\\\"searchKey\\\"  (click)=\\\"onSearchClear()\\\">\\n            <mat-icon>close</mat-icon>\\n          </button>\\n        </mat-form-field>\\n      </div>\\n<div class=\\\"mat-elevation-z8\\\">\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n      \\n          <!-- Position Column -->\\n          <ng-container matColumnDef=\\\"UtilisateurID\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> No. </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.UtilisateurID}} </td>\\n          </ng-container>\\n      \\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"NomUtilisateur\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Nom Prenom </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.NomUtilisateur}} </td>\\n          </ng-container>\\n      \\n          <!-- Weight Column -->\\n          <ng-container matColumnDef=\\\"GsmUtilisateur\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> GSM </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GsmUtilisateur}} </td>\\n          </ng-container>\\n      \\n          <!-- Symbol Column -->\\n          <ng-container matColumnDef=\\\"EmailUtilisateur\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.EmailUtilisateur}} </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"NomProfil\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Profil </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.NomProfil}} </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"action\\\" >\\n                <th mat-header-cell *matHeaderCellDef> Action </th>\\n          <td mat-cell *matCellDef=\\\"let element ; let i=index;\\\">\\n              <a class=\\\"btn btn-sm btn-info text-white\\\" (click)=\\\"onEdit(element)\\\"><i class=\\\"fa fa-pencil\\\"></i></a>\\n            <a class=\\\"btn btn-sm btn-danger text-white\\\" style=\\\"margin-left:5px;\\\" (click)=\\\"onDelete(element.UtilisateurID)\\\"><i class=\\\"fa fa-trash\\\"></i></a>\\n        </td> \\n            </ng-container>\\n            <ng-container matColumnDef=\\\"loading\\\">\\n                    <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n                            Chargement des données...\\n                    </mat-footer-cell>\\n                  </ng-container>\\n                  <ng-container matColumnDef=\\\"noData\\\">\\n                    <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\">\\n                            Pas de données.\\n                    </mat-footer-cell>\\n                  </ng-container>\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n          <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hide':dataSource!=null}\\\"></mat-footer-row>\\n          <mat-footer-row *matFooterRowDef=\\\"['noData']\\\" [ngClass]=\\\"{'hide':!(dataSource!=null && dataSource.data.length==0)}\\\"></mat-footer-row>\\n        </table>\\n      \\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n      </div>\\n      \\n\\n     \"","import { Component, OnInit, ViewChild,Injectable  } from '@angular/core';\nimport { UtilisateurService } from '../../shared/utilisateur.service';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { Utilisateur } from 'src/app/shared/utilisateur.model';\nimport { MatDialog, MatDialogConfig,MatPaginator,MatTableDataSource, MatSort } from '@angular/material';\n\nimport { UtilisateurComponent } from '../utilisateur/utilisateur.component';\nimport { ProfilService } from 'src/app/shared/profil.service';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-utilisateur-list',\n  templateUrl: './utilisateur-list.component.html',\n  styleUrls: ['./utilisateur-list.component.css']\n})\nexport class UtilisateurListComponent implements OnInit {\n\n  constructor(public service : UtilisateurService,public serviceProfil : ProfilService,private dialog:MatDialog,public toastr : ToastrService) { }\n  displayedColumns:string[] = ['UtilisateurID','NomUtilisateur','EmailUtilisateur','NomProfil','action'];\n  dataSource= new MatTableDataSource<Utilisateur>();\n  @ViewChild(MatPaginator) paginator:MatPaginator;\n  @ViewChild(MatSort) sort:MatSort;\n  searchKey:string;\n  myData: Array < any > ;\n  public var:string;\n \n  ngOnInit() {\n    this.serviceProfil.refreshList();\n    this.service.getUtilisateur().subscribe(\n      \n      list => {\n       \n        let array = list.map(item => {\n        let NomProfil=this.serviceProfil.getByID(item[\"ProfilUtilisateur\"]);\n          return {\n            NomProfil,\n            ...item\n           \n           \n          };\n        });\n      \n        this.service.dataSource = new MatTableDataSource(array);\n        this.dataSource=this.service.dataSource;\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.filterPredicate = (data, filter) => {\n          return this.displayedColumns.some(ele => {\n            return ele != 'actions' && data[ele].toLowerCase().indexOf(filter) != -1;\n          });\n        };\n      });\n  }\n  populateForm(atr : Utilisateur){ \n    this.service.formData=Object.assign({},atr);\n  }\n \n  AddOrEditOrderItem(){\n \n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus=true;\n    dialogConfig.disableClose=true;\n    dialogConfig.width=\"50%\";\n  \nthis.dialog.open(UtilisateurComponent,dialogConfig);\n\n  }\n  onEdit(row){\n   \n    this.service.pform(row);\n   const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"60%\";\n   /* dialogConfig.data=row;\n    this.service.getutl(row); */\n    this.dialog.open(UtilisateurComponent,dialogConfig);  \n    \n  }\n  onDelete(row){\n    if(confirm('Are you sure to delete this record ?')){\n      \n    this.service.deleteUtilisateur(row).then((data: any) => {\n   this.ngOnInit();\n          });\n    this.toastr.warning('! Deleted successfully');\n    }}\n \n  onSearchClear(){\n    this.searchKey=\"\";\n    this.applyFilter();\n  }\n  applyFilter(){\n    this.service.dataSource.filter=this.searchKey.trim().toLowerCase();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0aWxpc2F0ZXVycy91dGlsaXNhdGV1ci91dGlsaXNhdGV1ci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--<form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit(form)\\\" autocomplete=\\\"off\\\">\\n  <input  type=\\\"hidden\\\" name=\\\"UtilisateurID\\\" #UtilisateurID=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.UtilisateurID\\\"  >\\n \\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"\\\">\\n     Nom\\n    </label>\\n    <input name=\\\"NomUtilisateur\\\" #NomUtilisateur=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.NomUtilisateur\\\" class=\\\"form-control\\\" required>\\n  <div class=\\\"validation-error\\\" *ngIf=\\\"NomUtilisateur.invalid && NomUtilisateur.touched\\\" >\\n    This field in valide\\n  </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"\\\">\\n      Prenom\\n    </label>\\n    <input name=\\\"PrenomUtilisateur\\\" #PrenomUtilisateur=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.PrenomUtilisateur\\\" class=\\\"form-control\\\">\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-6\\\">\\n      <label >\\n        Mot de passe\\n      </label>\\n      <input name=\\\"MdpUtilisateur\\\" #MdpUtilisateur=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.MdpUtilisateur\\\" class=\\\"form-control\\\">\\n    </div>\\n    <div class=\\\"form-group col-md-6\\\">\\n      <label for=\\\"\\\">\\n        Email\\n      </label>\\n      <input  type=\\\"email\\\"  ngModel email=\\\"true\\\" name=\\\"EmailUtilisateur\\\" #EmailUtilisateur=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.EmailUtilisateur\\\" class=\\\"form-control\\\">\\n    </div>\\n    <div class=\\\"form-group col-md-6\\\">\\n      <label for=\\\"\\\">\\n        GSM \\n      </label>\\n      <input  ngModel ng-model=\\\"phoneVal\\\" name=\\\"GsmUtilisateur\\\" #GsmUtilisateur=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.GsmUtilisateur\\\" class=\\\"form-control\\\">\\n    </div>\\n    <div class=\\\"form-group col-md-6\\\">\\n      <label for=\\\"\\\">\\n        Profil \\n      </label>\\n       <select name=\\\"ProfilUtilisateur\\\" #ProfilUtilisateur=\\\"ngModel\\\" [(ngModel)]=\\\"service.formData.ProfilUtilisateur\\\" class=\\\"form-control\\\">\\n      <option value=\\\"1\\\">test 1</option>\\n      <option value=\\\"2\\\">test 2</option>\\n      <option value=\\\"3\\\">test 3</option>\\n      <option value=\\\"4\\\">test 4</option>\\n    </select>\\n    </div>\\n  </div> \\n  <div class=\\\"form-group\\\">\\n      <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btn-dark\\\">\\n          <i class=\\\"fa fa-database\\\"></i>\\n        Submit\\n      </button>\\n      <button  class=\\\"btn btn-outline-dark ml-1\\\" [mat-dialog-close]>\\n        <i class=\\\"fa fa-close\\\"></i>\\n        Annuler\\n      </button>\\n    </div>\\n</form>-->\\n\\n<mat-toolbar>\\n    <span>Utilisateur</span>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <button class=\\\"btn-dialog-close\\\" mat-stroked-button (click)=\\\"onClose()\\\" tabIndex=\\\"-1\\\"><mat-icon>clear</mat-icon></button>\\n  </mat-toolbar>\\n<form [formGroup]=\\\"service.form\\\" class=\\\"normal-form\\\" (submit)=\\\"onSubmit()\\\">\\n    <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"300px\\\">\\n      <mat-grid-tile>\\n        <div class=\\\"controles-container\\\">\\n          \\n          <input type=\\\"hidden\\\" formControlName=\\\"UtilisateurID\\\">\\n          <mat-form-field>\\n            <input formControlName=\\\"NomUtilisateur\\\" matInput placeholder=\\\"Nom *\\\">\\n            <mat-error>This field is mandatory.</mat-error>\\n          </mat-form-field>\\n          <mat-form-field>\\n              <input formControlName=\\\"PrenomUtilisateur\\\" matInput placeholder=\\\"Prenom *\\\">\\n              <mat-error>This field is mandatory.</mat-error>\\n            </mat-form-field>\\n         \\n          <mat-form-field>\\n            <input formControlName=\\\"GsmUtilisateur\\\" matInput placeholder=\\\"Gsm *\\\">\\n            <mat-error *ngIf=\\\"service.form.controls['GsmUtilisateur'].errors?.required\\\">This field is mandatory.</mat-error>\\n            <mat-error *ngIf=\\\"service.form.controls['GsmUtilisateur'].errors?.minlength\\\">Minimum 8 charactors needed.</mat-error>\\n          </mat-form-field>\\n         \\n        </div>\\n      </mat-grid-tile>\\n      <mat-grid-tile>\\n        <div class=\\\"controles-container\\\">\\n            <mat-form-field>\\n                <input formControlName=\\\"EmailUtilisateur\\\" matInput placeholder=\\\"Email\\\">\\n                <mat-error>Invalid email address.</mat-error>\\n              </mat-form-field>\\n              \\n            <mat-form-field>\\n                <input formControlName=\\\"MdpUtilisateur\\\" type=\\\"password\\\"  matInput placeholder=\\\"Mot de passe *\\\">\\n                <mat-error>This field is mandatory.</mat-error>\\n              </mat-form-field>\\n             \\n          <mat-form-field>\\n            <mat-select formControlName=\\\"ProfilUtilisateur\\\"  placeholder=\\\"Profil\\\">\\n              <mat-option>None</mat-option>\\n              <ng-container *ngFor=\\\"let lst of dataSourceProfil.data\\\" >\\n                <mat-option [value]=\\\"lst.ProfilID\\\">{{lst.NomProfil}}</mat-option>\\n             \\n              </ng-container>\\n            </mat-select>\\n          </mat-form-field>\\n         \\n          <div class=\\\"button-row\\\">\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"service.form.invalid\\\">Submit</button>\\n            <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClose()\\\">Clear</button>\\n          </div>\\n        </div>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n  </form>\"","\nimport { Component, OnInit, Inject,ChangeDetectorRef } from '@angular/core';\nimport { UtilisateurService } from '../../shared/utilisateur.service';\nimport { ProfilService } from '../../shared/profil.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatDialog, MAT_DIALOG_DATA, MatTableDataSource } from '@angular/material';\n\nimport { Utilisateur } from 'src/app/shared/utilisateur.model';\nimport { Profil } from 'src/app/shared/profil.model';\n\n@Component({\n  selector: 'app-utilisateur',\n  templateUrl: './utilisateur.component.html',\n  styleUrls: ['./utilisateur.component.css']\n})\nexport class UtilisateurComponent implements OnInit {\n  dataSource= new MatTableDataSource<Utilisateur>();\n  dataSourceProfil= new MatTableDataSource<Profil>();\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data,\n    public dialogRef:MatDialog,\n    public service : UtilisateurService,\n    private servProfil : ProfilService,\n    private toastr : ToastrService,\n\n\n   ) {\n      \n     }\n   \n  \n  ngOnInit() {\n    this.service.refreshList();\n    this.servProfil.refreshList().then((data: any) => {\n      this.dataSourceProfil.data=data;\n    \n          });\n\n  }\n  resetForm(form? : NgForm){\n  \n    this.service.formData = {\n    UtilisateurID:null,\n    NomUtilisateur :'',\n    PrenomUtilisateur :'',\n    MdpUtilisateur :'',\n    EmailUtilisateur :'',\n    GsmUtilisateur :'',\n    LoggedOn :'',\n    ProfilUtilisateur :null,\n    }\n  }\n  onSubmit() {\n    if (this.service.form.valid) {\n      if (!this.service.form.get('UtilisateurID').value)\n        this.service.postUtilisateur(this.service.form.value).then((data: any) =>{ \n          this.dataSource.data=data;\n        });\n      else\n      this.service.putUtilisateur(this.service.form.value).subscribe(res =>{ \n        this.service.getUtilisateur();\n      });\n      this.service.form.reset();\n      this.service.initializeFormGroup();     \n      this.toastr.success(':: Submitted successfully');\n      this.onClose();\n      \n    }\n  }\n  \n \n    onClose() {\n      this.service.form.reset();\n      this.service.initializeFormGroup();\n      this.dialogRef.closeAll();\n    }\n\n   \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3V0aWxpc2F0ZXVycy91dGlsaXNhdGV1cnMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"jumbotron\\\" >\\n  <h1 class=\\\"display-4 text-center\\\">\\n    Utilisateur Register\\n  </h1>\\n  <hr>\\n  <div class=\\\"row\\\">\\n  \\n  <div class=\\\"col-md-12\\\">\\n<app-utilisateur-list>\\n  \\n</app-utilisateur-list>\\n\\n  </div>\\n \\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-utilisateurs',\n  templateUrl: './utilisateurs.component.html',\n  styleUrls: ['./utilisateurs.component.css']\n})\nexport class UtilisateursComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}